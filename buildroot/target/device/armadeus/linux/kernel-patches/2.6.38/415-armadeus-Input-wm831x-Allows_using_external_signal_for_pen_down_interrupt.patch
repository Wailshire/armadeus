Handles pen_down interrupt from a direct signal too.

Signed-off-by: Julien Boibessot <julien.boibessot@armadeus.com>

Index: linux-2.6.38-alpha/drivers/input/touchscreen/wm831x-ts.c
===================================================================
--- linux-2.6.38-alpha.orig/drivers/input/touchscreen/wm831x-ts.c	2011-01-03 18:02:37.000000000 +0100
+++ linux-2.6.38-alpha/drivers/input/touchscreen/wm831x-ts.c	2011-01-03 20:49:49.000000000 +0100
@@ -98,6 +98,7 @@
 	struct input_dev *input_dev;
 	struct wm831x *wm831x;
 	int data_irq;
+	int pd_irq;
 	bool pressure;
 };
 
@@ -168,6 +169,13 @@
 	input_report_key(wm831x_ts->input_dev, BTN_TOUCH, 1);
 	input_sync(wm831x_ts->input_dev);
 
+	/* If we're using a direct signal for the pen_down IRQ we still need
+	 * to ack the interrupt.
+	 */
+	if (wm831x_ts->pd_irq)
+		wm831x_set_bits(wm831x, WM831X_INTERRUPT_STATUS_1,
+				WM831X_TCHPD_EINT, WM831X_TCHPD_EINT);
+
 	return IRQ_HANDLED;
 }
 
@@ -224,9 +232,12 @@
 	/* If we have a direct CPU data IRQ use it, otherwise use
 	 * the interrupt through the WM831x IRQ controller.
 	 */
-	if (pdata)
+	if (pdata && pdata->data_irq)
 		wm831x_ts->data_irq = pdata->data_irq;
 
+	if (pdata && pdata->pd_irq)
+		wm831x_ts->pd_irq = pdata->pd_irq;
+
 	if (pdata && pdata->pressure)
 		wm831x_ts->pressure = true;
 	else
@@ -282,19 +293,26 @@
 					   IRQF_ONESHOT, /* Trigger */
 					   "Touchscreen data", wm831x_ts);
 	if (ret < 0) {
-		dev_err(&pdev->dev, "Failed to request IRQ %d: %d\n",
+		dev_err(&pdev->dev, "Failed to request data IRQ %d: %d\n",
 			wm831x_ts->data_irq, ret);
 		goto err_alloc;
 	}
 
-	ret = request_threaded_irq(platform_get_irq_byname(pdev,
-							   "TCHPD"),
-				   NULL, wm831x_ts_pen_down_irq,
-				   IRQF_ONESHOT, /* Trigger */
-				   "Touchscreen pen down", wm831x_ts);
+	if (wm831x_ts->pd_irq)
+		ret = request_threaded_irq(wm831x_ts->pd_irq, NULL,
+					   wm831x_ts_pen_down_irq,
+					   IRQF_ONESHOT, /* Trigger */
+					   "Touchscreen pen down", wm831x_ts);
+	else
+		ret = request_threaded_irq(platform_get_irq_byname(pdev,
+								   "TCHPD"),
+					   NULL, wm831x_ts_pen_down_irq,
+					   IRQF_ONESHOT, /* Trigger */
+					   "Touchscreen pen down", wm831x_ts);
+
 	if (ret < 0) {
-		dev_err(&pdev->dev, "Failed to request pen down IRQ: %d\n",
-			ret);
+		dev_err(&pdev->dev, "Failed to request pen down IRQ: %d %d\n",
+			wm831x_ts->pd_irq, ret);
 		goto err_data_irq;
 	}
 
@@ -334,7 +352,10 @@
 err_dev_alloc:
 	input_free_device(input_dev);
 err_pd_irq:
-	free_irq(platform_get_irq_byname(pdev, "TCHPD"), wm831x_ts);
+	if (wm831x_ts->pd_irq)
+		free_irq(wm831x_ts->pd_irq, wm831x_ts);
+	else
+		free_irq(platform_get_irq_byname(pdev, "TCHPD"), wm831x_ts);
 err_data_irq:
 	if (wm831x_ts->data_irq)
 		free_irq(wm831x_ts->data_irq, wm831x_ts);
@@ -350,7 +371,10 @@
 {
 	struct wm831x_ts *wm831x_ts = platform_get_drvdata(pdev);
 
-	free_irq(platform_get_irq_byname(pdev, "TCHPD"), wm831x_ts);
+	if (wm831x_ts->pd_irq)
+		free_irq(wm831x_ts->pd_irq, wm831x_ts);
+	else
+		free_irq(platform_get_irq_byname(pdev, "TCHPD"), wm831x_ts);
 	if (wm831x_ts->data_irq)
 		free_irq(wm831x_ts->data_irq, wm831x_ts);
 	else
Index: linux-2.6.38-alpha/include/linux/mfd/wm831x/pdata.h
===================================================================
--- linux-2.6.38-alpha.orig/include/linux/mfd/wm831x/pdata.h	2010-12-14 09:55:53.000000000 +0100
+++ linux-2.6.38-alpha/include/linux/mfd/wm831x/pdata.h	2011-01-03 20:49:02.000000000 +0100
@@ -81,6 +81,7 @@
 	int rpu;               /** Pen down sensitivity resistor divider */
 	int pressure;          /** Report pressure (boolean) */
 	int data_irq;          /** Touch data ready IRQ */
+	int pd_irq;            /** Touch pendown detect IRQ */
 };
 
 enum wm831x_watchdog_action {
