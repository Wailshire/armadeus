Handles Pen_Down interrupt.

Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/drivers/input/touchscreen/wm831x-ts.c b/drivers/input/touchscreen/wm831x-ts.c
index 51d1863..3617748 100644
--- a/drivers/input/touchscreen/wm831x-ts.c
+++ b/drivers/input/touchscreen/wm831x-ts.c
@@ -126,16 +126,21 @@ static irqreturn_t wm831x_ts_data_irq(int irq, void *irq_data)
 	 * individual reading does so.
 	 */
 	for (i = 0; i < count; i++) {
+		if (!(data[i] & WM831X_TCH_PD)) {
+			pen_down = false;
+			continue;
+		}
 		input_report_abs(wm831x_ts->input_dev, data_types[i],
 				 data[i] & WM831X_TCH_DATA_MASK);
-		if (!data[i] & WM831X_TCH_PD)
-			pen_down = false;
 	}
 
-	if (pen_down) {
-		input_report_key(wm831x_ts->input_dev, BTN_TOUCH, 1);
-	} else {
-		input_report_abs(wm831x_ts->input_dev, ABS_PRESSURE, 0);
+	if (!pen_down) {
+		wm831x_set_bits(wm831x, WM831X_TOUCH_CONTROL_1,
+				WM831X_TCH_CVT_ENA, 0);
+
+		if (wm831x_ts->pressure)
+			input_report_abs(wm831x_ts->input_dev,
+					 ABS_PRESSURE, 0);
 		input_report_key(wm831x_ts->input_dev, BTN_TOUCH, 0);
 	}
 
@@ -144,6 +149,20 @@ static irqreturn_t wm831x_ts_data_irq(int irq, void *irq_data)
 	return IRQ_HANDLED;
 }
 
+static irqreturn_t wm831x_ts_pen_down_irq(int irq, void *irq_data)
+{
+	struct wm831x_ts *wm831x_ts = irq_data;
+	struct wm831x *wm831x = wm831x_ts->wm831x;
+
+	wm831x_set_bits(wm831x, WM831X_TOUCH_CONTROL_1,
+			WM831X_TCH_CVT_ENA, WM831X_TCH_CVT_ENA);
+
+	input_report_key(wm831x_ts->input_dev, BTN_TOUCH, 1);
+	input_sync(wm831x_ts->input_dev);
+
+	return IRQ_HANDLED;
+}
+
 static int wm831x_ts_input_open(struct input_dev *idev)
 {
 	struct wm831x_ts *wm831x_ts = input_get_drvdata(idev);
@@ -154,11 +173,9 @@ static int wm831x_ts_input_open(struct input_dev *idev)
 		ena |= WM831X_TCH_Z_ENA;
 
 	wm831x_set_bits(wm831x, WM831X_TOUCH_CONTROL_1,
-			WM831X_TCH_ENA | WM831X_TCH_CVT_ENA |
-			WM831X_TCH_X_ENA | WM831X_TCH_Y_ENA |
+			WM831X_TCH_ENA | WM831X_TCH_X_ENA | WM831X_TCH_Y_ENA |
 			WM831X_TCH_Z_ENA,
-			WM831X_TCH_ENA | WM831X_TCH_CVT_ENA |
-			WM831X_TCH_X_ENA | WM831X_TCH_Y_ENA |
+			WM831X_TCH_ENA | WM831X_TCH_X_ENA | WM831X_TCH_Y_ENA |
 			ena);
 
 	return 0;
@@ -258,12 +275,23 @@ static int wm831x_ts_probe(struct platform_device *pdev)
 		goto err_alloc;
 	}
 
+	ret = request_threaded_irq(platform_get_irq_byname(pdev,
+							   "TCHPD"),
+				   NULL, wm831x_ts_pen_down_irq,
+				   IRQF_ONESHOT, /* Trigger */
+				   "Touchscreen pen down", wm831x_ts);
+	if (ret < 0) {
+		dev_err(&pdev->dev, "Failed to request pen down IRQ: %d\n",
+			ret);
+		goto err_data_irq;
+	}
+
 	platform_set_drvdata(pdev, wm831x_ts);
 
 	input_dev = input_allocate_device();
 	if (input_dev == NULL) {
 		ret = -ENOMEM;
-		goto err_irq;
+		goto err_pd_irq;
 	}
 	wm831x_ts->input_dev = input_dev;
 
@@ -293,7 +321,9 @@ static int wm831x_ts_probe(struct platform_device *pdev)
 
 err_dev_alloc:
 	input_free_device(input_dev);
-err_irq:
+err_pd_irq:
+	free_irq(platform_get_irq_byname(pdev, "TCHPD"), wm831x_ts);
+err_data_irq:
 	free_irq(wm831x_ts->data_irq, wm831x_ts);
 err_alloc:
 	kfree(wm831x_ts);
@@ -305,6 +335,7 @@ static int wm831x_ts_remove(struct platform_device *pdev)
 {
 	struct wm831x_ts *wm831x_ts = platform_get_drvdata(pdev);
 
+	free_irq(platform_get_irq_byname(pdev, "TCHPD"), wm831x_ts);
 	free_irq(wm831x_ts->data_irq, wm831x_ts);
 	input_unregister_device(wm831x_ts->input_dev);
 	kfree(wm831x_ts);
