Add APF51Dev baseboard support.

Signed-off-by: Julien Boibessot <julien.boibessot@armadeus.com>

Index: linux-2.6.38-alpha/arch/arm/mach-mx5/Kconfig
===================================================================
--- linux-2.6.38-alpha.orig/arch/arm/mach-mx5/Kconfig	2010-12-29 10:35:03.000000000 +0100
+++ linux-2.6.38-alpha/arch/arm/mach-mx5/Kconfig	2010-12-29 10:35:51.000000000 +0100
@@ -114,4 +114,22 @@
 	  Include support for Armadeus Systems APF51 System On Module. This
 	  includes specific configurations for the board and its peripherals.
 
+config MACH_APF51_HAS_BASEBOARD
+	bool
+
+choice
+	prompt "Baseboard"
+	depends on MACH_APF51
+	default MACH_APF51_DEV
+
+config MACH_APF51_DEV
+	prompt "Armadeus Systems APF51Dev development board"
+	bool
+	select MACH_APF51_HAS_BASEBOARD
+	select IMX_HAVE_PLATFORM_IMX_IPUV3
+	help
+	  This selects the APF51Dev as baseboard and adds board's specific
+	  devices.
+endchoice
+
 endif
Index: linux-2.6.38-alpha/arch/arm/mach-mx5/Makefile
===================================================================
--- linux-2.6.38-alpha.orig/arch/arm/mach-mx5/Makefile	2010-12-29 10:35:03.000000000 +0100
+++ linux-2.6.38-alpha/arch/arm/mach-mx5/Makefile	2010-12-29 10:35:51.000000000 +0100
@@ -7,6 +7,7 @@
 
 obj-$(CONFIG_CPU_FREQ_IMX)    += cpu_op-mx51.o
 obj-$(CONFIG_MACH_APF51) += board-apf51.o
+obj-$(CONFIG_MACH_APF51_DEV) += apf51-dev-baseboard.o
 obj-$(CONFIG_MACH_MX51_BABBAGE) += board-mx51_babbage.o
 obj-$(CONFIG_MACH_MX51_3DS) += board-mx51_3ds.o
 obj-$(CONFIG_MACH_EUKREA_CPUIMX51) += board-cpuimx51.o
Index: linux-2.6.38-alpha/arch/arm/mach-mx5/apf51-dev-baseboard.c
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ linux-2.6.38-alpha/arch/arm/mach-mx5/apf51-dev-baseboard.c	2010-12-29 10:35:51.000000000 +0100
@@ -0,0 +1,139 @@
+ /*
+ * apf51-dev-baseboard.c
+ * Support for APF51's development baseboard
+ *
+ * Copyright (C) 2010 Armadeus Systems <support@armadeus.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
+ */
+
+#include <linux/gpio.h>
+#include <linux/platform_device.h>
+#include <linux/io.h>
+#include <linux/fb.h>
+#include <linux/mfd/imx-ipu-v3.h>
+
+#include <mach/iomux-mx51.h>
+#include <mach/ipu-v3.h>
+
+#include "devices-imx51.h"
+#include "devices.h"
+
+static iomux_v3_cfg_t apf51dev_pads[] = {
+	/* SD1 */
+	MX51_PAD_SD1_CMD__SD1_CMD,
+	MX51_PAD_SD1_CLK__SD1_CLK,
+	MX51_PAD_SD1_DATA0__SD1_DATA0,
+	MX51_PAD_SD1_DATA1__SD1_DATA1,
+	MX51_PAD_SD1_DATA2__SD1_DATA2,
+	MX51_PAD_SD1_DATA3__SD1_DATA3,
+
+	/* SD2 */
+	MX51_PAD_SD2_CMD__SD2_CMD,
+	MX51_PAD_SD2_CLK__SD2_CLK,
+	MX51_PAD_SD2_DATA0__SD2_DATA0,
+	MX51_PAD_SD2_DATA1__SD2_DATA1,
+	MX51_PAD_SD2_DATA2__SD2_DATA2,
+	MX51_PAD_SD2_DATA3__SD2_DATA3,
+
+	/* I2C1 */
+	/* TBD (depends on SD2 or SPI1 */
+
+	/* LCD */
+	MX51_PAD_DISP1_DAT0__DISP1_DAT0,
+	MX51_PAD_DISP1_DAT1__DISP1_DAT1,
+	MX51_PAD_DISP1_DAT2__DISP1_DAT2,
+	MX51_PAD_DISP1_DAT3__DISP1_DAT3,
+	MX51_PAD_DISP1_DAT4__DISP1_DAT4,
+	MX51_PAD_DISP1_DAT5__DISP1_DAT5,
+	MX51_PAD_DISP1_DAT6__DISP1_DAT6,
+	MX51_PAD_DISP1_DAT7__DISP1_DAT7,
+	MX51_PAD_DISP1_DAT8__DISP1_DAT8,
+	MX51_PAD_DISP1_DAT9__DISP1_DAT9,
+	MX51_PAD_DISP1_DAT10__DISP1_DAT10,
+	MX51_PAD_DISP1_DAT11__DISP1_DAT11,
+	MX51_PAD_DISP1_DAT12__DISP1_DAT12,
+	MX51_PAD_DISP1_DAT13__DISP1_DAT13,
+	MX51_PAD_DISP1_DAT14__DISP1_DAT14,
+	MX51_PAD_DISP1_DAT15__DISP1_DAT15,
+	MX51_PAD_DISP1_DAT16__DISP1_DAT16,
+	MX51_PAD_DISP1_DAT17__DISP1_DAT17,
+	MX51_PAD_DISP1_DAT18__DISP1_DAT18,
+	MX51_PAD_DISP1_DAT19__DISP1_DAT19,
+	MX51_PAD_DISP1_DAT20__DISP1_DAT20,
+	MX51_PAD_DISP1_DAT21__DISP1_DAT21,
+	MX51_PAD_DISP1_DAT22__DISP1_DAT22,
+	MX51_PAD_DISP1_DAT23__DISP1_DAT23,
+	/* DI1_DISP_CLK -> no mux */
+	MX51_PAD_DI1_PIN2__DI1_PIN2,	/* HSYNC */
+	MX51_PAD_DI1_PIN3__DI1_PIN3,	/* VSYNC */
+	/* MX51_PAD_DI1_PIN15__DI1_PIN15 enable */
+};
+
+static const struct imxi2c_platform_data apf51dev_i2c_data __initconst = {
+	.bitrate = 400000,
+};
+
+/* APF51Dev has a LCD connector and support various TFT LCDs */
+
+static struct fb_videomode apf51dev_modes[] = {
+        {
+		.name 		= "Chimei-LW700AT9003",
+		.refresh 	= 60,
+		.xres 		= 800,
+		.yres 		= 480,
+		.pixclock 	= 30303, /* picoS */
+		.left_margin 	= 96, .right_margin = 96, /* at least 3 & 1 */
+		.upper_margin 	= 0x14, .lower_margin = 0x15,
+		.hsync_len 	= 64, .vsync_len = 4,
+		.sync 		= FB_SYNC_CLK_IDLE_EN,// | FB_SYNC_OE_ACT_HIGH | FB_SYNC_CLK_INVERT,
+		.vmode 		= FB_VMODE_NONINTERLACED,
+		.flag 		= 0,
+        },
+};
+
+static struct ipuv3_fb_platform_data apf51dev_fb0_data = {
+//	.interface_pix_fmt = IPU_PIX_FMT_RGB24,
+	.interface_pix_fmt = IPU_PIX_FMT_RGB666,
+	.flags = IMX_IPU_FB_USE_MODEDB | IMX_IPU_FB_USE_OVERLAY,
+	.modes = apf51dev_modes,
+	.num_modes = ARRAY_SIZE(apf51dev_modes),
+};
+
+static struct ipuv3_fb_platform_data apf51dev_fb1_data = {
+	.interface_pix_fmt = IPU_PIX_FMT_RGB565,
+	.flags = IMX_IPU_FB_USE_MODEDB,
+};
+
+static struct imx_ipuv3_platform_data ipu_data = {
+	.fb0_platform_data = &apf51dev_fb0_data,
+	.fb1_platform_data = &apf51dev_fb1_data,
+};
+
+void __init apf51_baseboard_init(void)
+{
+	printk("    Registering APF51Dev ressources:");
+
+	mxc_iomux_v3_setup_multiple_pads(apf51dev_pads,
+					ARRAY_SIZE(apf51dev_pads));
+
+	imx51_add_sdhci_esdhc_imx(0, NULL);
+	imx51_add_sdhci_esdhc_imx(1, NULL);
+
+	imx51_add_imx_i2c(0, &apf51dev_i2c_data);
+
+	imx51_add_ipuv3(&ipu_data);
+
+	printk(" done\n");
+}
