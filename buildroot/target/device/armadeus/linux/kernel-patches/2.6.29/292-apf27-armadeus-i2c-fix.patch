Index: linux-2.6.29/drivers/i2c/busses/i2c-mxc.c
===================================================================
--- linux-2.6.29.orig/drivers/i2c/busses/i2c-mxc.c	2009-04-02 13:31:21.000000000 +0200
+++ linux-2.6.29/drivers/i2c/busses/i2c-mxc.c	2009-04-02 13:39:00.000000000 +0200
@@ -30,6 +30,7 @@
 #include <linux/clk.h>
 #include <asm/irq.h>
 #include <asm/io.h>
+#include <mach/hardware.h>
 #include <mach/clock.h>
 #include <mach/imx_i2c.h>
 
@@ -115,7 +116,7 @@
  */
 static int imx_i2c_wait_for_tc(imx_i2c_device * dev, int trans_flag)
 {
-	int retry = 16;
+	int retry = 4;
 
 	while (retry-- && !transfer_done) {
 		wait_event_interruptible_timeout(dev->wq,
@@ -125,15 +126,13 @@
 	transfer_done = false;
 
 	if (retry <= 0) {
-		/* Unable to send data */
-		printk(KERN_DEBUG "Data not transmitted\n");
-		return -1;
-	} else if (!(trans_flag & I2C_M_RD)) {
 		if (!tx_success) {
-			/* An ACK was not received for transmitted byte */
+			/* An ACK was not received */
 			printk(KERN_DEBUG "ACK not received \n");
-			return -1;
 		}
+		/* Unable to send data */
+		printk(KERN_DEBUG "Data not transmitted\n");
+		return -1;
 	}
 
 	return 0;
@@ -441,10 +440,15 @@
 		/* Interrupt due byte transfer completion */
 		tx_success = false;
 		/* Check if RXAK is received in Transmit mode */
-		if ((cr & MXC_I2CR_MTX) && (!(sr & MXC_I2SR_RXAK))) {
+		if (cr & MXC_I2CR_MTX) {
+			if( !(sr & MXC_I2SR_RXAK)) {
+				tx_success = true;
+				transfer_done = true;
+			}
+		} else {
 			tx_success = true;
+			transfer_done = true;
 		}
-		transfer_done = true;
 		wake_up_interruptible(&dev->wq);
 	}
 
