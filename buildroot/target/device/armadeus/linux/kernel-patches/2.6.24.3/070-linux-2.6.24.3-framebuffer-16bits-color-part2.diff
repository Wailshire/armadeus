X-Account-Key: account2
X-UIDL: 1169648825.15418.mrelay3-1
X-Mozilla-Status: 0011
X-Mozilla-Status2: 00000000
Return-Path: <sha@pengutronix.de>
Delivered-To: online.fr-julien.boibessot@free.fr
Received: (qmail 14991 invoked from network); 24 Jan 2007 14:27:04 -0000
Received: from 83.236.181.26 (HELO metis.extern.pengutronix.de) (83.236.181.26)
  by mrelay3-1.free.fr with SMTP; 24 Jan 2007 14:27:04 -0000
Received: from leda.ptxnet.pengutronix.de ([10.1.0.71])
	by metis.extern.pengutronix.de with esmtp (Exim 3.36 #1 (Debian))
	id 1H9idU-0002wL-00; Wed, 24 Jan 2007 14:58:00 +0100
Received: from sha by leda.ptxnet.pengutronix.de with local (Exim 4.63)
	(envelope-from <sha@localhost.localdomain>)
	id 1H9idT-0001hd-RX; Wed, 24 Jan 2007 14:57:59 +0100
Date: Wed, 24 Jan 2007 14:57:59 +0100
From: Sascha Hauer <s.hauer@pengutronix.de>
To: julien.boibessot@free.fr
Cc: linux-arm-kernel@lists.arm.linux.org.uk
Subject: Re: i.MX FrameBuffer: strange color mapping in 16bit mode
Message-ID: <20070124135759.GD5034@localhost.localdomain>
Mail-Followup-To: julien.boibessot@free.fr,
	linux-arm-kernel@lists.arm.linux.org.uk
References: <1169639047.45b74687c1102@imp.free.fr>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <1169639047.45b74687c1102@imp.free.fr>
User-Agent: Mutt/1.5.13 (2006-08-11)

The i.MX LCD controller uses 12bpp for STN and 16bpp for TFT displays,
so we have to differentiate between the two different resulting
bitfields.

Signed-Off-by: Sascha Hauer <s.hauer@pengutronix.de>

---
 drivers/video/imxfb.c |   75 +++++++++++++++++---------------------------------
 1 file changed, 26 insertions(+), 49 deletions(-)

Index: drivers/video/imxfb.c
===================================================================
--- a/drivers/video/imxfb.c.orig
+++ b/drivers/video/imxfb.c
@@ -43,24 +43,8 @@
  */
 #define DEBUG_VAR 1
 
-/*
- * These are the bitfields for each
- * display depth that we support.
- */
-struct imxfb_rgb {
-	struct fb_bitfield	red;
-	struct fb_bitfield	green;
-	struct fb_bitfield	blue;
-	struct fb_bitfield	transp;
-};
-
-#define RGB_16	(0)
-#define RGB_8	(1)
-#define NR_RGB	2
-
 struct imxfb_info {
 	struct device		*dev;
-	struct imxfb_rgb	*rgb[NR_RGB];
 
 	u_int			max_bpp;
 	u_int			max_xres;
@@ -101,21 +85,6 @@ struct imxfb_info {
 #define MIN_XRES	64
 #define MIN_YRES	64
 
-
-static struct imxfb_rgb def_rgb_16 = {
-	.red	= { .offset = 8,  .length = 4, },
-	.green	= { .offset = 4,  .length = 4, },
-	.blue	= { .offset = 0,  .length = 4, },
-	.transp = { .offset = 0,  .length = 0, },
-};
-
-static struct imxfb_rgb def_rgb_8 = {
-	.red	= { .offset = 0,  .length = 8, },
-	.green	= { .offset = 0,  .length = 8, },
-	.blue	= { .offset = 0,  .length = 8, },
-	.transp = { .offset = 0,  .length = 0, },
-};
-
 static int imxfb_activate_var(struct fb_var_screeninfo *var, struct fb_info *info);
 
 static inline u_int chan_to_field(u_int chan, struct fb_bitfield *bf)
@@ -210,7 +179,6 @@ static int
 imxfb_check_var(struct fb_var_screeninfo *var, struct fb_info *info)
 {
 	struct imxfb_info *fbi = info->par;
-	int rgbidx;
 
 	if (var->xres < MIN_XRES)
 		var->xres = MIN_XRES;
@@ -223,27 +191,39 @@ imxfb_check_var(struct fb_var_screeninfo
 	var->xres_virtual = max(var->xres_virtual, var->xres);
 	var->yres_virtual = max(var->yres_virtual, var->yres);
 
+	memset(&var->transp, 0, sizeof(var->transp));
+
 	pr_debug("var->bits_per_pixel=%d\n", var->bits_per_pixel);
 	switch (var->bits_per_pixel) {
-	case 16:
-		rgbidx = RGB_16;
-		break;
 	case 8:
-		rgbidx = RGB_8;
+		var->red.length		= var->bits_per_pixel;
+		var->red.offset		= 0;
+		var->green.length	= var->bits_per_pixel;
+		var->green.offset	= 0;
+		var->blue.length	= var->bits_per_pixel;
+		var->blue.offset	= 0;
+		break;
+	case 16:
+		if (fbi->pcr & PCR_TFT) {
+			var->red.length		= 5;
+			var->red.offset		= 11;
+			var->green.length	= 6;
+			var->green.offset	= 5;
+			var->blue.length	= 5;
+			var->blue.offset	= 0;
+		} else {
+			var->red.length		= 4;
+			var->red.offset		= 8;
+			var->green.length	= 4;
+			var->green.offset	= 4;
+			var->blue.length	= 4;
+			var->blue.offset	= 0;
+		}
 		break;
 	default:
-		rgbidx = RGB_16;
+		return -EINVAL;
 	}
 
-	/*
-	 * Copy the RGB parameters for this display
-	 * from the machine specific parameters.
-	 */
-	var->red    = fbi->rgb[rgbidx]->red;
-	var->green  = fbi->rgb[rgbidx]->green;
-	var->blue   = fbi->rgb[rgbidx]->blue;
-	var->transp = fbi->rgb[rgbidx]->transp;
-
 	pr_debug("RGBT length = %d:%d:%d:%d\n",
 		var->red.length, var->green.length, var->blue.length,
 		var->transp.length);
@@ -536,9 +516,6 @@ static int __init imxfb_init_fbinfo(stru
 	info->flags			= FBINFO_FLAG_DEFAULT;
 	info->pseudo_palette		= (fbi + 1);
 
-	fbi->rgb[RGB_16]		= &def_rgb_16;
-	fbi->rgb[RGB_8]			= &def_rgb_8;
-
 	fbi->max_xres			= inf->xres;
 	info->var.xres			= inf->xres;
 	info->var.xres_virtual		= inf->xres;


-- 
 Dipl.-Ing. Sascha Hauer | http://www.pengutronix.de
  Pengutronix - Linux Solutions for Science and Industry
    Handelsregister: Amtsgericht Hildesheim, HRA 2686
      Hannoversche Str. 2, 31134 Hildesheim, Germany
    Phone: +49-5121-206917-0 |  Fax: +49-5121-206917-9


