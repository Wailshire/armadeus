diff -purN u-boot-1.3.4.ref/drivers/net/dm9000x.c u-boot-1.3.4/drivers/net/dm9000x.c
--- u-boot-1.3.4.ref/drivers/net/dm9000x.c	2008-08-12 16:08:38.000000000 +0200
+++ u-boot-1.3.4/drivers/net/dm9000x.c	2008-09-13 16:24:20.000000000 +0200
@@ -130,6 +130,8 @@ static int dm9000_probe(void);
 static u16 phy_read(int);
 static void phy_write(int, u16);
 u16 read_srom_word(int);
+static void write_srom_word(int offset, u16 val);
+static void program_eeprom(char* mac_addr);
 static u8 DM9000_ior(int);
 static void DM9000_iow(int reg, u8 value);
 
@@ -408,8 +410,18 @@ eth_init(bd_t * bd)
 	u8 io_mode;
 	struct board_info *db = &dm9000_info;
 
+	unsigned char env_enetaddr[6];
+	char *tmp = getenv ("ethaddr");
+	char *end;
+
 	DM9000_DBG("eth_init()\n");
 
+	for (i=0; i<6; i++) {
+		env_enetaddr[i] = tmp ? simple_strtoul(tmp, &end, 16) : 0;
+		if (tmp)
+			tmp = (*end) ? end+1 : end;
+	}
+
 	/* RESET device */
 	dm9000_reset();
 	dm9000_probe();
@@ -477,10 +489,10 @@ eth_init(bd_t * bd)
 		((u16 *) bd->bi_enetaddr)[i] = read_srom_word(i);
 #endif
 
-	if (is_zero_ether_addr(bd->bi_enetaddr) ||
+/*	if (is_zero_ether_addr(bd->bi_enetaddr) ||
 	    is_multicast_ether_addr(bd->bi_enetaddr)) {
-		/* try reading from environment */
-		u8 i;
+*/		/* try reading from environment */
+/*		u8 i;
 		char *s, *e;
 		s = getenv ("ethaddr");
 		for (i = 0; i < 6; ++i) {
@@ -490,10 +502,42 @@ eth_init(bd_t * bd)
 				s = (*e) ? e + 1 : e;
 		}
 	}
+*/
+	if (memcmp(env_enetaddr, "\0\0\0\0\0\0", 6) != 0 &&
+	    memcmp(env_enetaddr, bd->bi_enetaddr, 6) != 0) {
+		printf ("\nWarning: MAC addresses don't match:\n");
+		printf ("\tHW MAC address:  "
+			"%02X:%02X:%02X:%02X:%02X:%02X\n",
+			bd->bi_enetaddr[0], bd->bi_enetaddr[1],
+			bd->bi_enetaddr[2], bd->bi_enetaddr[3],
+			bd->bi_enetaddr[4], bd->bi_enetaddr[5] );
+		printf ("\t\"ethaddr\" value: "
+			"%02X:%02X:%02X:%02X:%02X:%02X\n",
+			env_enetaddr[0], env_enetaddr[1],
+			env_enetaddr[2], env_enetaddr[3],
+			env_enetaddr[4], env_enetaddr[5]) ;
+		program_eeprom(env_enetaddr);
+		debug ("### Set MAC addr from environment\n");
+		memcpy (bd->bi_enetaddr, env_enetaddr, 6);
+	}
+	if (!tmp) {
+		char ethaddr[20];
+		sprintf (ethaddr, "%02X:%02X:%02X:%02X:%02X:%02X",
+			 bd->bi_enetaddr[0], bd->bi_enetaddr[1],
+			 bd->bi_enetaddr[2], bd->bi_enetaddr[3],
+			 bd->bi_enetaddr[4], bd->bi_enetaddr[5]) ;
+		debug ("### Set environment from HW MAC addr = \"%s\"\n", ethaddr);
+		setenv ("ethaddr", ethaddr);
+	}
 
 	printf("MAC: %02x:%02x:%02x:%02x:%02x:%02x\n", bd->bi_enetaddr[0],
 	       bd->bi_enetaddr[1], bd->bi_enetaddr[2], bd->bi_enetaddr[3],
 	       bd->bi_enetaddr[4], bd->bi_enetaddr[5]);
+	/*printf("FLASH:"); 
+	for (i = 0; i < 8; i++)
+		printf(" 0x%02X", read_srom_word(i));
+	printf("\n"); */
+
 	for (i = 0, oft = 0x10; i < 6; i++, oft++)
 		DM9000_iow(oft, bd->bi_enetaddr[i]);
 	for (i = 0, oft = 0x16; i < 8; i++, oft++)
@@ -688,7 +732,10 @@ read_srom_word(int offset)
 	return (DM9000_ior(DM9000_EPDRL) + (DM9000_ior(DM9000_EPDRH) << 8));
 }
 
-void
+/*
+ * Write a word data to SROM
+ */
+static void
 write_srom_word(int offset, u16 val)
 {
 	DM9000_iow(DM9000_EPAR, offset);
@@ -699,6 +746,28 @@ write_srom_word(int offset, u16 val)
 	DM9000_iow(DM9000_EPCR, 0);
 }
 
+/*
+ * Only for development:
+ * Here we write static data to the eeprom in case
+ * we don't have valid content on a new board
+ */
+static void
+program_eeprom(char* mac_addr)
+{
+	u16 eeprom[] = { 0x8180, 0x8382, 0x8584,	/* MAC Address */
+		0x0000 /*0x1455*/,		/* Autoload: accept nothing */
+		0x0a46, 0x9000,	/* 0x0a46, 0x9000 Vendor / Product ID */
+		0x01E6,		/* 0x0016 pin control */
+		0x0180,		/* 0x0180 Wake-up mode control, PHY DIS*/
+		0, 0, 0, 0
+	};			
+	u16* tmp = mac_addr;
+	int i;
+	for (i = 0; i < 3; i++)
+		eeprom[i] = *tmp++;
+	for (i = 0; i < 12; i++)
+		write_srom_word(i, eeprom[i]);
+}
 
 /*
    Read a byte from I/O port
