Apply BR 2010.02 changes

Index: buildroot/package/qtopia4/Config.gfx.in
===================================================================
--- buildroot.orig/package/qtopia4/Config.gfx.in	2008-11-03 09:15:31.000000000 +0100
+++ buildroot/package/qtopia4/Config.gfx.in	2010-06-15 18:21:22.000000000 +0200
@@ -1,19 +1,19 @@
 menu "Graphics drivers"
 
-config BR2_PACKAGE_QTOPIA4_GFX_LINUXFB
+config BR2_PACKAGE_QT_GFX_LINUXFB
 	bool "Linux Framebuffer"
 	default y
 
-config BR2_PACKAGE_QTOPIA4_GFX_TRANSFORMED
+config BR2_PACKAGE_QT_GFX_TRANSFORMED
 	bool "Transformed"
 
-config BR2_PACKAGE_QTOPIA4_GFX_QVFB
+config BR2_PACKAGE_QT_GFX_QVFB
 	bool "Qt Virtual Framebuffer"
 
-config BR2_PACKAGE_QTOPIA4_GFX_VNC
+config BR2_PACKAGE_QT_GFX_VNC
 	bool "VNC"
 
-config BR2_PACKAGE_QTOPIA4_GFX_MULTISCREEN
+config BR2_PACKAGE_QT_GFX_MULTISCREEN
 	bool "multiscreen"
 
 endmenu
Index: buildroot/package/qtopia4/Config.in
===================================================================
--- buildroot.orig/package/qtopia4/Config.in	2008-11-03 09:15:31.000000000 +0100
+++ buildroot/package/qtopia4/Config.in	2010-06-15 18:23:44.000000000 +0200
@@ -1,33 +1,35 @@
-config BR2_PACKAGE_QTOPIA4
-	bool "qtopia4"
-	select BR2_INSTALL_LIBSTDCPP
-	select BR2_PTHREADS_NATIVE
+comment "qt requires a toolchain with C++ support enabled"
+	depends on !BR2_INSTALL_LIBSTDCPP
+
+menuconfig BR2_PACKAGE_QT
+	bool "Qt"
+	depends on BR2_INSTALL_LIBSTDCPP
 	help
-	  Qtopia core 4.
+	  Qt for Embedded Linux.
 
-	  http://www.trolltech.com/
+	  http://www.qtsoftware.com/products/platform/qt-for-embedded-linux
 
-if BR2_PACKAGE_QTOPIA4
+if BR2_PACKAGE_QT
 
-config BR2_PACKAGE_QTOPIA4_DEBUG
+config BR2_PACKAGE_QT_DEBUG
 	bool "Compile with debug support"
 	help
 	  If unsure, say N.
 
 choice
 	prompt "Library type"
-	default BR2_PACKAGE_QTOPIA4_SHARED
+	default BR2_PACKAGE_QT_SHARED
 	help
 	  Selects the library type: Shared or Static
 
-config BR2_PACKAGE_QTOPIA4_SHARED
+config BR2_PACKAGE_QT_SHARED
 	bool "Shared library"
 	help
 	  Create and use shared Qt libraries.
 	  If you have multiple programs that depend on Qt or intend to use
 	  plugins, say Y.
 
-config BR2_PACKAGE_QTOPIA4_STATIC
+config BR2_PACKAGE_QT_STATIC
 	bool "Static Library"
 	help
 	  Create and use static Qt libraries.
@@ -37,90 +39,142 @@
 
 endchoice
 
-choice
-	prompt "Qtopia 4 Core license type"
-	default BR2_PACKAGE_QTOPIA4_LICENSE_TYPE_GPL
+config BR2_PACKAGE_QT_LICENSE_APPROVED
+	bool "Approve free license"
 	help
-	  Selects the type of license you which to use for Qtopia 4 Core.
-
-config BR2_PACKAGE_QTOPIA4_LICENSE_TYPE_GPL
-	bool "GPL license"
+	  Select this if you approve one of the available free licenses for the
+	  Qt4 library.
+	  By doing this you will not be asked while the library is compiled.
+	  Please read and understand the license terms before approving this.
 
-config BR2_PACKAGE_QTOPIA4_LICENSE_TYPE_COMMERCIAL
-	bool "Commercial license"
+	  LGPL v2.1: http://doc.trolltech.com/4.5/lgpl.html
+	  GPL  v3.0: http://doc.trolltech.com/4.5/gpl.html
 
-endchoice
+config BR2_PACKAGE_QT_QT3SUPPORT
+	bool "Compatibility with Qt3"
+	help
+	  Turns on support for older Qt3. This will create an additional
+	  library with proxy code and increase the space required on target.
+	  If unsure say n.
 
-config BR2_PACKAGE_QTOPIA4_GPL_LICENSE_APPROVED
-	bool "Approve Qtopia Core 4 GPL licence"
-	depends on BR2_PACKAGE_QTOPIA4_LICENSE_TYPE_GPL
+config BR2_PACKAGE_QT_GUI_MODULE
+	bool "Gui Module"
+	select BR2_PACKAGE_QT_NETWORK
+	default y
 	help
-	  Select this if you approve the GNU GENERAL PUBLIC LICENSE Version 2
-	  on the Qtopia Core 4 library. By doing this you will not be asked
-	  while the library is compiled. Please read and understand the GPL
-	  licence before approving this.
+	  Turns on support for Gui applications. If your board doesn't have
+	  video output, or you don't require Qt GUI, say n.
+
+if BR2_PACKAGE_QT_GUI_MODULE
+menu "Pixel depths"
+comment "Deselecting each option leads to Qt's default (8,16,32)"
+
+config BR2_PACKAGE_QT_PIXEL_DEPTH_1
+	bool "1 bpp, black/white"
+
+config BR2_PACKAGE_QT_PIXEL_DEPTH_4
+	bool "4 bpp, grayscale"
+
+config BR2_PACKAGE_QT_PIXEL_DEPTH_8
+	bool "8 bpp, paletted"
+	default y
+
+config BR2_PACKAGE_QT_PIXEL_DEPTH_12
+	bool "12 bpp, rgb 4-4-4"
+
+config BR2_PACKAGE_QT_PIXEL_DEPTH_15
+	bool "15 bpp, rgb 5-5-5"
+
+config BR2_PACKAGE_QT_PIXEL_DEPTH_16
+	bool "16 bpp, rgb 5-6-5"
+	default y
+
+config BR2_PACKAGE_QT_PIXEL_DEPTH_18
+	bool "18 bpp, rgb 6-6-6"
+
+config BR2_PACKAGE_QT_PIXEL_DEPTH_24
+	bool "24 bpp, rgb 8-8-8"
+
+config BR2_PACKAGE_QT_PIXEL_DEPTH_32
+	bool "32 bpp, argb 8-8-8-8 and rgb 8-8-8"
+	default y
 
-	  For full GPL version 2 see http://www.gnu.org/licenses/gpl.txt
+endmenu
 
+menu "Fonts"
 
-config BR2_PACKAGE_QTOPIA4_COMMERCIAL_USERNAME
-	string "Qtopia Core 4 Commercial License Username"
-	default ""
-	depends on BR2_PACKAGE_QTOPIA4_LICENSE_TYPE_COMMERCIAL
+config BR2_PACKAGE_QT_FONT_MICRO
+	bool "micro"
+	default y
+
+config BR2_PACKAGE_QT_FONT_FIXED
+	bool "fixed"
+	default y
+
+config BR2_PACKAGE_QT_FONT_HELVETICA
+	bool "helvetica"
+	default y
+
+config BR2_PACKAGE_QT_FONT_JAPANESE
+	bool "japanese"
+
+config BR2_PACKAGE_QT_FONT_UNIFONT
+	bool "unicode"
+
+endmenu
+
+choice
+	prompt "freetype2 support"
+	default BR2_PACKAGE_QT_NOFREETYPE
 	help
-	  Commercial users can download their source directly by
-	  providing a username.
+	  Select freetype2 support.
 
-config BR2_PACKAGE_QTOPIA4_COMMERCIAL_PASSWORD
-	string "Qtopia Core 4 Commercial License Password"
-	default ""
-	depends on BR2_PACKAGE_QTOPIA4_LICENSE_TYPE_COMMERCIAL
+config BR2_PACKAGE_QT_NOFREETYPE
+	bool "no freetype2 support"
 	help
-	  Commercial users can download their source directly by
-	  providing a password.
+	  Do not compile in Freetype2 support.
 
-config BR2_PACKAGE_QTOPIA4_QT3SUPPORT
-	bool "Compatibility with Qt3"
+config BR2_PACKAGE_QT_QTFREETYPE
+	bool "Qt freetype2"
 	help
-	  Turns on support for older Qt3. This will create an additional
-	  library with proxy code and increase the space required on target.
-	  If unsure say n.
+	  Use the libfreetype bundled with Qt.
 
-config BR2_PACKAGE_QTOPIA4_DEPTHS
-	string "color depths to support"
-	default "-depths 24,16,8"
+config BR2_PACKAGE_QT_SYSTEMFREETYPE
+	bool "System freetype2"
+	select BR2_PACKAGE_FREETYPE
 	help
-	  Which color depths to support for the library. Default is "-depths
-	  24,16,8". Different depths are specified by a comma separated list.
+	  Use shared libfreetype from the target system.
+	  See http://www.freetype.org/
+endchoice
 
-config BR2_PACKAGE_QTOPIA4_GIF
+config BR2_PACKAGE_QT_GIF
 	bool "Enable GIF support"
 	help
 	  This compiles and installs the plugin for GIF reading support.
 
-config BR2_PACKAGE_QTOPIA4_LIBMNG
+config BR2_PACKAGE_QT_LIBMNG
 	bool "Enable libmng support"
 	help
 	  This compiles and installs the plugin for MNG support.
 
 choice
 	prompt "JPEG support"
-	default BR2_PACKAGE_QTOPIA4_NOJPEG
+	default BR2_PACKAGE_QT_NOJPEG
 	help
 	  Select libjpeg support.
 
-config BR2_PACKAGE_QTOPIA4_NOJPEG
+config BR2_PACKAGE_QT_NOJPEG
 	bool "No jpeg support"
 	help
 	  Disable JPEG support
 
-config BR2_PACKAGE_QTOPIA4_SYSTEMJPEG
+config BR2_PACKAGE_QT_SYSTEMJPEG
 	select BR2_PACKAGE_JPEG
 	bool "System libjpeg"
 	help
 	  Link against system libjpeg
 
-config BR2_PACKAGE_QTOPIA4_QTJPEG
+config BR2_PACKAGE_QT_QTJPEG
 	bool "Use Qt bundled libjpeg"
 	help
 	  Link against libjpeg proveded with Qt
@@ -128,83 +182,60 @@
 
 choice
 	prompt "PNG support"
-	default BR2_PACKAGE_QTOPIA4_NOPNG
+	default BR2_PACKAGE_QT_NOPNG
 	help
 	  Select which library to use if PNG support should be enabled.
 
-config BR2_PACKAGE_QTOPIA4_NOPNG
+config BR2_PACKAGE_QT_NOPNG
 	bool "No PNG support"
 
-config BR2_PACKAGE_QTOPIA4_SYSTEMPNG
+config BR2_PACKAGE_QT_SYSTEMPNG
 	bool "System libpng"
 	select BR2_PACKAGE_LIBPNG
 
-config BR2_PACKAGE_QTOPIA4_QTPNG
+config BR2_PACKAGE_QT_QTPNG
 	bool "Use Qt bundled libpng"
 endchoice
 
 choice
 	prompt "TIFF support"
-	default BR2_PACKAGE_QTOPIA4_NOTIFF
+	default BR2_PACKAGE_QT_NOTIFF
 	help
 	  Select which library to use if TIFF support should be enabled.
 
-config BR2_PACKAGE_QTOPIA4_NOTIFF
+config BR2_PACKAGE_QT_NOTIFF
 	bool "No TIFF support"
 
-config BR2_PACKAGE_QTOPIA4_SYSTEMTIFF
+config BR2_PACKAGE_QT_SYSTEMTIFF
 	bool "System libtiff"
 	select BR2_PACKAGE_TIFF
 
-config BR2_PACKAGE_QTOPIA4_QTTIFF
+config BR2_PACKAGE_QT_QTTIFF
 	bool "Use Qt bundled libtiff"
 endchoice
 
+endif # BR2_PACKAGE_QT_GUI_MODULE
+
 choice
 	prompt "zlib support"
-	default BR2_PACKAGE_QTOPIA4_QTZLIB
+	default BR2_PACKAGE_QT_QTZLIB
 	help
 	  Select zlib support.
 
-config BR2_PACKAGE_QTOPIA4_QTZLIB
+config BR2_PACKAGE_QT_QTZLIB
 	bool "Qt zlib"
 	help
 	  Use the zlib bundled with Qt.
 
-config BR2_PACKAGE_QTOPIA4_SYSTEMZLIB
+config BR2_PACKAGE_QT_SYSTEMZLIB
 	bool "System zlib"
 	select BR2_PACKAGE_ZLIB
 	help
 	  Use the shared zlib from the system.
 endchoice
 
-choice
-	prompt "freetype2 support"
-	default BR2_PACKAGE_QTOPIA4_NOFREETYPE
-	help
-	  Select freetype2 support.
-
-config BR2_PACKAGE_QTOPIA4_NOFREETYPE
-	bool "no freetype2 support"
-	help
-	  Do not compile in Freetype2 support.
-
-
-config BR2_PACKAGE_QTOPIA4_QTFREETYPE
-	bool "Qt freetype2"
-	help
-	  Use the libfreetype bundled with Qt.
-
-config BR2_PACKAGE_QTOPIA4_SYSTEMFREETYPE
-	bool "System freetype2"
-	select BR2_PACKAGE_FREETYPE
-	help
-	  Use shared libfreetype from the target system.
-	  See http://www.freetype.org/
-endchoice
-
-config BR2_PACKAGE_QTOPIA4_EMB_PLATFORM
-	string "The embedded platform we are making Qtopia4 for"
+config BR2_PACKAGE_QT_EMB_PLATFORM
+	string "The embedded platform we are making Qt for"
 	default "arm"	if BR2_arm
 	default "arm"	if BR2_armeb
 	default "avr32"	if BR2_avr32
@@ -212,12 +243,12 @@
 	default "x86_64"	if BR2_x86_64
 	default "mips"	if BR2_mips
 	default "mips"	if BR2_mipsel
+	default "ppc"	if BR2_powerpc
 # Not that I really believe these will work..
 	default "generic"	if BR2_alpha
 	default "generic"	if BR2_chris
 	default "generic"	if BR2_m68k
 	default "generic"	if BR2_nios2
-	default "generic"	if BR2_powerpc
 	default "generic"	if BR2_sh
 	default "generic"	if BR2_sh64
 	default "generic"	if BR2_sparc
@@ -225,29 +256,54 @@
 	  The target platform.
 
 source "package/qtopia4/Config.sql.in"
+if BR2_PACKAGE_QT_GUI_MODULE
 source "package/qtopia4/Config.gfx.in"
 source "package/qtopia4/Config.mouse.in"
+source "package/qtopia4/Config.keyboard.in"
+endif
+
+config BR2_PACKAGE_QT_XML
+	bool "XML Module"
+	default y
+	help
+	  Build the XML module.
 
-config BR2_PACKAGE_QTOPIA4_XMLPATTERNS
+config BR2_PACKAGE_QT_XMLPATTERNS
 	bool "XML Patterns Module"
+	depends on BR2_PACKAGE_QT_XML
 	help
 	  Build QtXmlPatterns module.
 	  If unsure, say n
 
-config BR2_PACKAGE_QTOPIA4_SVG
+config BR2_PACKAGE_QT_SVG
 	bool "SVG Module"
 	help
 	  Build the SVG module.
 	  If unsure, say n
 
-config BR2_PACKAGE_QTOPIA4_WEBKIT
+config BR2_PACKAGE_QT_NETWORK
+	bool "Network Module"
+	default y
+	help
+	  Install the Network module.
+	  if unsure, say y
+
+config BR2_PACKAGE_QT_WEBKIT
 	bool "WebKit Module"
+	depends on BR2_PACKAGE_QT_NETWORK
 	help
 	  Build the WebKit module.
 	  If unsure, say n.
 
-config BR2_PACKAGE_QTOPIA4_OPENSSL
+config BR2_PACKAGE_QT_STL
+	bool "STL support"
+	help
+	  Compile STL support.
+	  If unsure, say n.
+
+config BR2_PACKAGE_QT_OPENSSL
 	bool "Enable OpenSSL support"
+	depends on BR2_PACKAGE_QT_NETWORK
 	select BR2_PACKAGE_OPENSSL
 	help
 	  Enable support for the OpenSSL encryption library. If you use
@@ -255,4 +311,18 @@
 	  target.
 	  If unsure, say n.
 
-endif # BR2_PACKAGE_QTOPIA4
+config BR2_PACKAGE_QT_SCRIPT
+	bool "Script Module"
+	default y
+	help
+	  Build the Qt Script module.
+	  if unsure, say y.
+
+config BR2_PACKAGE_QT_SCRIPTTOOLS
+	bool "Script Tools Module"
+	depends on BR2_PACKAGE_QT_SCRIPT
+	help
+	  Build the Qt Script Tools module.
+	  if unsure, say n.
+
+endif # BR2_PACKAGE_QT
Index: buildroot/package/qtopia4/Config.keyboard.in
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ buildroot/package/qtopia4/Config.keyboard.in	2010-06-15 18:21:22.000000000 +0200
@@ -0,0 +1,21 @@
+menu "Keyboard drivers"
+
+config BR2_PACKAGE_QT_KEYBOARD_TTY
+	bool "tty"
+
+config BR2_PACKAGE_QT_KEYBOARD_USB
+	bool "usb"
+
+config BR2_PACKAGE_QT_KEYBOARD_SL5000
+	bool "sl5000"
+
+config BR2_PACKAGE_QT_KEYBOARD_YOPY
+	bool "yopy"
+
+config BR2_PACKAGE_QT_KEYBOARD_VR41XX
+	bool "vr41xx"
+
+config BR2_PACKAGE_QT_KEYBOARD_QVFB
+	bool "qvfb"
+
+endmenu
Index: buildroot/package/qtopia4/Config.mouse.in
===================================================================
--- buildroot.orig/package/qtopia4/Config.mouse.in	2008-11-03 09:15:31.000000000 +0100
+++ buildroot/package/qtopia4/Config.mouse.in	2010-06-15 18:21:22.000000000 +0200
@@ -1,24 +1,24 @@
 menu "Mouse drivers"
 
-config BR2_PACKAGE_QTOPIA4_MOUSE_PC
+config BR2_PACKAGE_QT_MOUSE_PC
 	bool "pc"
 
-config BR2_PACKAGE_QTOPIA4_MOUSE_BUS
+config BR2_PACKAGE_QT_MOUSE_BUS
 	bool "bus"
 
-config BR2_PACKAGE_QTOPIA4_MOUSE_LINUXTP
+config BR2_PACKAGE_QT_MOUSE_LINUXTP
 	bool "linuxtp"
 
-config BR2_PACKAGE_QTOPIA4_MOUSE_YOPY
+config BR2_PACKAGE_QT_MOUSE_YOPY
 	bool "yopy"
 
-config BR2_PACKAGE_QTOPIA4_MOUSE_VR41XX
+config BR2_PACKAGE_QT_MOUSE_VR41XX
 	bool "vr41xx"
 
-config BR2_PACKAGE_QTOPIA4_MOUSE_TSLIB
+config BR2_PACKAGE_QT_MOUSE_TSLIB
 	bool "tslib"
 
-config BR2_PACKAGE_QTOPIA4_MOUSE_QVFB
+config BR2_PACKAGE_QT_MOUSE_QVFB
 	bool "qvfb"
 
 endmenu
Index: buildroot/package/qtopia4/Config.sql.in
===================================================================
--- buildroot.orig/package/qtopia4/Config.sql.in	2008-11-03 09:15:31.000000000 +0100
+++ buildroot/package/qtopia4/Config.sql.in	2010-06-15 18:21:22.000000000 +0200
@@ -1,40 +1,40 @@
-menuconfig BR2_PACKAGE_QTOPIA4_SQL_MODULE
+menuconfig BR2_PACKAGE_QT_SQL_MODULE
 	bool "SQL Module"
 	help
-	  Compile Qtopia SQL Module
+	  Compile Qt SQL Module
 
-if BR2_PACKAGE_QTOPIA4_SQL_MODULE
-config BR2_PACKAGE_QTOPIA4_MYSQL
+if BR2_PACKAGE_QT_SQL_MODULE
+config BR2_PACKAGE_QT_MYSQL
 	bool "MySQL Driver"
 	help
 	  Build MySQL driver
 	  If unsure, say n.
 
-config BR2_PACKAGE_QTOPIA4_IBASE
+config BR2_PACKAGE_QT_IBASE
 	bool "iBase Driver"
 	help
 	  Build iBase driver
 	  If unsure, say n.
 
-config BR2_PACKAGE_QTOPIA4_ODBC
+config BR2_PACKAGE_QT_ODBC
 	bool "ODBC Driver"
 	help
 	  Build ODBC driver
 	  If unsure, say n.
 
-config BR2_PACKAGE_QTOPIA4_PSQL
+config BR2_PACKAGE_QT_PSQL
 	bool "PostgreSQL Driver"
 	help
 	  Build PostgreSQL driver
 	  If unsure, say n.
 
-config BR2_PACKAGE_QTOPIA4_SQLITE
+config BR2_PACKAGE_QT_SQLITE
 	bool "SQLite 3 Driver"
 	help
 	  Build SQLite driver
 	  If unsure, say n.
 
-config BR2_PACKAGE_QTOPIA4_SQLITE2
+config BR2_PACKAGE_QT_SQLITE2
 	bool "SQLite 2 Driver"
 	help
 	  Build SQLite 2 driver
Index: buildroot/package/qtopia4/qt-4.5.3-fix-qt-zlib-build.patch
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ buildroot/package/qtopia4/qt-4.5.3-fix-qt-zlib-build.patch	2010-06-15 18:21:22.000000000 +0200
@@ -0,0 +1,20 @@
+When QT is compiled in qt-zlib mode, compilation of
+src/gui/painting/qprintengine_pdf.cpp fails because zlib.h is not
+found. The following patch adds the internal QT zlib directory to the
+include path to fix this issue.
+
+---
+ src/gui/painting/painting.pri |    3 +++
+ 1 file changed, 3 insertions(+)
+
+Index: qt-embedded-linux-opensource-src-4.5.3/src/gui/painting/painting.pri
+===================================================================
+--- qt-embedded-linux-opensource-src-4.5.3.orig/src/gui/painting/painting.pri
++++ qt-embedded-linux-opensource-src-4.5.3/src/gui/painting/painting.pri
+@@ -367,3 +367,6 @@
+         SOURCES += painting/qwindowsurface_d3d.cpp
+ }
+ 
++contains(QT_CONFIG, zlib) {
++   INCLUDEPATH += ../3rdparty/zlib
++}
Index: buildroot/package/qtopia4/qtopia4.mk
===================================================================
--- buildroot.orig/package/qtopia4/qtopia4.mk	2008-11-03 09:15:31.000000000 +0100
+++ buildroot/package/qtopia4/qtopia4.mk	2010-06-15 18:21:22.000000000 +0200
@@ -1,9 +1,10 @@
 ######################################################################
 #
-# qtopia4 (Qtopia Core 4)
-# http://www.trolltech.com/
+# Qt Embedded for Linux 4.5
+# http://www.qtsoftware.com/
 #
-# This makefile composed by Thomas Lundquist <thomasez@zelow.no>
+# This makefile was originally composed by Thomas Lundquist <thomasez@zelow.no>
+# Later heavily modified by buildroot developers
 #
 # BTW, this uses alot of FPU calls and it's pretty slow if you use
 # the kernels FPU emulation so it's better to choose soft float in the
@@ -11,327 +12,472 @@
 #
 ######################################################################
 
-# BUG: In "OpenSuSE 10.2", dbus.h is at dbus-1.0/dbus/dbus.h
-# instead of at "dbus/dbus.h"
-# (cd /usr/include; sudo ln -s dbus-1.0/dbus dbus)
-# to fix
-
-QTOPIA4_VERSION:=4.4.3
-QTOPIA4_CAT:=$(BZCAT)
-
-BR2_PACKAGE_QTOPIA4_COMMERCIAL_USERNAME:=$(strip $(subst ",, $(BR2_PACKAGE_QTOPIA4_COMMERCIAL_USERNAME)))
-#"))
-BR2_PACKAGE_QTOPIA4_COMMERCIAL_PASSWORD:=$(strip $(subst ",, $(BR2_PACKAGE_QTOPIA4_COMMERCIAL_PASSWORD)))
-#"))
-
-QTOPIA4_CONFIGURE:=#empty
-
-# What to download, free or commercial version.
-ifneq ($(BR2_PACKAGE_QTOPIA4_COMMERCIAL_USERNAME),)
-QTOPIA4_SITE:=http://$(BR2_PACKAGE_QTOPIA4_COMMERCIAL_USERNAME):$(BR2_QTOPIA4_COMMERCIAL_PASSWORD)@dist.trolltech.com/$(BR2_PACKAGE_QTOPIA4_COMMERCIAL_USERNAME)
-QTOPIA4_SOURCE:=qt-embedded-linux-commercial-src-$(QTOPIA4_VERSION).tar.bz2
-QTOPIA4_TARGET_DIR:=$(BUILD_DIR)/qt-embedded-linux-commercial-src-$(QTOPIA4_VERSION)
-QTOPIA4_CONFIGURE+= -no-sql-oci -no-sql-tds -no-sql-db2
-else # Good, good, we are free:
-QTOPIA4_SITE=ftp://ftp.trolltech.com/qt/source
-QTOPIA4_SOURCE:=qt-embedded-linux-opensource-src-$(QTOPIA4_VERSION).tar.bz2
-QTOPIA4_TARGET_DIR:=$(BUILD_DIR)/qt-embedded-linux-opensource-src-$(QTOPIA4_VERSION)
-ifeq ($(BR2_PACKAGE_QTOPIA4_GPL_LICENSE_APPROVED),y)
-QTOPIA4_CONFIGURE+= -confirm-license
-endif
+QT_VERSION:=4.5.3
+QT_SOURCE:=qt-embedded-linux-opensource-src-$(QT_VERSION).tar.gz
+QT_SITE:=http://get.qt.nokia.com/qt/source
+QT_CAT:=$(ZCAT)
+QT_TARGET_DIR:=$(BUILD_DIR)/qt-embedded-linux-opensource-src-$(QT_VERSION)
+
+QT_CONFIGURE:=#empty
+
+ifeq ($(BR2_PACKAGE_QT_LICENSE_APPROVED),y)
+QT_CONFIGURE += -opensource -confirm-license
 endif
 
 # If you want extra tweaking you can copy
-# $(QTOPIA4_TARGET_DIR)/src/corelib/global/qconfig-myfile.h
-# to the qtopia4 packages directory (where this .mk file is) and
+# $(QT_TARGET_DIR)/src/corelib/global/qconfig-myfile.h
+# to the qt packages directory (where this .mk file is) and
 # remove the comment.
-# QTOPIA4_QCONFIG_COMMAND:=-qconfig myfile
+# QT_QCONFIG_COMMAND:=-qconfig myfile
 #
 # For the options you can set in this file, look at
-# $(QTOPIA4_TARGET_DIR)/src/corelib/global/qfeatures.txt
+# $(QT_TARGET_DIR)/src/corelib/global/qfeatures.txt
 #
-QTOPIA4_QCONFIG_FILE:=package/qtopia4/qconfig-myfile.h
-QTOPIA4_QCONFIG_FILE_LOCATION:=/src/corelib/global/
+QT_QCONFIG_FILE:=package/qtopia4/qconfig-myfile.h
+QT_QCONFIG_FILE_LOCATION:=/src/corelib/global/
 
 ifeq ($(BR2_LARGEFILE),y)
-QTOPIA4_CONFIGURE+= -largefile
+QT_CONFIGURE+= -largefile
 else
-QTOPIA4_CONFIGURE+= -no-largefile
+QT_CONFIGURE+= -no-largefile
 endif
 
-ifeq ($(BR2_PACKAGE_QTOPIA4_QT3SUPPORT),y)
-QTOPIA4_CONFIGURE+= -qt3support
+ifeq ($(BR2_PACKAGE_QT_QT3SUPPORT),y)
+QT_CONFIGURE+= -qt3support
 else
-QTOPIA4_CONFIGURE+= -no-qt3support
+QT_CONFIGURE+= -no-qt3support
 endif
 
+# ensure glib is built first if enabled for Qt's glib support
+ifeq ($(BR2_PACKAGE_LIBGLIB2),y)
+QT_DEP_LIBS+=libglib2
+endif
+
+
+### Pixel depths
+QT_PIXEL_DEPTHS := # empty
+ifeq ($(BR2_PACKAGE_QT_PIXEL_DEPTH_1),y)
+QT_PIXEL_DEPTHS += 1
+endif
+ifeq ($(BR2_PACKAGE_QT_PIXEL_DEPTH_4),y)
+QT_PIXEL_DEPTHS += 4
+endif
+ifeq ($(BR2_PACKAGE_QT_PIXEL_DEPTH_8),y)
+QT_PIXEL_DEPTHS += 8
+endif
+ifeq ($(BR2_PACKAGE_QT_PIXEL_DEPTH_12),y)
+QT_PIXEL_DEPTHS += 12
+endif
+ifeq ($(BR2_PACKAGE_QT_PIXEL_DEPTH_15),y)
+QT_PIXEL_DEPTHS += 15
+endif
+ifeq ($(BR2_PACKAGE_QT_PIXEL_DEPTH_16),y)
+QT_PIXEL_DEPTHS += 16
+endif
+ifeq ($(BR2_PACKAGE_QT_PIXEL_DEPTH_18),y)
+QT_PIXEL_DEPTHS += 18
+endif
+ifeq ($(BR2_PACKAGE_QT_PIXEL_DEPTH_24),y)
+QT_PIXEL_DEPTHS += 24
+endif
+ifeq ($(BR2_PACKAGE_QT_PIXEL_DEPTH_32),y)
+QT_PIXEL_DEPTHS += 32
+endif
+ifneq ($(QT_PIXEL_DEPTHS),)
+QT_CONFIGURE += -depths $(subst $(space),$(comma),$(strip $(QT_PIXEL_DEPTHS)))
+endif
 
 ### Display drivers
-ifeq ($(BR2_PACKAGE_QTOPIA4_GFX_LINUXFB),y)
-QTOPIA4_CONFIGURE += -qt-gfx-linuxfb
+ifeq ($(BR2_PACKAGE_QT_GFX_LINUXFB),y)
+QT_CONFIGURE += -qt-gfx-linuxfb
 else
-QTOPIA4_CONFIGURE += -no-gfx-linuxfb
+QT_CONFIGURE += -no-gfx-linuxfb
 endif
-ifeq ($(BR2_PACKAGE_QTOPIA4_GFX_TRANSFORMED),y)
-QTOPIA4_CONFIGURE += -qt-gfx-transformed
+ifeq ($(BR2_PACKAGE_QT_GFX_TRANSFORMED),y)
+QT_CONFIGURE += -qt-gfx-transformed
 else
-QTOPIA4_CONFIGURE += -no-gfx-transformed
+QT_CONFIGURE += -no-gfx-transformed
 endif
-ifeq ($(BR2_PACKAGE_QTOPIA4_GFX_QVFB),y)
-QTOPIA4_CONFIGURE += -qt-gfx-qvfb
+ifeq ($(BR2_PACKAGE_QT_GFX_QVFB),y)
+QT_CONFIGURE += -qt-gfx-qvfb
 else
-QTOPIA4_CONFIGURE += -no-gfx-qvfb
+QT_CONFIGURE += -no-gfx-qvfb
 endif
-ifeq ($(BR2_PACKAGE_QTOPIA4_GFX_VNC),y)
-QTOPIA4_CONFIGURE += -qt-gfx-vnc
+ifeq ($(BR2_PACKAGE_QT_GFX_VNC),y)
+QT_CONFIGURE += -qt-gfx-vnc
 else
-QTOPIA4_CONFIGURE += -no-gfx-vnc
+QT_CONFIGURE += -no-gfx-vnc
 endif
-ifeq ($(BR2_PACKAGE_QTOPIA4_GFX_MULTISCREEN),y)
-QTOPIA4_CONFIGURE += -qt-gfx-multiscreen
+ifeq ($(BR2_PACKAGE_QT_GFX_MULTISCREEN),y)
+QT_CONFIGURE += -qt-gfx-multiscreen
 else
-QTOPIA4_CONFIGURE += -no-gfx-multiscreen
+QT_CONFIGURE += -no-gfx-multiscreen
 endif
 
 ### Mouse drivers
-ifeq ($(BR2_PACKAGE_QTOPIA4_MOUSE_PC),y)
-QTOPIA4_CONFIGURE += -qt-mouse-pc
+ifeq ($(BR2_PACKAGE_QT_MOUSE_PC),y)
+QT_CONFIGURE += -qt-mouse-pc
 else
-QTOPIA4_CONFIGURE += -no-mouse-pc
+QT_CONFIGURE += -no-mouse-pc
 endif
-ifeq ($(BR2_PACKAGE_QTOPIA4_MOUSE_BUS),y)
-QTOPIA4_CONFIGURE += -qt-mouse-bus
+ifeq ($(BR2_PACKAGE_QT_MOUSE_BUS),y)
+QT_CONFIGURE += -qt-mouse-bus
 else
-QTOPIA4_CONFIGURE += -no-mouse-bus
+QT_CONFIGURE += -no-mouse-bus
 endif
-ifeq ($(BR2_PACKAGE_QTOPIA4_MOUSE_LINUXTP),y)
-QTOPIA4_CONFIGURE += -qt-mouse-linuxtp
+ifeq ($(BR2_PACKAGE_QT_MOUSE_LINUXTP),y)
+QT_CONFIGURE += -qt-mouse-linuxtp
 else
-QTOPIA4_CONFIGURE += -no-mouse-linuxtp
+QT_CONFIGURE += -no-mouse-linuxtp
 endif
-ifeq ($(BR2_PACKAGE_QTOPIA4_MOUSE_YOPY),y)
-QTOPIA4_CONFIGURE += -qt-mouse-yopy
+ifeq ($(BR2_PACKAGE_QT_MOUSE_YOPY),y)
+QT_CONFIGURE += -qt-mouse-yopy
 else
-QTOPIA4_CONFIGURE += -no-mouse-yopy
+QT_CONFIGURE += -no-mouse-yopy
 endif
-ifeq ($(BR2_PACKAGE_QTOPIA4_MOUSE_VR41XX),y)
-QTOPIA4_CONFIGURE += -qt-mouse-vr41xx
+ifeq ($(BR2_PACKAGE_QT_MOUSE_VR41XX),y)
+QT_CONFIGURE += -qt-mouse-vr41xx
 else
-QTOPIA4_CONFIGURE += -no-mouse-vr41xx
+QT_CONFIGURE += -no-mouse-vr41xx
 endif
-ifeq ($(BR2_PACKAGE_QTOPIA4_MOUSE_TSLIB),y)
-QTOPIA4_CONFIGURE += -qt-mouse-tslib
-QTOPIA4_DEP_LIBS+=tslib
-QTOPIA4_TSLIB_DEB="-D TSLIBMOUSEHANDLER_DEBUG"
-QTOPIA4_TSLIB_DEB:=$(strip $(subst ",, $(QTOPIA4_TSLIB_DEB)))
-#"))
+ifeq ($(BR2_PACKAGE_QT_MOUSE_TSLIB),y)
+QT_CONFIGURE += -qt-mouse-tslib
+QT_DEP_LIBS+=tslib
 else
-QTOPIA4_CONFIGURE += -no-mouse-tslib
+QT_CONFIGURE += -no-mouse-tslib
 endif
-ifeq ($(BR2_PACKAGE_QTOPIA4_MOUSE_QVFB),y)
-QTOPIA4_CONFIGURE += -qt-mouse-qvfb
+ifeq ($(BR2_PACKAGE_QT_MOUSE_QVFB),y)
+QT_CONFIGURE += -qt-mouse-qvfb
 else
-QTOPIA4_CONFIGURE += -no-mouse-qvfb
+QT_CONFIGURE += -no-mouse-qvfb
 endif
 
-ifeq ($(BR2_PACKAGE_QTOPIA4_DEBUG),y)
-QTOPIA4_CONFIGURE+= "-debug $(QTOPIA4_TSLIB_DEB)"
+### Keyboard drivers
+ifeq ($(BR2_PACKAGE_QT_KEYBOARD_TTY),y)
+QT_CONFIGURE += -qt-kbd-tty
+else
+QT_CONFIGURE += -no-kbd-tty
+endif
+ifeq ($(BR2_PACKAGE_QT_KEYBOARD_USB),y)
+QT_CONFIGURE += -qt-kbd-usb
+else
+QT_CONFIGURE += -no-kbd-usb
+endif
+ifeq ($(BR2_PACKAGE_QT_KEYBOARD_SL5000),y)
+QT_CONFIGURE += -qt-kbd-sl5000
+else
+QT_CONFIGURE += -no-kbd-sl5000
+endif
+ifeq ($(BR2_PACKAGE_QT_KEYBOARD_YOPY),y)
+QT_CONFIGURE += -qt-kbd-yopy
 else
-QTOPIA4_CONFIGURE+= -release
+QT_CONFIGURE += -no-kbd-yopy
+endif
+ifeq ($(BR2_PACKAGE_QT_KEYBOARD_VR41XX),y)
+QT_CONFIGURE += -qt-kbd-vr41xx
+else
+QT_CONFIGURE += -no-kbd-vr41xx
+endif
+ifeq ($(BR2_PACKAGE_QT_KEYBOARD_QVFB),y)
+QT_CONFIGURE += -qt-kbd-qvfb
+else
+QT_CONFIGURE += -no-kbd-qvfb
 endif
 
-ifeq ($(BR2_PACKAGE_QTOPIA4_SHARED),y)
-QTOPIA4_CONFIGURE+= -shared
+ifeq ($(BR2_PACKAGE_QT_DEBUG),y)
+QT_CONFIGURE+= -debug
 else
-QTOPIA4_CONFIGURE+= -static
+QT_CONFIGURE+= -release
+endif
+
+ifeq ($(BR2_PACKAGE_QT_SHARED),y)
+QT_CONFIGURE+= -shared
+else
+QT_CONFIGURE+= -static
 endif
 
 ifeq ($(BR2_ENDIAN),"LITTLE")
-QTOPIA4_CONFIGURE+= -little-endian
+QT_CONFIGURE+= -little-endian
 else
-QTOPIA4_CONFIGURE+= -big-endian
+QT_CONFIGURE+= -big-endian
 endif
 
-ifeq ($(BR2_PACKAGE_QTOPIA4_GIF),y)
-QTOPIA4_CONFIGURE+= -qt-gif
+ifeq ($(BR2_PACKAGE_QT_GIF),y)
+QT_CONFIGURE+= -qt-gif
 else
-QTOPIA4_CONFIGURE+= -no-gif
+QT_CONFIGURE+= -no-gif
 endif
 
-ifeq ($(BR2_PACKAGE_QTOPIA4_LIBMNG),y)
-QTOPIA4_CONFIGURE+= -qt-libmng
+ifeq ($(BR2_PACKAGE_QT_LIBMNG),y)
+QT_CONFIGURE+= -qt-libmng
 else
-QTOPIA4_CONFIGURE+= -no-libmng
+QT_CONFIGURE+= -no-libmng
 endif
 
-ifeq ($(BR2_PACKAGE_QTOPIA4_QTZLIB),y)
-QTOPIA4_CONFIGURE+= -qt-zlib
+ifeq ($(BR2_PACKAGE_QT_QTZLIB),y)
+QT_CONFIGURE+= -qt-zlib
 else
-ifeq ($(BR2_PACKAGE_QTOPIA4_SYSTEMZLIB),y)
-QTOPIA4_CONFIGURE+= -system-zlib
-QTOPIA4_DEP_LIBS+=zlib
+ifeq ($(BR2_PACKAGE_QT_SYSTEMZLIB),y)
+QT_CONFIGURE+= -system-zlib
+QT_DEP_LIBS+=zlib
 endif
 endif
 
-ifeq ($(BR2_PACKAGE_QTOPIA4_QTJPEG),y)
-QTOPIA4_CONFIGURE+= -qt-libjpeg
+ifeq ($(BR2_PACKAGE_QT_QTJPEG),y)
+QT_CONFIGURE+= -qt-libjpeg
 else
-ifeq ($(BR2_PACKAGE_QTOPIA4_SYSTEMJPEG),y)
-QTOPIA4_CONFIGURE+= -system-libjpeg
-QTOPIA4_DEP_LIBS+=jpeg
+ifeq ($(BR2_PACKAGE_QT_SYSTEMJPEG),y)
+QT_CONFIGURE+= -system-libjpeg
+QT_DEP_LIBS+=jpeg
 else
-QTOPIA4_CONFIGURE+= -no-libjpeg
+QT_CONFIGURE+= -no-libjpeg
 endif
 endif
 
-ifeq ($(BR2_PACKAGE_QTOPIA4_QTPNG),y)
-QTOPIA4_CONFIGURE+= -qt-libpng
+ifeq ($(BR2_PACKAGE_QT_QTPNG),y)
+QT_CONFIGURE+= -qt-libpng
 else
-ifeq ($(BR2_PACKAGE_QTOPIA4_SYSTEMPNG),y)
-QTOPIA4_CONFIGURE+= -system-libpng
-QTOPIA4_DEP_LIBS+=libpng
+ifeq ($(BR2_PACKAGE_QT_SYSTEMPNG),y)
+QT_CONFIGURE+= -system-libpng
+QT_DEP_LIBS+=libpng
 else
-QTOPIA4_CONFIGURE+= -no-libpng
+QT_CONFIGURE+= -no-libpng
 endif
 endif
 
-ifeq ($(BR2_PACKAGE_QTOPIA4_QTTIFF),y)
-QTOPIA4_CONFIGURE+= -qt-libtiff
+ifeq ($(BR2_PACKAGE_QT_QTTIFF),y)
+QT_CONFIGURE+= -qt-libtiff
 else
-ifeq ($(BR2_PACKAGE_QTOPIA4_SYSTEMTIFF),y)
-QTOPIA4_CONFIGURE+= -system-libtiff
-QTOPIA4_DEP_LIBS+=tiff
+ifeq ($(BR2_PACKAGE_QT_SYSTEMTIFF),y)
+QT_CONFIGURE+= -system-libtiff
+QT_DEP_LIBS+=tiff
 else
-QTOPIA4_CONFIGURE+= -no-libtiff
+QT_CONFIGURE+= -no-libtiff
 endif
 endif
 
 
-ifeq ($(BR2_PACKAGE_QTOPIA4_QTFREETYPE),y)
-QTOPIA4_CONFIGURE+= -qt-freetype
+QT_FONTS = $(addprefix $(STAGING_DIR)/usr/lib/fonts/, $(addsuffix *.qpf, \
+	   $(if $(BR2_PACKAGE_QT_FONT_MICRO),micro) \
+	   $(if $(BR2_PACKAGE_QT_FONT_FIXED),fixed) \
+	   $(if $(BR2_PACKAGE_QT_FONT_HELVETICA),helvetica) \
+	   $(if $(BR2_PACKAGE_QT_FONT_JAPANESE),japanese) \
+	   $(if $(BR2_PACKAGE_QT_FONT_UNIFONT),unifont)))
+
+
+ifeq ($(BR2_PACKAGE_QT_QTFREETYPE),y)
+QT_CONFIGURE+= -qt-freetype
 else
-ifeq ($(BR2_PACKAGE_QTOPIA4_SYSTEMFREETYPE),y)
-QTOPIA4_CONFIGURE+= -system-freetype
-QTOPIA4_CONFIGURE+= -I $(FREETYPE_DIR)/include
-QTOPIA4_DEP_LIBS+=freetype
+ifeq ($(BR2_PACKAGE_QT_SYSTEMFREETYPE),y)
+QT_CONFIGURE+= -system-freetype
+QT_CONFIGURE+= -I $(STAGING_DIR)/usr/include/freetype2/
+QT_DEP_LIBS+=freetype
 else
-QTOPIA4_CONFIGURE+= -no-freetype
+QT_CONFIGURE+= -no-freetype
 endif
 endif
 
 
-ifeq ($(BR2_PACKAGE_QTOPIA4_OPENSSL),y)
-QTOPIA4_CONFIGURE+= -openssl
-QTOPIA4_DEP_LIBS+=openssl
+ifeq ($(BR2_PACKAGE_QT_OPENSSL),y)
+QT_CONFIGURE+= -openssl
+QT_DEP_LIBS+=openssl
 else
-QTOPIA4_CONFIGURE+= -no-openssl
+QT_CONFIGURE+= -no-openssl
 endif
 
 # Qt SQL Drivers
-ifeq ($(BR2_PACKAGE_QTOPIA4_SQL_MODULE),y)
-ifeq ($(BR2_PACKAGE_QTOPIA4_IBASE),y)
-QTOPIA4_CONFIGURE+= -qt-sql-ibase
+ifeq ($(BR2_PACKAGE_QT_SQL_MODULE),y)
+ifeq ($(BR2_PACKAGE_QT_IBASE),y)
+QT_CONFIGURE+= -qt-sql-ibase
 endif
-ifeq ($(BR2_PACKAGE_QTOPIA4_MYSQL),y)
-QTOPIA4_CONFIGURE+= -qt-sql-mysql
+ifeq ($(BR2_PACKAGE_QT_MYSQL),y)
+QT_CONFIGURE+= -qt-sql-mysql
 endif
-ifeq ($(BR2_PACKAGE_QTOPIA4_ODBC),y)
-QTOPIA4_CONFIGURE+= -qt-sql-odbc
+ifeq ($(BR2_PACKAGE_QT_ODBC),y)
+QT_CONFIGURE+= -qt-sql-odbc
 endif
-ifeq ($(BR2_PACKAGE_QTOPIA4_PSQL),y)
-QTOPIA4_CONFIGURE+= -qt-sql-psql
+ifeq ($(BR2_PACKAGE_QT_PSQL),y)
+QT_CONFIGURE+= -qt-sql-psql
 endif
-ifeq ($(BR2_PACKAGE_QTOPIA4_SQLITE),y)
-QTOPIA4_CONFIGURE+= -qt-sql-sqlite
+ifeq ($(BR2_PACKAGE_QT_SQLITE),y)
+QT_CONFIGURE+= -qt-sql-sqlite
 else
-QTOPIA4_CONFIGURE+= -no-sql-sqlite
+QT_CONFIGURE+= -no-sql-sqlite
 endif
-ifeq ($(BR2_PACKAGE_QTOPIA4_SQLITE2),y)
-QTOPIA4_CONFIGURE+= -qt-sql-sqlite2
+ifeq ($(BR2_PACKAGE_QT_SQLITE2),y)
+QT_CONFIGURE+= -qt-sql-sqlite2
 endif
 else
 # By default, no SQL driver is turned on by configure.
 # but it seams sqlite isn't disabled despite what says
 # configure --help
-QTOPIA4_CONFIGURE+= -no-sql-sqlite
+QT_CONFIGURE+= -no-sql-sqlite
 endif
 
-ifeq ($(BR2_PACKAGE_QTOPIA4_XMLPATTERNS),y)
-QTOPIA4_CONFIGURE+= -xmlpatterns
+ifeq ($(BR2_PACKAGE_QT_XMLPATTERNS),y)
+QT_CONFIGURE+= -xmlpatterns -exceptions
 else
-QTOPIA4_CONFIGURE+= -no-xmlpatterns
+QT_CONFIGURE+= -no-xmlpatterns
 endif
 
-ifeq ($(BR2_PACKAGE_QTOPIA4_SVG),y)
-QTOPIA4_CONFIGURE+= -svg
+ifeq ($(BR2_PACKAGE_QT_PHONON),y)
+QT_CONFIGURE+= -phonon
+QT_DEP_LIBS+=gstreamer gst-plugins-base
 else
-QTOPIA4_CONFIGURE+= -no-svg
+QT_CONFIGURE+= -no-phonon
 endif
 
-ifeq ($(BR2_PACKAGE_QTOPIA4_WEBKIT),y)
-QTOPIA4_CONFIGURE+= -webkit
+ifeq ($(BR2_PACKAGE_QT_SVG),y)
+QT_CONFIGURE+= -svg
 else
-QTOPIA4_CONFIGURE+= -no-webkit
+QT_CONFIGURE+= -no-svg
 endif
 
-QTOPIA4_CONFIGURE:=$(strip $(subst ",, $(QTOPIA4_CONFIGURE)))
-#"))
-BR2_PACKAGE_QTOPIA4_EMB_PLATFORM:=$(strip $(subst ",, $(BR2_PACKAGE_QTOPIA4_EMB_PLATFORM)))
-#"))
+ifeq ($(BR2_PACKAGE_QT_WEBKIT),y)
+QT_CONFIGURE+= -webkit
+else
+QT_CONFIGURE+= -no-webkit
+endif
 
-QTOPIA4_QMAKE_CONF:=$(QTOPIA4_TARGET_DIR)/mkspecs/qws/linux-$(BR2_PACKAGE_QTOPIA4_EMB_PLATFORM)-g++/qmake.conf
+ifeq ($(BR2_PACKAGE_QT_STL),y)
+QT_CONFIGURE+= -stl
+else
+QT_CONFIGURE+= -no-stl
+endif
 
-# Variable for other Qt applications to use
-QTOPIA4_QMAKE:=$(STAGING_DIR)/usr/bin/qmake -spec qws/linux-$(BR2_PACKAGE_QTOPIA4_EMB_PLATFORM)-g++
+# ccache and precompiled headers don't play well together
+ifeq ($(BR2_CCACHE),y)
+QT_CONFIGURE += -no-pch
+endif
 
-$(DL_DIR)/$(QTOPIA4_SOURCE):
-	$(WGET) -P $(DL_DIR) $(QTOPIA4_SITE)/$(QTOPIA4_SOURCE)
+BR2_PACKAGE_QT_EMB_PLATFORM:=$(call qstrip,$(BR2_PACKAGE_QT_EMB_PLATFORM))
 
-qtopia4-source: $(DL_DIR)/$(QTOPIA4_SOURCE)
+# x86x86fix
+# Workaround Qt Embedded bug when crosscompiling for x86 under x86 with linux
+# host. It's unclear if this would happen on other hosts.
+ifneq ($(findstring pc-linux,$(BR2_GNU_BUILD_SUFFIX)),)
+ifneq ($(findstring x86,$(BR2_PACKAGE_QT_EMB_PLATFORM)),)
+QT_CONFIGURE+= -platform linux-g++
+endif
+endif
+# End of workaround.
 
+# Figure out what libs to install in the target
+QT_LIBS=#empty
+ifeq ($(BR2_PACKAGE_QT_GUI_MODULE),y)
+QT_LIBS+= qt-gui
+endif
+ifeq ($(BR2_PACKAGE_QT_SQL_MODULE),y)
+QT_LIBS+= qt-sql
+endif
+ifeq ($(BR2_PACKAGE_QT_PHONON),y)
+QT_LIBS+= qt-phonon
+endif
+ifeq ($(BR2_PACKAGE_QT_SVG),y)
+QT_LIBS+= qt-svg
+endif
+ifeq ($(BR2_PACKAGE_QT_NETWORK),y)
+QT_LIBS+= qt-network
+endif
+ifeq ($(BR2_PACKAGE_QT_WEBKIT),y)
+QT_LIBS+= qt-webkit
+endif
+ifeq ($(BR2_PACKAGE_QT_XML),y)
+QT_LIBS+= qt-xml
+endif
+ifeq ($(BR2_PACKAGE_QT_XMLPATTERNS),y)
+QT_LIBS+= qt-xmlpatterns
+endif
+ifeq ($(BR2_PACKAGE_QT_SCRIPT),y)
+QT_LIBS+= qt-script
+endif
+ifeq ($(BR2_PACKAGE_QT_SCRIPTTOOLS),y)
+QT_LIBS+= qt-scripttools
+endif
 
-$(QTOPIA4_TARGET_DIR)/.unpacked: $(DL_DIR)/$(QTOPIA4_SOURCE)
-	$(QTOPIA4_CAT) $(DL_DIR)/$(QTOPIA4_SOURCE) | tar -C $(BUILD_DIR) $(TAR_OPTIONS) -
-	toolchain/patch-kernel.sh $(QTOPIA4_TARGET_DIR) package/qtopia4/ \
-		qtopia-$(QTOPIA4_VERSION)-\*.patch \
-		qtopia-$(QTOPIA4_VERSION)-\*.patch.$(ARCH)
+QT_QMAKE_CONF:=$(QT_TARGET_DIR)/mkspecs/qws/linux-$(BR2_PACKAGE_QT_EMB_PLATFORM)-g++/qmake.conf
+
+# Variable for other Qt applications to use
+QT_QMAKE:=$(STAGING_DIR)/usr/bin/qmake -spec qws/linux-$(BR2_PACKAGE_QT_EMB_PLATFORM)-g++
+
+################################################################################
+# QT_QMAKE_SET -- helper macro to set QMAKE_<variable> = <value> in
+# QT_QMAKE_CONF. Will remove existing variable declaration if available.
+#
+# Argument 1 is the variable name (without QMAKE_)
+# Argument 2 is the value to set variable to
+#
+# E.G. use like this:
+# $(call QT_QMAKE_SET,variable,value)
+################################################################################
+define QT_QMAKE_SET
+	$(SED) '/QMAKE_$(1)/d' $(QT_QMAKE_CONF)
+	$(SED) '/include.*qws.conf/aQMAKE_$(1) = $(2)' $(QT_QMAKE_CONF)
+endef
+
+################################################################################
+# QT_INSTALL_PLUGINS -- helper macro to install Qt plugins to target and
+# strip them
+#
+# Argument 1 is the plugin folder
+#
+# E.G. use like this to install plugins/sqldrivers:
+# $(call QT_INSTALL_PLUGINS,sqldrivers)
+# ################################################################################
+define QT_INSTALL_PLUGINS
+        if [ -d $(STAGING_DIR)/usr/plugins/$(1) ]; then \
+                mkdir -p $(TARGET_DIR)/usr/plugins; \
+                cp -dpfr $(STAGING_DIR)/usr/plugins/$(1) $(TARGET_DIR)/usr/plugins/; \
+                $(STRIPCMD) $(STRIP_STRIP_UNNEEDED) $(TARGET_DIR)/usr/plugins/$(1)/*; \
+        fi
+endef
+
+$(DL_DIR)/$(QT_SOURCE):
+	$(call DOWNLOAD,$(QT_SITE),$(QT_SOURCE))
+
+qt-source: $(DL_DIR)/$(QT_SOURCE)
+
+
+$(QT_TARGET_DIR)/.unpacked: $(DL_DIR)/$(QT_SOURCE)
+	$(QT_CAT) $(DL_DIR)/$(QT_SOURCE) | tar -C $(BUILD_DIR) $(TAR_OPTIONS) -
+	toolchain/patch-kernel.sh $(QT_TARGET_DIR) package/qtopia4/ \
+		qt-$(QT_VERSION)-\*.patch \
+		qt-$(QT_VERSION)-\*.patch.$(ARCH)
 	touch $@
 
-$(QTOPIA4_TARGET_DIR)/.configured: $(QTOPIA4_TARGET_DIR)/.unpacked
+$(QT_TARGET_DIR)/.configured: $(QT_TARGET_DIR)/.unpacked
+	-[ -f $(QT_TARGET_DIR)/Makefile ] && $(MAKE) -C $(QT_TARGET_DIR) confclean
 ifneq ($(BR2_INET_IPV6),y)
-	$(SED) 's/^CFG_IPV6=auto/CFG_IPV6=no/' $(QTOPIA4_TARGET_DIR)/configure
-	$(SED) 's/^CFG_IPV6IFNAME=auto/CFG_IPV6IFNAME=no/' $(QTOPIA4_TARGET_DIR)/configure
+	$(SED) 's/^CFG_IPV6=auto/CFG_IPV6=no/' $(QT_TARGET_DIR)/configure
+	$(SED) 's/^CFG_IPV6IFNAME=auto/CFG_IPV6IFNAME=no/' $(QT_TARGET_DIR)/configure
 endif
-	$(SED) 's/^CFG_XINERAMA=auto/CFG_XINERAMA=no/' $(QTOPIA4_TARGET_DIR)/configure
-	#$(SED) 's,-O2,$(TARGET_CFLAGS),' $(QTOPIA4_TARGET_DIR)/mkspecs/qws/linux-$(BR2_PACKAGE_QTOPIA4_EMB_PLATFORM)-g++/qmake.conf
-        # Fix compiler path
-	$(SED) '\,QMAKE_CC[ 	]*=, c\QMAKE_CC = $(TARGET_CC)' $(QTOPIA4_QMAKE_CONF)
-	$(SED) '\,QMAKE_CXX[ 	]*=, c\QMAKE_CXX = $(TARGET_CXX)' $(QTOPIA4_QMAKE_CONF)
-	$(SED) '\,QMAKE_LINK[ 	]*=, c\QMAKE_LINK = $(TARGET_CXX)' $(QTOPIA4_QMAKE_CONF)
-	$(SED) '\,QMAKE_LINK_SHLIB[ 	]*=, c\QMAKE_LINK_SHLIB = $(TARGET_CXX)' $(QTOPIA4_QMAKE_CONF)
-	$(SED) '\,QMAKE_AR[ 	]*=, c\QMAKE_AR = $(TARGET_AR) cqs' $(QTOPIA4_QMAKE_CONF)
-	$(SED) '\,QMAKE_RANLIB[ 	]*=, c\QMAKE_RANLIB = $(TARGET_RANLIB)' $(QTOPIA4_QMAKE_CONF)
-	$(SED) '\,QMAKE_STRIP[ 	]*=, c\QMAKE_STRIP = $(TARGET_STRIP)' $(QTOPIA4_QMAKE_CONF)
-
-	-[ -f $(QTOPIA4_QCONFIG_FILE) ] && cp $(QTOPIA4_QCONFIG_FILE) \
-		$(QTOPIA4_TARGET_DIR)/$(QTOPIA4_QCONFIG_FILE_LOCATION)
-# Qt doesn't use PKG_CONFIG, it searches for pkg-config with 'which'.
-# PKG_CONFIG_SYSROOT is only used to avoid a warning from Qt's configure system
-# when cross compiling, Qt 4.4.3 is wrong here.
+	# Fix compiler path
+	$(call QT_QMAKE_SET,CC,$(TARGET_CC))
+	$(call QT_QMAKE_SET,CXX,$(TARGET_CXX))
+	$(call QT_QMAKE_SET,LINK,$(TARGET_CXX))
+	$(call QT_QMAKE_SET,LINK_SHLIB,$(TARGET_CXX))
+	$(call QT_QMAKE_SET,AR,$(TARGET_AR) cqs)
+	$(call QT_QMAKE_SET,OBJCOPY,$(TARGET_OBJCOPY))
+	$(call QT_QMAKE_SET,RANLIB,$(TARGET_RANLIB))
+	$(call QT_QMAKE_SET,STRIP,$(TARGET_STRIP))
+	$(call QT_QMAKE_SET,CFLAGS,$(TARGET_CFLAGS))
+	$(call QT_QMAKE_SET,CXXFLAGS,$(TARGET_CXXFLAGS))
+	$(call QT_QMAKE_SET,LFLAGS,$(TARGET_LDFLAGS))
+	-[ -f $(QT_QCONFIG_FILE) ] && cp $(QT_QCONFIG_FILE) \
+		$(QT_TARGET_DIR)/$(QT_QCONFIG_FILE_LOCATION)
 # Don't use TARGET_CONFIGURE_OPTS here, qmake would be compiled for the target
-# instead of the host then.
-	(cd $(QTOPIA4_TARGET_DIR); rm -rf config.cache; \
-		PATH=$(TARGET_PATH) \
+# instead of the host then. So set PKG_CONFIG* manually.
+	(cd $(QT_TARGET_DIR); \
 		PKG_CONFIG_SYSROOT_DIR="$(STAGING_DIR)" \
+		PKG_CONFIG="$(PKG_CONFIG_HOST_BINARY)" \
 		PKG_CONFIG_PATH="$(STAGING_DIR)/usr/lib/pkgconfig:$(PKG_CONFIG_PATH)" \
-		PKG_CONFIG_SYSROOT="$(STAGING_DIR)" \
 		./configure \
-		-verbose \
+		$(if $(VERBOSE),-verbose,-silent) \
 		-force-pkg-config \
-		-embedded $(BR2_PACKAGE_QTOPIA4_EMB_PLATFORM) \
-		$(QTOPIA4_QCONFIG_COMMAND) \
-		$(QTOPIA4_CONFIGURE) \
-		-no-stl \
+		-embedded $(BR2_PACKAGE_QT_EMB_PLATFORM) \
+		$(QT_QCONFIG_COMMAND) \
+		$(QT_CONFIGURE) \
+		-no-xinerama \
 		-no-cups \
 		-no-nis \
 		-no-accessibility \
@@ -345,56 +491,101 @@
 	)
 	touch $@
 
-$(QTOPIA4_TARGET_DIR)/.compiled: $(QTOPIA4_TARGET_DIR)/.configured
-	$(TARGET_CONFIGURE_OPTS) $(MAKE) -C $(QTOPIA4_TARGET_DIR)
+$(QT_TARGET_DIR)/.compiled: $(QT_TARGET_DIR)/.configured
+	$(MAKE) -C $(QT_TARGET_DIR)
 	touch $@
 
-$(STAGING_DIR)/usr/lib/libQtCore.la: $(QTOPIA4_TARGET_DIR)/.compiled
-	$(TARGET_CONFIGURE_OPTS) $(MAKE) -C $(QTOPIA4_TARGET_DIR) install
+$(STAGING_DIR)/usr/lib/libQtCore.la: $(QT_TARGET_DIR)/.compiled
+	$(MAKE) -C $(QT_TARGET_DIR) install
 
-$(TARGET_DIR)/usr/lib/libQtCore.so.4: $(STAGING_DIR)/usr/lib/libQtCore.la
+qt-gui: $(STAGING_DIR)/usr/lib/libQtCore.la
 	mkdir -p $(TARGET_DIR)/usr/lib/fonts
-	touch $(TARGET_DIR)/usr/lib/fonts/fontdir
-	cp -dpf $(STAGING_DIR)/usr/lib/fonts/helvetica*.qpf $(TARGET_DIR)/usr/lib/fonts
-	cp -dpf $(STAGING_DIR)/usr/lib/fonts/fixed*.qpf $(TARGET_DIR)/usr/lib/fonts
-	cp -dpf $(STAGING_DIR)/usr/lib/fonts/micro*.qpf $(TARGET_DIR)/usr/lib/fonts
-ifeq ($(BR2_PACKAGE_QTOPIA4_SHARED),y)
-	cp -dpf $(STAGING_DIR)/usr/lib/libQt*.so.* $(TARGET_DIR)/usr/lib/
-	-$(STRIPCMD) $(STRIP_STRIP_UNNEEDED) $(TARGET_DIR)/usr/lib/libQt*.so.*
+ifneq ($(QT_FONTS),)
+	cp -dpf $(QT_FONTS) $(TARGET_DIR)/usr/lib/fonts
+endif
+ifneq ($(BR2_PACKAGE_QT_NOFREETYPE),y)
+	cp -dpf $(STAGING_DIR)/usr/lib/fonts/*.ttf $(TARGET_DIR)/usr/lib/fonts
 endif
 	# Install image plugins if they are built
-	if [ -d $(STAGING_DIR)/usr/plugins/imageformats ]; then \
-		mkdir -p $(TARGET_DIR)/usr/plugins; \
-		cp -dpfr $(STAGING_DIR)/usr/plugins/imageformats $(TARGET_DIR)/usr/plugins/; \
-		$(STRIPCMD) $(STRIP_STRIP_UNNEEDED) $(TARGET_DIR)/usr/plugins/imageformats/*; \
-	fi
-ifneq ($(BR2_PACKAGE_QTOPIA4_SQL_MODULE),y)
-	# Remove Sql libraries, not needed
-	-rm $(TARGET_DIR)/usr/lib/libQtSql*
-endif
-ifneq ($(BR2_PACKAGE_QTOPIA4_SVG),y)
-	# Remove Svg libraries, not needed
-	-rm $(TARGET_DIR)/usr/lib/libQtSvg*
-endif
-
-qtopia4: uclibc zlib $(QTOPIA4_DEP_LIBS) $(TARGET_DIR)/usr/lib/libQtCore.so.4
-
-qtopia4-clean:
-	-$(MAKE) -C $(QTOPIA4_TARGET_DIR) clean
-
-qtopia4-dirclean:
-	rm -rf $(QTOPIA4_TARGET_DIR)
-
-qtopia4-status:
-	@echo "QTOPIA4_QMAKE:               " $(QTOPIA4_QMAKE)
-	@echo "QTOPIA4_DEP_LIBS:            " $(QTOPIA4_DEP_LIBS)
-	@echo "FREETYPE_DIR:		    " $(FREETYPE_DIR)
+	$(call QT_INSTALL_PLUGINS,imageformats)
+ifeq ($(BR2_PACKAGE_QT_SHARED),y)
+	cp -dpf $(STAGING_DIR)/usr/lib/libQtGui.so.* $(TARGET_DIR)/usr/lib/
+endif
+
+qt-sql: $(STAGING_DIR)/usr/lib/libQtCore.la
+	$(call QT_INSTALL_PLUGINS,sqldrivers)
+ifeq ($(BR2_PACKAGE_QT_SHARED),y)
+	cp -dpf $(STAGING_DIR)/usr/lib/libQtSql.so.* $(TARGET_DIR)/usr/lib/
+endif
+
+qt-phonon: $(STAGING_DIR)/usr/lib/libQtCore.la
+	$(call QT_INSTALL_PLUGINS,phonon_backend)
+ifeq ($(BR2_PACKAGE_QT_SHARED),y)
+	cp -dpf $(STAGING_DIR)/usr/lib/libphonon.so.* $(TARGET_DIR)/usr/lib/
+endif
+
+qt-svg: $(STAGING_DIR)/usr/lib/libQtCore.la
+	$(call QT_INSTALL_PLUGINS,iconengines)
+ifeq ($(BR2_PACKAGE_QT_SHARED),y)
+	cp -dpf $(STAGING_DIR)/usr/lib/libQtSvg.so.* $(TARGET_DIR)/usr/lib/
+endif
+
+qt-network: $(STAGING_DIR)/usr/lib/libQtCore.la
+ifeq ($(BR2_PACKAGE_QT_SHARED),y)
+	cp -dpf $(STAGING_DIR)/usr/lib/libQtNetwork.so.* $(TARGET_DIR)/usr/lib/
+endif
+
+qt-webkit: $(STAGING_DIR)/usr/lib/libQtCore.la
+ifeq ($(BR2_PACKAGE_QT_SHARED),y)
+	cp -dpf $(STAGING_DIR)/usr/lib/libQtWebKit.so.* $(TARGET_DIR)/usr/lib/
+endif
+
+qt-xml: $(STAGING_DIR)/usr/lib/libQtCore.la
+ifeq ($(BR2_PACKAGE_QT_SHARED),y)
+	cp -dpf $(STAGING_DIR)/usr/lib/libQtXml.so.* $(TARGET_DIR)/usr/lib/
+endif
+
+qt-xmlpatterns: $(STAGING_DIR)/usr/lib/libQtCore.la
+ifeq ($(BR2_PACKAGE_QT_SHARED),y)
+	cp -dpf $(STAGING_DIR)/usr/lib/libQtXmlPatterns.so.* $(TARGET_DIR)/usr/lib/
+endif
+
+qt-script: $(STAGING_DIR)/usr/lib/libQtCore.la
+ifeq ($(BR2_PACKAGE_QT_SHARED),y)
+	cp -dpf $(STAGING_DIR)/usr/lib/libQtScript.so.* $(TARGET_DIR)/usr/lib/
+endif
+
+qt-scripttools: $(STAGING_DIR)/usr/lib/libQtCore.la
+ifeq ($(BR2_PACKAGE_QT_SHARED),y)
+	cp -dpf $(STAGING_DIR)/usr/lib/libQtScriptTools.so.* $(TARGET_DIR)/usr/lib/
+endif
+
+
+$(TARGET_DIR)/usr/lib/libQtCore.so.4: $(STAGING_DIR)/usr/lib/libQtCore.la $(QT_LIBS)
+	# Strip all installed libs
+ifeq ($(BR2_PACKAGE_QT_SHARED),y)
+	cp -dpf $(STAGING_DIR)/usr/lib/libQtCore.so.* $(TARGET_DIR)/usr/lib/
+	-$(STRIPCMD) $(STRIP_STRIP_UNNEEDED) $(TARGET_DIR)/usr/lib/libQt*.so.*
+endif
+
+qt: $(QT_DEP_LIBS) $(TARGET_DIR)/usr/lib/libQtCore.so.4
+
+qt-clean:
+	-$(MAKE) -C $(QT_TARGET_DIR) clean
+	-rm -rf $(TARGET_DIR)/usr/lib/fonts
+ifeq ($(BR2_PACKAGE_QT_SHARED),y)
+	-rm $(TARGET_DIR)/usr/lib/libQt*.so.*
+	-rm $(TARGET_DIR)/usr/lib/libphonon.so.*
+endif
+
+qt-dirclean:
+	rm -rf $(QT_TARGET_DIR)
 
 #############################################################
 #
 # Toplevel Makefile options
 #
 #############################################################
-ifeq ($(strip $(BR2_PACKAGE_QTOPIA4)),y)
-TARGETS+=qtopia4
+ifeq ($(BR2_PACKAGE_QT),y)
+TARGETS+=qt
 endif
