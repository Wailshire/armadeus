This patch fully integrates Qt 4.5.3 to Buildroot with some added features :
* handling of sql, mouse, keyboard and gfx plugins
* the cross-compiling of Qt is supported 
* possibility to install the cross-compiled version of Qt on the target
* if you have already compiled Qt with the configuration you wanted, you can reuse it instead of entirely rebuild it

Signed-off-by: Jérémie Scheer <jeremie.scheer@armadeus.com>

Index: buildroot/package/qtopia4/Config.gfx.in
===================================================================
--- buildroot.orig/package/qtopia4/Config.gfx.in	2010-07-23 12:16:59.000000000 +0200
+++ buildroot/package/qtopia4/Config.gfx.in	2010-07-28 15:30:42.000000000 +0200
@@ -1,5 +1,7 @@
 menu "Graphics drivers"
 
+menu "Drivers"
+
 config BR2_PACKAGE_QT_GFX_LINUXFB
 	bool "Linux Framebuffer"
 	default y
@@ -17,3 +19,21 @@
 	bool "multiscreen"
 
 endmenu
+
+menu "Plugins"
+
+config BR2_PACKAGE_QT_GFX_PLUGIN_LINUXFB
+	bool "Linux Framebuffer"
+
+config BR2_PACKAGE_QT_GFX_PLUGIN_QVFB
+	bool "Qt Virtual Framebuffer"
+
+config BR2_PACKAGE_QT_GFX_PLUGIN_TRANSFORMED
+	bool "Transformed"
+
+config BR2_PACKAGE_QT_GFX_PLUGIN_VNC
+	bool "VNC"
+
+endmenu
+
+endmenu
Index: buildroot/package/qtopia4/Config.in
===================================================================
--- buildroot.orig/package/qtopia4/Config.in	2010-07-23 12:16:59.000000000 +0200
+++ buildroot/package/qtopia4/Config.in	2010-07-28 15:30:42.000000000 +0200
@@ -11,6 +11,29 @@
 
 if BR2_PACKAGE_QT
 
+source "package/qtopia4/Config.xcompile.in"
+
+config BR2_PACKAGE_QT_USE_EXISTING_INSTALL
+	bool "Use existing Qt install"
+	help
+	  If you don't want to entirely rebuild Qt and if you already have
+	  a Qt installation with the same configuration that you want for
+	  this project, you can use this existing installation.
+	  Only tools and libraries needed for developing applications will
+	  be copied.
+
+	  Say N if you don't want to use an existing Qt
+	  installation.
+
+if BR2_PACKAGE_QT_USE_EXISTING_INSTALL
+
+config BR2_PACKAGE_QT_EXIST_INSTALL_DIR
+	string "Existing Qt install dir"
+	help
+	  Enter the existing Qt installation directory here.
+	  Must be the Qt root path.
+endif
+
 config BR2_PACKAGE_QT_DEBUG
 	bool "Compile with debug support"
 	help
@@ -39,6 +62,25 @@
 
 endchoice
 
+config BR2_PACKAGE_QT_FAST
+	bool "Fast Makefile generation"
+	default y
+	help
+	  Configure Qt quickly by generating Makefiles only for library
+	  and subdirectory targets.
+	  All other Makefiles are created as wrappers, which will
+	  in turn run qmake.
+
+config BR2_PACKAGE_QT_EXCEPTIONS
+	bool "Compilers  exceptions"
+	help
+	  Enable exceptions on compilers that support it.
+
+config BR2_PACKAGE_QT_OPTIMIZED_QMAKE
+	bool "Optimized qmake"
+	help
+	  Build optimized qmake.
+
 config BR2_PACKAGE_QT_LICENSE_APPROVED
 	bool "Approve free license"
 	help
@@ -214,6 +256,11 @@
 	bool "Use Qt bundled libtiff"
 endchoice
 
+config BR2_PACKAGE_QT_QWS_CURSOR
+	bool "QWS cursor"
+	help
+	  Display a QWS cursor on the target GUI.
+
 endif # BR2_PACKAGE_QT_GUI_MODULE
 
 choice
@@ -234,34 +281,98 @@
 	  Use the shared zlib from the system.
 endchoice
 
-config BR2_PACKAGE_QT_EMB_PLATFORM
-	string "The embedded platform we are making Qt for"
-	default "arm"	if BR2_arm
-	default "arm"	if BR2_armeb
-	default "avr32"	if BR2_avr32
-	default "x86"	if BR2_i386
-	default "x86_64"	if BR2_x86_64
-	default "mips"	if BR2_mips
-	default "mips"	if BR2_mipsel
-	default "ppc"	if BR2_powerpc
+choice
+	prompt "The embedded platform we are making Qt for"
+	default BR2_PACKAGE_QT_ARM 	if BR2_arm
+	default BR2_PACKAGE_QT_ARM	if BR2_armeb
+	default BR2_PACKAGE_QT_AVR32	if BR2_avr32
+	default BR2_PACKAGE_QT_X86	if BR2_i386
+	default BR2_PACKAGE_QT_X86_64	if BR2_x86_64
+	default BR2_PACKAGE_QT_MIPS	if BR2_mips
+	default BR2_PACKAGE_QT_MIPS	if BR2_mipsel
+	default BR2_PACKAGE_QT_POWERPC	if BR2_powerpc
 # Not that I really believe these will work..
-	default "generic"	if BR2_alpha
-	default "generic"	if BR2_chris
-	default "generic"	if BR2_m68k
-	default "generic"	if BR2_nios2
-	default "generic"	if BR2_sh
-	default "generic"	if BR2_sh64
-	default "generic"	if BR2_sparc
+	default BR2_PACKAGE_QT_GENERIC	if BR2_alpha
+	default BR2_PACKAGE_QT_GENERIC	if BR2_chris
+	default BR2_PACKAGE_QT_GENERIC	if BR2_m68k
+	default BR2_PACKAGE_QT_GENERIC	if BR2_nios2
+	default BR2_PACKAGE_QT_GENERIC	if BR2_sh
+	default BR2_PACKAGE_QT_GENERIC	if BR2_sh64
+	default BR2_PACKAGE_QT_GENERIC	if BR2_sparc
 	help
 	  The target platform.
 
+config BR2_PACKAGE_QT_ARM
+	bool "arm"
+config BR2_PACKAGE_QT_AVR32
+	bool "avr32"
+config BR2_PACKAGE_QT_X86
+	bool "x86"
+config BR2_PACKAGE_QT_X86_64
+	bool "x86_64"
+config BR2_PACKAGE_QT_MIPS
+	bool "mips"
+config BR2_PACKAGE_QT_POWERPC
+	bool "powerpc"
+config BR2_PACKAGE_QT_GENERIC
+	bool "generic"
+endchoice
+
+
+config BR2_PACKAGE_QT_INSTALL_DIR
+	string "Install dir"
+	default "$(STAGING_DIR)/usr/local/Trolltech/QtEmbedded"
+	help
+	  Directory where all files relatives to Qt will be installed.
+
+	  The default is $(STAGING_DIR)/usr/local/Trolltech/QtEmbedded
+
+menu "Misc"
+config BR2_PACKAGE_QT_NOMMX
+	bool "No MMX"
+	help
+	  Do not compile with use of MMX instructions.
+config BR2_PACKAGE_QT_NO3DNOW
+	bool "No 3DNOW"
+	help
+	  Do not compile with use of 3DNOW instructions.
+config BR2_PACKAGE_QT_NOSSE
+	bool "No SSE"
+	help
+	  Do not compile with use of SSE instructions.
+config BR2_PACKAGE_QT_NOSSE2
+	bool "No SSE2"
+	help
+	  Do not compile with use of SSE2 instructions.
+endmenu
+
 source "package/qtopia4/Config.sql.in"
 if BR2_PACKAGE_QT_GUI_MODULE
 source "package/qtopia4/Config.gfx.in"
 source "package/qtopia4/Config.mouse.in"
 source "package/qtopia4/Config.keyboard.in"
+
+config BR2_PACKAGE_QT_QVFB
+	bool "QVFB"
+	help
+	  Compile QVFB gfx, mouse and keyboard drivers
 endif
 
+config BR2_PACKAGE_QT_ICONV
+	bool "Iconv"
+	help
+	  Compile support for iconv.
+
+config BR2_PACKAGE_QT_DBUS
+	bool "DBus Module"
+	help
+	  Compile the QtDBus module and dynamically load libdbus.
+
+config BR2_PACKAGE_QT_GLIB
+	bool "Glib"
+	help
+	  Compile Glib support.
+
 config BR2_PACKAGE_QT_XML
 	bool "XML Module"
 	default y
@@ -325,4 +436,14 @@
 	  Build the Qt Script Tools module.
 	  if unsure, say n.
 
+config BR2_PACKAGE_QT_DEMOS
+	bool "Demos"
+	help
+	  Build the Qt Demos.
+
+config BR2_PACKAGE_QT_EXAMPLES
+	bool "Examples"
+	help
+	  Build the Qt Examples.
+
 endif # BR2_PACKAGE_QT
Index: buildroot/package/qtopia4/Config.mouse.in
===================================================================
--- buildroot.orig/package/qtopia4/Config.mouse.in	2010-07-23 12:16:59.000000000 +0200
+++ buildroot/package/qtopia4/Config.mouse.in	2010-07-28 15:31:36.000000000 +0200
@@ -1,13 +1,17 @@
 menu "Mouse drivers"
 
+menu "Drivers"
+
 config BR2_PACKAGE_QT_MOUSE_PC
 	bool "pc"
+	default y
 
 config BR2_PACKAGE_QT_MOUSE_BUS
 	bool "bus"
 
 config BR2_PACKAGE_QT_MOUSE_LINUXTP
 	bool "linuxtp"
+	default y
 
 config BR2_PACKAGE_QT_MOUSE_YOPY
 	bool "yopy"
@@ -22,3 +26,30 @@
 	bool "qvfb"
 
 endmenu
+
+menu "Plugins"
+
+config BR2_PACKAGE_QT_MOUSE_PLUGIN_BUS
+	bool "bus"
+
+config BR2_PACKAGE_QT_MOUSE_PLUGIN_LINUXIS
+	bool "linuxis"
+
+config BR2_PACKAGE_QT_MOUSE_PLUGIN_LINUXTP
+	bool "linuxtp"
+
+config BR2_PACKAGE_QT_MOUSE_PLUGIN_PC
+	bool "pc"
+
+config BR2_PACKAGE_QT_MOUSE_PLUGIN_TSLIB
+	bool "tslib"
+
+config BR2_PACKAGE_QT_MOUSE_PLUGIN_VR41XX
+	bool "vr41xx"
+
+config BR2_PACKAGE_QT_MOUSE_PLUGIN_YOPY
+	bool "yopy"
+
+endmenu
+
+endmenu
Index: buildroot/package/qtopia4/Config.sql.in
===================================================================
--- buildroot.orig/package/qtopia4/Config.sql.in	2010-07-23 12:16:59.000000000 +0200
+++ buildroot/package/qtopia4/Config.sql.in	2010-07-28 15:30:42.000000000 +0200
@@ -4,6 +4,9 @@
 	  Compile Qt SQL Module
 
 if BR2_PACKAGE_QT_SQL_MODULE
+
+menu "Drivers"
+
 config BR2_PACKAGE_QT_MYSQL
 	bool "MySQL Driver"
 	help
@@ -31,7 +34,7 @@
 config BR2_PACKAGE_QT_SQLITE
 	bool "SQLite 3 Driver"
 	help
-	  Build SQLite driver
+	  Build SQLite 3 driver
 	  If unsure, say n.
 
 config BR2_PACKAGE_QT_SQLITE2
@@ -39,4 +42,47 @@
 	help
 	  Build SQLite 2 driver
 	  If unsure, say n.
+
+endmenu
+
+menu "Plugins"
+
+config BR2_PACKAGE_QT_PLUGIN_MYSQL
+	bool "MySQL Plugin"
+	help
+	  Build MySQL plugin
+	  If unsure, say n.
+
+config BR2_PACKAGE_QT_PLUGIN_IBASE
+	bool "iBase Plugin"
+	help
+	  Build iBase plugin
+	  If unsure, say n.
+
+config BR2_PACKAGE_QT_PLUGIN_ODBC
+	bool "ODBC Plugin"
+	help
+	  Build ODBC plugin
+	  If unsure, say n.
+
+config BR2_PACKAGE_QT_PLUGIN_PSQL
+	bool "PostgreSQL Plugin"
+	help
+	  Build PostgreSQL plugin
+	  If unsure, say n.
+
+config BR2_PACKAGE_QT_PLUGIN_SQLITE
+	bool "SQLite 3 Plugin"
+	help
+	  Build SQLite 3 plugin
+	  If unsure, say n.
+
+config BR2_PACKAGE_QT_PLUGIN_SQLITE2
+	bool "SQLite 2 Plugin"
+	help
+	  Build SQLite 2 plugin
+	  If unsure, say n.
+
+endmenu
+
 endif
Index: buildroot/package/qtopia4/qtopia4.mk
===================================================================
--- buildroot.orig/package/qtopia4/qtopia4.mk	2010-07-23 12:16:59.000000000 +0200
+++ buildroot/package/qtopia4/qtopia4.mk	2010-07-28 15:30:42.000000000 +0200
@@ -20,6 +20,62 @@
 
 QT_CONFIGURE:=#empty
 
+# x86x86fix
+# Workaround Qt Embedded bug when crosscompiling for x86 under x86 with linux
+# host. It's unclear if this would happen on other hosts.
+ifneq ($(findstring pc-linux,$(BR2_GNU_BUILD_SUFFIX)),)
+ifeq ($(BR2_PACKAGE_QT_X86), y)
+QT_CONFIGURE+= -xplatform linux-g++ -arch x86 -platform linux-g++
+endif
+ifeq ($(BR2_PACKAGE_QT_X86_64), y)
+QT_CONFIGURE+= -xplatform linux-g++-64 -arch x86_64 -platform linux-g++
+endif
+endif
+# End of workaround.
+
+# Embedded platform
+ifeq ($(BR2_PACKAGE_QT_ARM),y)
+BR2_PACKAGE_QT_EMB_PLATFORM:=arm
+endif
+ifeq ($(BR2_PACKAGE_QT_AVR32),y)
+BR2_PACKAGE_QT_EMB_PLATFORM:=avr32
+endif
+ifeq ($(BR2_PACKAGE_QT_X86),y)
+BR2_PACKAGE_QT_EMB_PLATFORM:=x86
+endif
+ifeq ($(BR2_PACKAGE_QT_X86_64),y)
+BR2_PACKAGE_QT_EMB_PLATFORM:=x86_64
+endif
+ifeq ($(BR2_PACKAGE_QT_MIPS),y)
+BR2_PACKAGE_QT_EMB_PLATFORM:=mips
+endif
+ifeq ($(BR2_PACKAGE_QT_POWERPC),y)
+BR2_PACKAGE_QT_EMB_PLATFORM:=powerpc
+endif
+ifeq ($(BR2_PACKAGE_QT_GENERIC),y)
+BR2_PACKAGE_QT_EMB_PLATFORM:=generic
+endif
+
+ifneq ($(BR2_PACKAGE_QT_USE_EXISTING_INSTALL),y)
+TARGET_LIBS_DIR:=$(TARGET_DIR)/usr/local/Trolltech/QtEmbedded-$(QT_VERSION)-$(BR2_PACKAGE_QT_EMB_PLATFORM)/lib
+TARGET_PLUGINS_DIR:=$(TARGET_DIR)/usr/local/Trolltech/QtEmbedded-$(QT_VERSION)-$(BR2_PACKAGE_QT_EMB_PLATFORM)/plugins
+else
+BR2_PACKAGE_QT_EXIST_INSTALL_DIR:=$(call qstrip, $(BR2_PACKAGE_QT_EXIST_INSTALL_DIR))
+QT_EXIST_INSTALL_DIR_NAME:=`echo $(BR2_PACKAGE_QT_EXIST_INSTALL_DIR) | sed 's/.*\///'`
+TARGET_LIBS_DIR:=$(TARGET_DIR)/usr/local/Trolltech/$(QT_EXIST_INSTALL_DIR_NAME)/lib
+TARGET_PLUGINS_DIR:=$(TARGET_DIR)/usr/local/Trolltech/$(QT_EXIST_INSTALL_DIR_NAME)/plugins
+endif
+
+BR2_PACKAGE_QT_INSTALL_DIR:=$(call qstrip, $(BR2_PACKAGE_QT_INSTALL_DIR))
+ifneq ($(findstring $(STAGING_DIR)/usr/local/QtEmbedded,$(BR2_PACKAGE_QT_INSTALL_DIR)),)
+QT_CONFIGURE += -demosdir $(BR2_PACKAGE_QT_INSTALL_DIR)/QtDemos
+QT_CONFIGURE += -examplesdir $(BR2_PACKAGE_QT_INSTALL_DIR)/QtExamples
+QT_CONFIGURE += -hostprefix $(BR2_PACKAGE_QT_INSTALL_DIR)
+else
+QT_CONFIGURE += -prefix $(BR2_PACKAGE_QT_INSTALL_DIR)
+endif
+
+
 ifeq ($(BR2_PACKAGE_QT_LICENSE_APPROVED),y)
 QT_CONFIGURE += -opensource -confirm-license
 endif
@@ -90,23 +146,15 @@
 ### Display drivers
 ifeq ($(BR2_PACKAGE_QT_GFX_LINUXFB),y)
 QT_CONFIGURE += -qt-gfx-linuxfb
-else
-QT_CONFIGURE += -no-gfx-linuxfb
 endif
 ifeq ($(BR2_PACKAGE_QT_GFX_TRANSFORMED),y)
 QT_CONFIGURE += -qt-gfx-transformed
-else
-QT_CONFIGURE += -no-gfx-transformed
 endif
 ifeq ($(BR2_PACKAGE_QT_GFX_QVFB),y)
 QT_CONFIGURE += -qt-gfx-qvfb
-else
-QT_CONFIGURE += -no-gfx-qvfb
 endif
 ifeq ($(BR2_PACKAGE_QT_GFX_VNC),y)
 QT_CONFIGURE += -qt-gfx-vnc
-else
-QT_CONFIGURE += -no-gfx-vnc
 endif
 ifeq ($(BR2_PACKAGE_QT_GFX_MULTISCREEN),y)
 QT_CONFIGURE += -qt-gfx-multiscreen
@@ -114,37 +162,55 @@
 QT_CONFIGURE += -no-gfx-multiscreen
 endif
 
+### Display plugins
+ifeq ($(BR2_PACKAGE_QT_GFX_PLUGIN_LINUXFB),y)
+QT_CONFIGURE += -plugin-gfx-linuxfb
+else
+ifneq ($(BR2_PACKAGE_QT_GFX_LINUXFB),y)
+QT_CONFIGURE += -no-gfx-linuxfb
+endif
+endif
+ifeq ($(BR2_PACKAGE_QT_GFX_PLUGIN_QVFB),y)
+QT_CONFIGURE += -plugin-gfx-qvfb
+else
+ifneq ($(BR2_PACKAGE_QT_GFX_QVFB),y)
+QT_CONFIGURE += -no-gfx-qvfb
+endif
+endif
+ifeq ($(BR2_PACKAGE_QT_GFX_PLUGIN_TRANSFORMED),y)
+QT_CONFIGURE += -plugin-gfx-transformed
+else
+ifneq ($(BR2_PACKAGE_QT_GFX_TRANSFORMED),y)
+QT_CONFIGURE += -no-gfx-transformed
+endif
+endif
+ifeq ($(BR2_PACKAGE_QT_GFX_PLUGIN_VNC),y)
+QT_CONFIGURE += -plugin-gfx-vnc
+else
+ifneq ($(BR2_PACKAGE_QT_GFX_VNC),y)
+QT_CONFIGURE += -no-gfx-vnc
+endif
+endif
+
 ### Mouse drivers
 ifeq ($(BR2_PACKAGE_QT_MOUSE_PC),y)
 QT_CONFIGURE += -qt-mouse-pc
-else
-QT_CONFIGURE += -no-mouse-pc
 endif
 ifeq ($(BR2_PACKAGE_QT_MOUSE_BUS),y)
 QT_CONFIGURE += -qt-mouse-bus
-else
-QT_CONFIGURE += -no-mouse-bus
 endif
 ifeq ($(BR2_PACKAGE_QT_MOUSE_LINUXTP),y)
 QT_CONFIGURE += -qt-mouse-linuxtp
-else
-QT_CONFIGURE += -no-mouse-linuxtp
 endif
 ifeq ($(BR2_PACKAGE_QT_MOUSE_YOPY),y)
 QT_CONFIGURE += -qt-mouse-yopy
-else
-QT_CONFIGURE += -no-mouse-yopy
 endif
 ifeq ($(BR2_PACKAGE_QT_MOUSE_VR41XX),y)
 QT_CONFIGURE += -qt-mouse-vr41xx
-else
-QT_CONFIGURE += -no-mouse-vr41xx
 endif
 ifeq ($(BR2_PACKAGE_QT_MOUSE_TSLIB),y)
 QT_CONFIGURE += -qt-mouse-tslib
 QT_DEP_LIBS+=tslib
-else
-QT_CONFIGURE += -no-mouse-tslib
 endif
 ifeq ($(BR2_PACKAGE_QT_MOUSE_QVFB),y)
 QT_CONFIGURE += -qt-mouse-qvfb
@@ -152,6 +218,53 @@
 QT_CONFIGURE += -no-mouse-qvfb
 endif
 
+### Mouse plugins
+ifeq ($(BR2_PACKAGE_QT_MOUSE_PLUGIN_BUS),y)
+QT_CONFIGURE += -plugin-mouse-bus
+else
+ifneq ($(BR2_PACKAGE_QT_MOUSE_BUS),y)
+QT_CONFIGURE += -no-mouse-bus
+endif
+endif
+ifeq ($(BR2_PACKAGE_QT_MOUSE_PLUGIN_LINUXIS),y)
+QT_CONFIGURE += -plugin-mouse-linuxis
+endif
+ifeq ($(BR2_PACKAGE_QT_MOUSE_PLUGIN_LINUXTP),y)
+QT_CONFIGURE += -plugin-mouse-linuxtp
+else
+ifneq ($(BR2_PACKAGE_QT_MOUSE_LINUXTP),y)
+QT_CONFIGURE += -no-mouse-linuxtp
+endif
+endif
+ifeq ($(BR2_PACKAGE_QT_MOUSE_PLUGIN_PC),y)
+QT_CONFIGURE += -plugin-mouse-pc
+else
+ifneq ($(BR2_PACKAGE_QT_MOUSE_PC),y)
+QT_CONFIGURE += -no-mouse-pc
+endif
+endif
+ifeq ($(BR2_PACKAGE_QT_MOUSE_PLUGIN_TSLIB),y)
+QT_CONFIGURE += -plugin-mouse-tslib
+else
+ifneq ($(BR2_PACKAGE_QT_MOUSE_TSLIB),y)
+QT_CONFIGURE += -no-mouse-tslib
+endif
+endif
+ifeq ($(BR2_PACKAGE_QT_MOUSE_PLUGIN_VR41XX),y)
+QT_CONFIGURE += -plugin-mouse-vr41xx
+else
+ifneq ($(BR2_PACKAGE_QT_MOUSE_VR41XX),y)
+QT_CONFIGURE += -no-mouse-vr41xx
+endif
+endif
+ifeq ($(BR2_PACKAGE_QT_MOUSE_PLUGIN_YOPY),y)
+QT_CONFIGURE += -plugin-mouse-yopy
+else
+ifneq ($(BR2_PACKAGE_QT_MOUSE_YOPY),y)
+QT_CONFIGURE += -no-mouse-yopy
+endif
+endif
+
 ### Keyboard drivers
 ifeq ($(BR2_PACKAGE_QT_KEYBOARD_TTY),y)
 QT_CONFIGURE += -qt-kbd-tty
@@ -160,8 +273,6 @@
 endif
 ifeq ($(BR2_PACKAGE_QT_KEYBOARD_USB),y)
 QT_CONFIGURE += -qt-kbd-usb
-else
-QT_CONFIGURE += -no-kbd-usb
 endif
 ifeq ($(BR2_PACKAGE_QT_KEYBOARD_SL5000),y)
 QT_CONFIGURE += -qt-kbd-sl5000
@@ -175,8 +286,6 @@
 endif
 ifeq ($(BR2_PACKAGE_QT_KEYBOARD_VR41XX),y)
 QT_CONFIGURE += -qt-kbd-vr41xx
-else
-QT_CONFIGURE += -no-kbd-vr41xx
 endif
 ifeq ($(BR2_PACKAGE_QT_KEYBOARD_QVFB),y)
 QT_CONFIGURE += -qt-kbd-qvfb
@@ -184,6 +293,29 @@
 QT_CONFIGURE += -no-kbd-qvfb
 endif
 
+### Keyboard plugins
+ifeq ($(BR2_PACKAGE_QT_KEYBOARD_PLUGIN_LINUXIS),y)
+QT_CONFIGURE += -plugin-kbd-linuxis
+endif
+ifeq ($(BR2_PACKAGE_QT_KEYBOARD_PLUGIN_USB),y)
+QT_CONFIGURE += -plugin-kbd-usb
+else
+ifneq ($(BR2_PACKAGE_QT_KEYBOARD_USB),y)
+QT_CONFIGURE += -no-kbd-usb
+endif
+endif
+ifeq ($(BR2_PACKAGE_QT_KEYBOARD_PLUGIN_VR41XX),y)
+QT_CONFIGURE += -plugin-kbd-vr41xx
+else
+ifneq ($(BR2_PACKAGE_QT_KEYBOARD_VR41XX),y)
+QT_CONFIGURE += -no-kbd-vr41xx
+endif
+endif
+
+ifeq ($(BR2_PACKAGE_QT_QVFB),y)
+QT_CONFIGURE+= -qvfb
+endif
+
 ifeq ($(BR2_PACKAGE_QT_DEBUG),y)
 QT_CONFIGURE+= -debug
 else
@@ -196,6 +328,24 @@
 QT_CONFIGURE+= -static
 endif
 
+ifeq ($(BR2_PACKAGE_QT_FAST),y)
+QT_CONFIGURE+= -fast
+else
+QT_CONFIGURE+= -no-fast
+endif
+
+ifeq ($(BR2_PACKAGE_QT_EXCEPTIONS),y)
+QT_CONFIGURE+= -exceptions
+else
+QT_CONFIGURE+= -no-exceptions
+endif
+
+ifeq ($(BR2_PACKAGE_QT_OPTIMIZED_QMAKE),y)
+QT_CONFIGURE+= -optimized-qmake
+else
+QT_CONFIGURE+= -no-optimized-qmake
+endif
+
 ifeq ($(BR2_ENDIAN),"LITTLE")
 QT_CONFIGURE+= -little-endian
 else
@@ -256,8 +406,12 @@
 endif
 endif
 
+ifneq ($(BR2_PACKAGE_QT_QWS_CURSOR),y)
+QT_CONFIGURE+= -DQT_NO_QWS_CURSOR
+endif
 
-QT_FONTS = $(addprefix $(STAGING_DIR)/usr/lib/fonts/, $(addsuffix *.qpf, \
+
+QT_FONTS = $(addprefix $(BR2_PACKAGE_QT_INSTALL_DIR)/lib/fonts/, $(addsuffix *.qpf, \
 	   $(if $(BR2_PACKAGE_QT_FONT_MICRO),micro) \
 	   $(if $(BR2_PACKAGE_QT_FONT_FIXED),fixed) \
 	   $(if $(BR2_PACKAGE_QT_FONT_HELVETICA),helvetica) \
@@ -301,12 +455,35 @@
 endif
 ifeq ($(BR2_PACKAGE_QT_SQLITE),y)
 QT_CONFIGURE+= -qt-sql-sqlite
-else
-QT_CONFIGURE+= -no-sql-sqlite
 endif
 ifeq ($(BR2_PACKAGE_QT_SQLITE2),y)
 QT_CONFIGURE+= -qt-sql-sqlite2
 endif
+
+# Qt SQL Plugins
+ifeq ($(BR2_PACKAGE_QT_PLUGIN_MYSQL),y)
+QT_CONFIGURE+= -plugin-sql-mysql
+endif
+ifeq ($(BR2_PACKAGE_QT_PLUGIN_IBASE),y)
+QT_CONFIGURE+= -plugin-sql-ibase
+endif
+ifeq ($(BR2_PACKAGE_QT_PLUGIN_ODBC),y)
+QT_CONFIGURE+= -plugin-sql-odbc
+endif
+ifeq ($(BR2_PACKAGE_QT_PLUGIN_PSQL),y)
+QT_CONFIGURE+= -plugin-sql-psql
+endif
+ifeq ($(BR2_PACKAGE_QT_PLUGIN_SQLITE),y)
+QT_CONFIGURE+= -plugin-sql-sqlite
+else
+ifneq ($(BR2_PACKAGE_QT_SQLITE),y)
+QT_CONFIGURE+= -no-sql-sqlite
+endif
+endif
+ifeq ($(BR2_PACKAGE_QT_PLUGIN_SQLITE2),y)
+QT_CONFIGURE+= -plugin-sql-sqlite2
+endif
+
 else
 # By default, no SQL driver is turned on by configure.
 # but it seams sqlite isn't disabled despite what says
@@ -314,6 +491,33 @@
 QT_CONFIGURE+= -no-sql-sqlite
 endif
 
+#Misc
+ifeq ($(BR2_PACKAGE_QT_NOMMX),y)
+QT_CONFIGURE+= -no-mmx
+endif
+ifeq ($(BR2_PACKAGE_QT_NO3DNOW),y)
+QT_CONFIGURE+= -no-3dnow
+endif
+ifeq ($(BR2_PACKAGE_QT_NOSSE),y)
+QT_CONFIGURE+= -no-sse
+endif
+ifeq ($(BR2_PACKAGE_QT_NOSSE2),y)
+QT_CONFIGURE+= -no-sse2
+endif
+
+ifeq ($(BR2_PACKAGE_QT_ICONV),y)
+QT_CONFIGURE+= -iconv
+else
+QT_CONFIGURE+= -no-iconv
+endif
+
+ifeq ($(BR2_PACKAGE_QT_DBUS),y)
+QT_CONFIGURE+= -dbus
+QT_DEP_LIBS+=dbus
+else
+QT_CONFIGURE+= -no-dbus
+endif
+
 ifeq ($(BR2_PACKAGE_QT_XMLPATTERNS),y)
 QT_CONFIGURE+= -xmlpatterns -exceptions
 else
@@ -345,23 +549,20 @@
 QT_CONFIGURE+= -no-stl
 endif
 
-# ccache and precompiled headers don't play well together
-ifeq ($(BR2_CCACHE),y)
-QT_CONFIGURE += -no-pch
+ifneq ($(BR2_PACKAGE_QT_DEMOS),y)
+QT_CONFIGURE+= -nomake demos
 endif
 
-BR2_PACKAGE_QT_EMB_PLATFORM:=$(call qstrip,$(BR2_PACKAGE_QT_EMB_PLATFORM))
-
-# x86x86fix
-# Workaround Qt Embedded bug when crosscompiling for x86 under x86 with linux
-# host. It's unclear if this would happen on other hosts.
-ifneq ($(findstring pc-linux,$(BR2_GNU_BUILD_SUFFIX)),)
-ifneq ($(findstring x86,$(BR2_PACKAGE_QT_EMB_PLATFORM)),)
-QT_CONFIGURE+= -platform linux-g++
+ifneq ($(BR2_PACKAGE_QT_EXAMPLES),y)
+QT_CONFIGURE+= -nomake examples
 endif
+
+# ccache and precompiled headers don't play well together
+ifeq ($(BR2_CCACHE),y)
+QT_CONFIGURE += -no-pch
 endif
-# End of workaround.
 
+ifneq ($(BR2_PACKAGE_QT_USE_EXISTING_INSTALL),y)
 # Figure out what libs to install in the target
 QT_LIBS=#empty
 ifeq ($(BR2_PACKAGE_QT_GUI_MODULE),y)
@@ -394,11 +595,18 @@
 ifeq ($(BR2_PACKAGE_QT_SCRIPTTOOLS),y)
 QT_LIBS+= qt-scripttools
 endif
+ifeq ($(BR2_PACKAGE_QT_DBUS),y)
+QT_LIBS+= qt-dbus
+endif
+else
+QT_LIBS+=qt-gui qt-sql qt-phonon qt-svg qt-network qt-webkit qt-xml qt-xmlpatterns qt-script qt-scripttools qt-dbus
+endif
+
 
 QT_QMAKE_CONF:=$(QT_TARGET_DIR)/mkspecs/qws/linux-$(BR2_PACKAGE_QT_EMB_PLATFORM)-g++/qmake.conf
 
 # Variable for other Qt applications to use
-QT_QMAKE:=$(STAGING_DIR)/usr/bin/qmake -spec qws/linux-$(BR2_PACKAGE_QT_EMB_PLATFORM)-g++
+QT_QMAKE:=$(BR2_PACKAGE_QT_INSTALL_DIR)/bin/qmake -spec qws/linux-$(BR2_PACKAGE_QT_EMB_PLATFORM)-g++
 
 ################################################################################
 # QT_QMAKE_SET -- helper macro to set QMAKE_<variable> = <value> in
@@ -425,10 +633,10 @@
 # $(call QT_INSTALL_PLUGINS,sqldrivers)
 # ################################################################################
 define QT_INSTALL_PLUGINS
-        if [ -d $(STAGING_DIR)/usr/plugins/$(1) ]; then \
-                mkdir -p $(TARGET_DIR)/usr/plugins; \
-                cp -dpfr $(STAGING_DIR)/usr/plugins/$(1) $(TARGET_DIR)/usr/plugins/; \
-                $(STRIPCMD) $(STRIP_STRIP_UNNEEDED) $(TARGET_DIR)/usr/plugins/$(1)/*; \
+        if [ -d $(BR2_PACKAGE_QT_INSTALL_DIR)/plugins/$(1) ]; then \
+                mkdir -p $(TARGET_PLUGINS_DIR); \
+                cp -dpfr $(BR2_PACKAGE_QT_INSTALL_DIR)/plugins/$(1) $(TARGET_PLUGINS_DIR)/; \
+                $(STRIPCMD) $(STRIP_STRIP_UNNEEDED) $(TARGET_PLUGINS_DIR)/$(1)/*; \
         fi
 endef
 
@@ -468,9 +676,9 @@
 # Don't use TARGET_CONFIGURE_OPTS here, qmake would be compiled for the target
 # instead of the host then. So set PKG_CONFIG* manually.
 	(cd $(QT_TARGET_DIR); \
-		PKG_CONFIG_SYSROOT_DIR="$(STAGING_DIR)" \
+		PKG_CONFIG_SYSROOT_DIR="$(BR2_PACKAGE_QT_INSTALL_DIR)/.." \
 		PKG_CONFIG="$(PKG_CONFIG_HOST_BINARY)" \
-		PKG_CONFIG_PATH="$(STAGING_DIR)/usr/lib/pkgconfig:$(PKG_CONFIG_PATH)" \
+		PKG_CONFIG_PATH="$(BR2_PACKAGE_QT_INSTALL_DIR)/lib/pkgconfig:$(PKG_CONFIG_PATH)" \
 		./configure \
 		$(if $(VERBOSE),-verbose,-silent) \
 		-force-pkg-config \
@@ -482,12 +690,7 @@
 		-no-nis \
 		-no-accessibility \
 		-no-separate-debug-info \
-		-prefix /usr \
-		-hostprefix $(STAGING_DIR)/usr \
-		-fast \
 		-no-rpath \
-		-nomake examples \
-		-nomake demos \
 	)
 	touch $@
 
@@ -495,91 +698,146 @@
 	$(MAKE) -C $(QT_TARGET_DIR)
 	touch $@
 
-$(STAGING_DIR)/usr/lib/libQtCore.la: $(QT_TARGET_DIR)/.compiled
-	$(MAKE) -C $(QT_TARGET_DIR) install
-
-qt-gui: $(STAGING_DIR)/usr/lib/libQtCore.la
-	mkdir -p $(TARGET_DIR)/usr/lib/fonts
+ifneq ($(BR2_PACKAGE_QT_USE_EXISTING_INSTALL),y)
+$(BR2_PACKAGE_QT_INSTALL_DIR)/lib/libQtCore.la: $(QT_TARGET_DIR)/.compiled
+	sudo $(MAKE) -C $(QT_TARGET_DIR) install
+else
+$(BR2_PACKAGE_QT_INSTALL_DIR)/lib/libQtCore.la:
+	if [ -d "$(BR2_PACKAGE_QT_EXIST_INSTALL_DIR)" ]; then \
+		sudo mkdir -p $(BR2_PACKAGE_QT_INSTALL_DIR); \
+		sudo chmod 777 $(BR2_PACKAGE_QT_X_INSTALL_DIR); \
+		sudo cp -Rf $(BR2_PACKAGE_QT_EXIST_INSTALL_DIR)/bin $(BR2_PACKAGE_QT_INSTALL_DIR); \
+		sudo cp -Rf $(BR2_PACKAGE_QT_EXIST_INSTALL_DIR)/include $(BR2_PACKAGE_QT_INSTALL_DIR); \
+		sudo cp -Rf $(BR2_PACKAGE_QT_EXIST_INSTALL_DIR)/lib $(BR2_PACKAGE_QT_INSTALL_DIR); \
+		sudo cp -Rf $(BR2_PACKAGE_QT_EXIST_INSTALL_DIR)/mkspecs $(BR2_PACKAGE_QT_INSTALL_DIR); \
+		sudo cp -Rf $(BR2_PACKAGE_QT_EXIST_INSTALL_DIR)/plugins $(BR2_PACKAGE_QT_INSTALL_DIR); \
+	else \
+		echo "$(BR2_PACKAGE_QT_EXIST_INSTALL_DIR): No such file or directory"; \
+		exit 2; \
+	fi
+endif
+
+qt-gui: $(BR2_PACKAGE_QT_INSTALL_DIR)/lib/libQtCore.la
+	$(call QT_INSTALL_PLUGINS,mousedrivers)
+	$(call QT_INSTALL_PLUGINS,gfxdrivers)
+	$(call QT_INSTALL_PLUGINS,kbddrivers)
+	mkdir -p $(TARGET_LIBS_DIR)/fonts
 ifneq ($(QT_FONTS),)
-	cp -dpf $(QT_FONTS) $(TARGET_DIR)/usr/lib/fonts
+	if `ls $(BR2_PACKAGE_QT_INSTALL_DIR)/lib/fonts/*.qpf>/dev/null 2>/dev/null`; then \
+		cp -dpf $(QT_FONTS) $(TARGET_LIBS_DIR)/fonts; \
+	fi
 endif
 ifneq ($(BR2_PACKAGE_QT_NOFREETYPE),y)
-	cp -dpf $(STAGING_DIR)/usr/lib/fonts/*.ttf $(TARGET_DIR)/usr/lib/fonts
+	if `ls $(BR2_PACKAGE_QT_INSTALL_DIR)/lib/fonts/*.ttf>/dev/null 2>/dev/null`; then \
+		cp -dpf $(BR2_PACKAGE_QT_INSTALL_DIR)/lib/fonts/*.ttf $(TARGET_LIBS_DIR)/fonts; \
+	fi
 endif
 	# Install image plugins if they are built
 	$(call QT_INSTALL_PLUGINS,imageformats)
 ifeq ($(BR2_PACKAGE_QT_SHARED),y)
-	cp -dpf $(STAGING_DIR)/usr/lib/libQtGui.so.* $(TARGET_DIR)/usr/lib/
+	if `ls $(BR2_PACKAGE_QT_INSTALL_DIR)/lib/libQtGui.so.*>/dev/null 2>/dev/null`; then \
+		cp -dpf $(BR2_PACKAGE_QT_INSTALL_DIR)/lib/libQtGui.so.* $(TARGET_LIBS_DIR); \
+	fi
 endif
 
-qt-sql: $(STAGING_DIR)/usr/lib/libQtCore.la
+qt-sql: $(BR2_PACKAGE_QT_INSTALL_DIR)/lib/libQtCore.la
 	$(call QT_INSTALL_PLUGINS,sqldrivers)
 ifeq ($(BR2_PACKAGE_QT_SHARED),y)
-	cp -dpf $(STAGING_DIR)/usr/lib/libQtSql.so.* $(TARGET_DIR)/usr/lib/
+	if `ls $(BR2_PACKAGE_QT_INSTALL_DIR)/lib/libQtSql.so.*>/dev/null 2>/dev/null`; then \
+		cp -dpf $(BR2_PACKAGE_QT_INSTALL_DIR)/lib/libQtSql.so.* $(TARGET_LIBS_DIR); \
+	fi
 endif
 
-qt-phonon: $(STAGING_DIR)/usr/lib/libQtCore.la
+qt-phonon: $(BR2_PACKAGE_QT_INSTALL_DIR)/lib/libQtCore.la
 	$(call QT_INSTALL_PLUGINS,phonon_backend)
 ifeq ($(BR2_PACKAGE_QT_SHARED),y)
-	cp -dpf $(STAGING_DIR)/usr/lib/libphonon.so.* $(TARGET_DIR)/usr/lib/
+	if `ls $(BR2_PACKAGE_QT_INSTALL_DIR)/lib/libphonon.so.*>/dev/null 2>/dev/null`; then \
+		cp -dpf $(BR2_PACKAGE_QT_INSTALL_DIR)/lib/libphonon.so.* $(TARGET_LIBS_DIR); \
+	fi
 endif
 
-qt-svg: $(STAGING_DIR)/usr/lib/libQtCore.la
+qt-svg: $(BR2_PACKAGE_QT_INSTALL_DIR)/lib/libQtCore.la
 	$(call QT_INSTALL_PLUGINS,iconengines)
 ifeq ($(BR2_PACKAGE_QT_SHARED),y)
-	cp -dpf $(STAGING_DIR)/usr/lib/libQtSvg.so.* $(TARGET_DIR)/usr/lib/
+	if `ls $(BR2_PACKAGE_QT_INSTALL_DIR)/lib/libQtSvg.so.*>/dev/null 2>/dev/null`; then \
+		cp -dpf $(BR2_PACKAGE_QT_INSTALL_DIR)/lib/libQtSvg.so.* $(TARGET_LIBS_DIR); \
+	fi
 endif
 
-qt-network: $(STAGING_DIR)/usr/lib/libQtCore.la
+qt-network: $(BR2_PACKAGE_QT_INSTALL_DIR)/lib/libQtCore.la
 ifeq ($(BR2_PACKAGE_QT_SHARED),y)
-	cp -dpf $(STAGING_DIR)/usr/lib/libQtNetwork.so.* $(TARGET_DIR)/usr/lib/
+	if `ls $(BR2_PACKAGE_QT_INSTALL_DIR)/lib/libQtNetwork.so.*>/dev/null 2>/dev/null`; then \
+		cp -dpf $(BR2_PACKAGE_QT_INSTALL_DIR)/lib/libQtNetwork.so.* $(TARGET_LIBS_DIR); \
+	fi
 endif
 
-qt-webkit: $(STAGING_DIR)/usr/lib/libQtCore.la
+qt-webkit: $(BR2_PACKAGE_QT_INSTALL_DIR)/lib/libQtCore.la
 ifeq ($(BR2_PACKAGE_QT_SHARED),y)
-	cp -dpf $(STAGING_DIR)/usr/lib/libQtWebKit.so.* $(TARGET_DIR)/usr/lib/
+	if `ls $(BR2_PACKAGE_QT_INSTALL_DIR)/lib/libQtWebkit.so.*>/dev/null 2>/dev/null`; then \
+		cp -dpf $(BR2_PACKAGE_QT_INSTALL_DIR)/lib/libQtWebKit.so.* $(TARGET_LIBS_DIR); \
+	fi
 endif
 
-qt-xml: $(STAGING_DIR)/usr/lib/libQtCore.la
+qt-xml: $(BR2_PACKAGE_QT_INSTALL_DIR)/lib/libQtCore.la
 ifeq ($(BR2_PACKAGE_QT_SHARED),y)
-	cp -dpf $(STAGING_DIR)/usr/lib/libQtXml.so.* $(TARGET_DIR)/usr/lib/
+	if `ls $(BR2_PACKAGE_QT_INSTALL_DIR)/lib/libQtXml.so.*>/dev/null 2>/dev/null`; then \
+		cp -dpf $(BR2_PACKAGE_QT_INSTALL_DIR)/lib/libQtXml.so.* $(TARGET_LIBS_DIR); \
+	fi
 endif
 
-qt-xmlpatterns: $(STAGING_DIR)/usr/lib/libQtCore.la
+qt-xmlpatterns: $(BR2_PACKAGE_QT_INSTALL_DIR)/lib/libQtCore.la
 ifeq ($(BR2_PACKAGE_QT_SHARED),y)
-	cp -dpf $(STAGING_DIR)/usr/lib/libQtXmlPatterns.so.* $(TARGET_DIR)/usr/lib/
+	if `ls $(BR2_PACKAGE_QT_INSTALL_DIR)/lib/libQtXmlPatterns.so.*>/dev/null 2>/dev/null`; then \
+		cp -dpf $(BR2_PACKAGE_QT_INSTALL_DIR)/lib/libQtXmlPatterns.so.* $(TARGET_LIBS_DIR); \
+	fi
 endif
 
-qt-script: $(STAGING_DIR)/usr/lib/libQtCore.la
+qt-script: $(BR2_PACKAGE_QT_INSTALL_DIR)/lib/libQtCore.la
 ifeq ($(BR2_PACKAGE_QT_SHARED),y)
-	cp -dpf $(STAGING_DIR)/usr/lib/libQtScript.so.* $(TARGET_DIR)/usr/lib/
+	if `ls $(BR2_PACKAGE_QT_INSTALL_DIR)/lib/libQtScript.so.*>/dev/null 2>/dev/null`; then \
+		cp -dpf $(BR2_PACKAGE_QT_INSTALL_DIR)/lib/libQtScript.so.* $(TARGET_LIBS_DIR); \
+	fi
 endif
 
-qt-scripttools: $(STAGING_DIR)/usr/lib/libQtCore.la
+qt-scripttools: $(BR2_PACKAGE_QT_INSTALL_DIR)/lib/libQtCore.la
 ifeq ($(BR2_PACKAGE_QT_SHARED),y)
-	cp -dpf $(STAGING_DIR)/usr/lib/libQtScriptTools.so.* $(TARGET_DIR)/usr/lib/
+	if `ls $(BR2_PACKAGE_QT_INSTALL_DIR)/lib/libQtScriptTools.so.*>/dev/null 2>/dev/null`; then \
+		cp -dpf $(BR2_PACKAGE_QT_INSTALL_DIR)/lib/libQtScriptTools.so.* $(TARGET_LIBS_DIR); \
+	fi
 endif
 
+qt-dbus: $(BR2_PACKAGE_QT_INSTALL_DIR)/lib/libQtCore.la
+ifeq ($(BR2_PACKAGE_QT_SHARED),y)
+	if `ls $(BR2_PACKAGE_QT_INSTALL_DIR)/lib/libQtDBus.so.*>/dev/null 2>/dev/null`; then \
+		cp -dpf $(BR2_PACKAGE_QT_INSTALL_DIR)/lib/libQtDBus.so.* $(TARGET_LIBS_DIR); \
+	fi
+endif
 
-$(TARGET_DIR)/usr/lib/libQtCore.so.4: $(STAGING_DIR)/usr/lib/libQtCore.la $(QT_LIBS)
+$(TARGET_LIBS_DIR)/libQtCore.so.4: $(BR2_PACKAGE_QT_INSTALL_DIR)/lib/libQtCore.la $(QT_LIBS)
 	# Strip all installed libs
 ifeq ($(BR2_PACKAGE_QT_SHARED),y)
-	cp -dpf $(STAGING_DIR)/usr/lib/libQtCore.so.* $(TARGET_DIR)/usr/lib/
-	-$(STRIPCMD) $(STRIP_STRIP_UNNEEDED) $(TARGET_DIR)/usr/lib/libQt*.so.*
+	cp -dpf $(BR2_PACKAGE_QT_INSTALL_DIR)/lib/libQtCore.so.* $(TARGET_LIBS_DIR)
+	-$(STRIPCMD) $(STRIP_STRIP_UNNEEDED) $(TARGET_LIBS_DIR)/libQt*.so.*
 endif
 
-qt: $(QT_DEP_LIBS) $(TARGET_DIR)/usr/lib/libQtCore.so.4
+ifneq ($(BR2_PACKAGE_QT_USE_EXISTING_INSTALL),y)
+qt: $(QT_DEP_LIBS) $(TARGET_LIBS_DIR)/libQtCore.so.4
+else
+qt: $(TARGET_LIBS_DIR)/libQtCore.so.4
+endif
 
 qt-clean:
 	-$(MAKE) -C $(QT_TARGET_DIR) clean
-	-rm -rf $(TARGET_DIR)/usr/lib/fonts
+	-rm -rf $(BR2_PACKAGE_QT_INSTALL_DIR)
+	-rm -rf $(TARGET_LIBS_DIR)/fonts
 ifeq ($(BR2_PACKAGE_QT_SHARED),y)
-	-rm $(TARGET_DIR)/usr/lib/libQt*.so.*
-	-rm $(TARGET_DIR)/usr/lib/libphonon.so.*
+	-rm $(TARGET_LIBS_DIR)/libQt*.so.*
+	-rm $(TARGET_LIBS_DIR)/libphonon.so.*
 endif
 
 qt-dirclean:
 	rm -rf $(QT_TARGET_DIR)
+	-rm -rf $(BR2_PACKAGE_QT_INSTALL_DIR)
 
 #############################################################
 #
Index: buildroot/package/qtopia4/Config.keyboard.in
===================================================================
--- buildroot.orig/package/qtopia4/Config.keyboard.in	2010-07-23 12:16:59.000000000 +0200
+++ buildroot/package/qtopia4/Config.keyboard.in	2010-07-28 15:30:42.000000000 +0200
@@ -1,7 +1,10 @@
 menu "Keyboard drivers"
 
+menu "Drivers"
+
 config BR2_PACKAGE_QT_KEYBOARD_TTY
 	bool "tty"
+	default y
 
 config BR2_PACKAGE_QT_KEYBOARD_USB
 	bool "usb"
@@ -19,3 +22,18 @@
 	bool "qvfb"
 
 endmenu
+
+menu "Plugins"
+
+config BR2_PACKAGE_QT_KEYBOARD_PLUGIN_LINUXIS
+	bool "linuxis"
+
+config BR2_PACKAGE_QT_KEYBOARD_PLUGIN_USB
+	bool "usb"
+
+config BR2_PACKAGE_QT_KEYBOARD_PLUGIN_VR41XX
+	bool "vr41xx"
+
+endmenu
+
+endmenu
Index: buildroot/package/qtopia4/Config.xcompile.in
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ buildroot/package/qtopia4/Config.xcompile.in	2010-07-28 15:30:42.000000000 +0200
@@ -0,0 +1,432 @@
+menuconfig BR2_PACKAGE_QT_CROSS_COMPILING
+	bool "Qt Cross compiling"
+	help
+	  Allows to cross-compile Qt Embedded.
+
+if BR2_PACKAGE_QT_CROSS_COMPILING
+
+config BR2_PACKAGE_QT_X_USE_EXISTING_INSTALL
+	bool "Use existing Qt install"
+	help
+	  If you don't want to entirely rebuild Qt and if you already have
+	  a Qt installation with the same configuration that you want for
+	  this project, you can use this existing installation.
+	  Only tools and libraries needed for developing applications will
+	  be copied.
+
+	  Say N if you don't want to use an existing Qt
+	  installation.
+
+if BR2_PACKAGE_QT_X_USE_EXISTING_INSTALL
+
+config BR2_PACKAGE_QT_X_EXIST_INSTALL_DIR
+	string "Existing Qt install dir"
+	help
+	  Enter the existing Qt installation directory here.
+	  Must be the Qt root path.
+endif
+
+config BR2_PACKAGE_QT_X_TARGET_INSTALL
+	bool "Install on target"
+	help
+	  Install the cross-compiled version of Qt on the target.
+	  Must be for an other platform than the first version.
+	  If unsure, say N.
+
+config BR2_PACKAGE_QT_X_DEBUG
+	bool "Compile with debug support"
+	help
+	  If unsure, say N.
+
+choice
+	prompt "Library type"
+	default BR2_PACKAGE_QT_X_SHARED
+	help
+	  Selects the library type: Shared or Static
+
+config BR2_PACKAGE_QT_X_SHARED
+	bool "Shared library"
+	help
+	  Create and use shared Qt libraries.
+	  If you have multiple programs that depend on Qt or intend to use
+	  plugins, say Y.
+
+config BR2_PACKAGE_QT_X_STATIC
+	bool "Static Library"
+	help
+	  Create and use static Qt libraries.
+	  If you don't have multiple programs on the target that depends on
+	  Qt, then this will save you quite some of storage space.
+	  If unsure, say Y.
+
+endchoice
+
+config BR2_PACKAGE_QT_X_FAST
+	bool "Fast Makefile generation"
+	default y
+	help
+	  Configure Qt quickly by generating Makefiles only for library
+	  and subdirectory targets.
+	  All other Makefiles are created as wrappers, which will
+	  in turn run qmake.
+
+config BR2_PACKAGE_QT_X_EXCEPTIONS
+	bool "Compilers  exceptions"
+	help
+	  Enable exceptions on compilers that support it.
+
+config BR2_PACKAGE_QT_X_OPTIMIZED_QMAKE
+	bool "Optimized qmake"
+	help
+	  Build optimized qmake.
+
+config BR2_PACKAGE_QT_X_LICENSE_APPROVED
+	bool "Approve free license"
+	help
+	  Select this if you approve one of the available free licenses for the
+	  Qt4 library.
+	  By doing this you will not be asked while the library is compiled.
+	  Please read and understand the license terms before approving this.
+
+	  LGPL v2.1: http://doc.trolltech.com/4.5/lgpl.html
+	  GPL  v3.0: http://doc.trolltech.com/4.5/gpl.html
+
+config BR2_PACKAGE_QT_X_QT3SUPPORT
+	bool "Compatibility with Qt3"
+	help
+	  Turns on support for older Qt3. This will create an additional
+	  library with proxy code and increase the space required on target.
+	  If unsure say n.
+
+config BR2_PACKAGE_QT_X_GUI_MODULE
+	bool "Gui Module"
+	select BR2_PACKAGE_QT_X_NETWORK
+	default y
+	help
+	  Turns on support for Gui applications. If your board doesn't have
+	  video output, or you don't require Qt GUI, say n.
+
+if BR2_PACKAGE_QT_X_GUI_MODULE
+menu "Pixel depths"
+comment "Deselecting each option leads to Qt's default (8,16,32)"
+
+config BR2_PACKAGE_QT_X_PIXEL_DEPTH_1
+	bool "1 bpp, black/white"
+
+config BR2_PACKAGE_QT_X_PIXEL_DEPTH_4
+	bool "4 bpp, grayscale"
+
+config BR2_PACKAGE_QT_X_PIXEL_DEPTH_8
+	bool "8 bpp, paletted"
+	default y
+
+config BR2_PACKAGE_QT_X_PIXEL_DEPTH_12
+	bool "12 bpp, rgb 4-4-4"
+
+config BR2_PACKAGE_QT_X_PIXEL_DEPTH_15
+	bool "15 bpp, rgb 5-5-5"
+
+config BR2_PACKAGE_QT_X_PIXEL_DEPTH_16
+	bool "16 bpp, rgb 5-6-5"
+	default y
+
+config BR2_PACKAGE_QT_X_PIXEL_DEPTH_18
+	bool "18 bpp, rgb 6-6-6"
+
+config BR2_PACKAGE_QT_X_PIXEL_DEPTH_24
+	bool "24 bpp, rgb 8-8-8"
+
+config BR2_PACKAGE_QT_X_PIXEL_DEPTH_32
+	bool "32 bpp, argb 8-8-8-8 and rgb 8-8-8"
+	default y
+
+endmenu
+
+menu "Fonts"
+
+config BR2_PACKAGE_QT_X_FONT_MICRO
+	bool "micro"
+	default y
+
+config BR2_PACKAGE_QT_X_FONT_FIXED
+	bool "fixed"
+	default y
+
+config BR2_PACKAGE_QT_X_FONT_HELVETICA
+	bool "helvetica"
+	default y
+
+config BR2_PACKAGE_QT_X_FONT_JAPANESE
+	bool "japanese"
+
+config BR2_PACKAGE_QT_X_FONT_UNIFONT
+	bool "unicode"
+
+endmenu
+
+choice
+	prompt "freetype2 support"
+	default BR2_PACKAGE_QT_X_NOFREETYPE
+	help
+	  Select freetype2 support.
+
+config BR2_PACKAGE_QT_X_NOFREETYPE
+	bool "no freetype2 support"
+	help
+	  Do not compile in Freetype2 support.
+
+config BR2_PACKAGE_QT_X_QTFREETYPE
+	bool "Qt freetype2"
+	help
+	  Use the libfreetype bundled with Qt.
+
+config BR2_PACKAGE_QT_X_SYSTEMFREETYPE
+	bool "System freetype2"
+	select BR2_PACKAGE_FREETYPE
+	help
+	  Use shared libfreetype from the target system.
+	  See http://www.freetype.org/
+endchoice
+
+config BR2_PACKAGE_QT_X_GIF
+	bool "Enable GIF support"
+	help
+	  This compiles and installs the plugin for GIF reading support.
+
+config BR2_PACKAGE_QT_X_LIBMNG
+	bool "Enable libmng support"
+	help
+	  This compiles and installs the plugin for MNG support.
+
+choice
+	prompt "JPEG support"
+	default BR2_PACKAGE_QT_X_NOJPEG
+	help
+	  Select libjpeg support.
+
+config BR2_PACKAGE_QT_X_NOJPEG
+	bool "No jpeg support"
+	help
+	  Disable JPEG support
+
+config BR2_PACKAGE_QT_X_SYSTEMJPEG
+	select BR2_PACKAGE_JPEG
+	bool "System libjpeg"
+	help
+	  Link against system libjpeg
+
+config BR2_PACKAGE_QT_X_QTJPEG
+	bool "Use Qt bundled libjpeg"
+	help
+	  Link against libjpeg proveded with Qt
+endchoice
+
+choice
+	prompt "PNG support"
+	default BR2_PACKAGE_QT_X_NOPNG
+	help
+	  Select which library to use if PNG support should be enabled.
+
+config BR2_PACKAGE_QT_X_NOPNG
+	bool "No PNG support"
+
+config BR2_PACKAGE_QT_X_SYSTEMPNG
+	bool "System libpng"
+	select BR2_PACKAGE_LIBPNG
+
+config BR2_PACKAGE_QT_X_QTPNG
+	bool "Use Qt bundled libpng"
+endchoice
+
+choice
+	prompt "TIFF support"
+	default BR2_PACKAGE_QT_X_NOTIFF
+	help
+	  Select which library to use if TIFF support should be enabled.
+
+config BR2_PACKAGE_QT_X_NOTIFF
+	bool "No TIFF support"
+
+config BR2_PACKAGE_QT_X_SYSTEMTIFF
+	bool "System libtiff"
+	select BR2_PACKAGE_TIFF
+
+config BR2_PACKAGE_QT_X_QTTIFF
+	bool "Use Qt bundled libtiff"
+endchoice
+
+config BR2_PACKAGE_QT_X_QWS_CURSOR
+	bool "QWS cursor"
+	help
+	  Display a QWS cursor on the target GUI.
+
+endif # BR2_PACKAGE_QT_X_GUI_MODULE
+
+choice
+	prompt "zlib support"
+	default BR2_PACKAGE_QT_X_QTZLIB
+	help
+	  Select zlib support.
+
+config BR2_PACKAGE_QT_X_QTZLIB
+	bool "Qt zlib"
+	help
+	  Use the zlib bundled with Qt.
+
+config BR2_PACKAGE_QT_X_SYSTEMZLIB
+	bool "System zlib"
+	select BR2_PACKAGE_ZLIB
+	help
+	  Use the shared zlib from the system.
+endchoice
+
+choice
+	prompt "The embedded platform we are making Qt for"
+	default BR2_PACKAGE_QT_X_X86
+	help
+	  The target platform.
+
+config BR2_PACKAGE_QT_X_ARM
+	bool "arm"
+config BR2_PACKAGE_QT_X_AVR32
+	bool "avr32"
+config BR2_PACKAGE_QT_X_X86
+	bool "x86"
+config BR2_PACKAGE_QT_X_X86_64
+	bool "x86_64"
+config BR2_PACKAGE_QT_X_MIPS
+	bool "mips"
+config BR2_PACKAGE_QT_X_POWERPC
+	bool "powerpc"
+config BR2_PACKAGE_QT_X_GENERIC
+	bool "generic"
+endchoice
+
+config BR2_PACKAGE_QT_X_INSTALL_DIR
+	string "Install dir"
+	default "$(STAGING_DIR)/usr/local/Trolltech/QtEmbedded-CC"
+	help
+	  Directory where all files relatives to Qt will be installed.
+
+	  The default is $(STAGING_DIR)/usr/local/Trolltech/QtEmbedded-CC
+
+menu "Misc"
+config BR2_PACKAGE_QT_X_NOMMX
+	bool "No MMX"
+	help
+	  Do not compile with use of MMX instructions.
+config BR2_PACKAGE_QT_X_NO3DNOW
+	bool "No 3DNOW"
+	help
+	  Do not compile with use of 3DNOW instructions.
+config BR2_PACKAGE_QT_X_NOSSE
+	bool "No SSE"
+	help
+	  Do not compile with use of SSE instructions.
+config BR2_PACKAGE_QT_X_NOSSE2
+	bool "No SSE2"
+	help
+	  Do not compile with use of SSE2 instructions.
+endmenu
+
+source "package/qtopia4/Config.xcompile.sql.in"
+if BR2_PACKAGE_QT_X_GUI_MODULE
+source "package/qtopia4/Config.xcompile.gfx.in"
+source "package/qtopia4/Config.xcompile.mouse.in"
+source "package/qtopia4/Config.xcompile.keyboard.in"
+
+config BR2_PACKAGE_QT_X_QVFB
+	bool "QVFB"
+	help
+	  Compile QVFB gfx, mouse and keyboard drivers
+endif
+
+config BR2_PACKAGE_QT_X_ICONV
+	bool "Iconv"
+	help
+	  Compile support for iconv.
+
+config BR2_PACKAGE_QT_X_DBUS
+	bool "DBus Module"
+	help
+	  Compile the QtDBus module and dynamically load libdbus.
+
+config BR2_PACKAGE_QT_X_GLIB
+	bool "Glib"
+	help
+	  Compile Glib support.
+
+config BR2_PACKAGE_QT_X_XML
+	bool "XML Module"
+	default y
+	help
+	  Build the XML module.
+
+config BR2_PACKAGE_QT_X_XMLPATTERNS
+	bool "XML Patterns Module"
+	depends on BR2_PACKAGE_QT_XML
+	help
+	  Build QtXmlPatterns module.
+	  If unsure, say n
+
+config BR2_PACKAGE_QT_X_SVG
+	bool "SVG Module"
+	help
+	  Build the SVG module.
+	  If unsure, say n
+
+config BR2_PACKAGE_QT_X_NETWORK
+	bool "Network Module"
+	default y
+	help
+	  Install the Network module.
+	  if unsure, say y
+
+config BR2_PACKAGE_QT_X_WEBKIT
+	bool "WebKit Module"
+	depends on BR2_PACKAGE_QT_NETWORK
+	help
+	  Build the WebKit module.
+	  If unsure, say n.
+
+config BR2_PACKAGE_QT_X_STL
+	bool "STL support"
+	help
+	  Compile STL support.
+	  If unsure, say n.
+
+config BR2_PACKAGE_QT_X_OPENSSL
+	bool "Enable OpenSSL support"
+	depends on BR2_PACKAGE_QT_X_NETWORK
+	select BR2_PACKAGE_OPENSSL
+	help
+	  Enable support for the OpenSSL encryption library. If you use
+	  QSslSocket say y here, otherwise, say no to save space on the
+	  target.
+	  If unsure, say n.
+
+config BR2_PACKAGE_QT_X_SCRIPT
+	bool "Script Module"
+	default y
+	help
+	  Build the Qt Script module.
+	  if unsure, say y.
+
+config BR2_PACKAGE_QT_X_SCRIPTTOOLS
+	bool "Script Tools Module"
+	depends on BR2_PACKAGE_QT_X_SCRIPT
+	help
+	  Build the Qt Script Tools module.
+	  if unsure, say n.
+
+config BR2_PACKAGE_QT_X_DEMOS
+	bool "Demos"
+	help
+	  Build the Qt Demos.
+
+config BR2_PACKAGE_QT_X_EXAMPLES
+	bool "Examples"
+	help
+	  Build the Qt Examples.
+
+endif # BR2_PACKAGE_QT_CROSS_COMPILING
Index: buildroot/package/qtopia4/Config.xcompile.sql.in
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ buildroot/package/qtopia4/Config.xcompile.sql.in	2010-07-28 15:30:42.000000000 +0200
@@ -0,0 +1,88 @@
+menuconfig BR2_PACKAGE_QT_X_SQL_MODULE
+	bool "SQL Module"
+	help
+	  Compile Qt SQL Module
+
+if BR2_PACKAGE_QT_X_SQL_MODULE
+
+menu "Drivers"
+
+config BR2_PACKAGE_QT_X_MYSQL
+	bool "MySQL Driver"
+	help
+	  Build MySQL driver
+	  If unsure, say n.
+
+config BR2_PACKAGE_QT_X_IBASE
+	bool "iBase Driver"
+	help
+	  Build iBase driver
+	  If unsure, say n.
+
+config BR2_PACKAGE_QT_X_ODBC
+	bool "ODBC Driver"
+	help
+	  Build ODBC driver
+	  If unsure, say n.
+
+config BR2_PACKAGE_QT_X_PSQL
+	bool "PostgreSQL Driver"
+	help
+	  Build PostgreSQL driver
+	  If unsure, say n.
+
+config BR2_PACKAGE_QT_X_SQLITE
+	bool "SQLite 3 Driver"
+	help
+	  Build SQLite 3 driver
+	  If unsure, say n.
+
+config BR2_PACKAGE_QT_X_SQLITE2
+	bool "SQLite 2 Driver"
+	help
+	  Build SQLite 2 driver
+	  If unsure, say n.
+
+endmenu
+
+menu "Plugins"
+
+config BR2_PACKAGE_QT_X_PLUGIN_MYSQL
+	bool "MySQL Plugin"
+	help
+	  Build MySQL plugin
+	  If unsure, say n.
+
+config BR2_PACKAGE_QT_X_PLUGIN_IBASE
+	bool "iBase Plugin"
+	help
+	  Build iBase plugin
+	  If unsure, say n.
+
+config BR2_PACKAGE_QT_X_PLUGIN_ODBC
+	bool "ODBC Plugin"
+	help
+	  Build ODBC plugin
+	  If unsure, say n.
+
+config BR2_PACKAGE_QT_X_PLUGIN_PSQL
+	bool "PostgreSQL Plugin"
+	help
+	  Build PostgreSQL plugin
+	  If unsure, say n.
+
+config BR2_PACKAGE_QT_X_PLUGIN_SQLITE
+	bool "SQLite 3 Plugin"
+	help
+	  Build SQLite 3 plugin
+	  If unsure, say n.
+
+config BR2_PACKAGE_QT_X_PLUGIN_SQLITE2
+	bool "SQLite 2 Plugin"
+	help
+	  Build SQLite 2 plugin
+	  If unsure, say n.
+
+endmenu
+
+endif
Index: buildroot/package/qtopia4/Config.xcompile.gfx.in
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ buildroot/package/qtopia4/Config.xcompile.gfx.in	2010-07-28 15:30:42.000000000 +0200
@@ -0,0 +1,39 @@
+menu "Graphics drivers"
+
+menu "Drivers"
+
+config BR2_PACKAGE_QT_X_GFX_LINUXFB
+	bool "Linux Framebuffer"
+	default y
+
+config BR2_PACKAGE_QT_X_GFX_TRANSFORMED
+	bool "Transformed"
+
+config BR2_PACKAGE_QT_X_GFX_QVFB
+	bool "Qt Virtual Framebuffer"
+
+config BR2_PACKAGE_QT_X_GFX_VNC
+	bool "VNC"
+
+config BR2_PACKAGE_QT_X_GFX_MULTISCREEN
+	bool "multiscreen"
+
+endmenu
+
+menu "Plugins"
+
+config BR2_PACKAGE_QT_X_GFX_PLUGIN_LINUXFB
+	bool "Linux Framebuffer"
+
+config BR2_PACKAGE_QT_X_GFX_PLUGIN_QVFB
+	bool "Qt Virtual Framebuffer"
+
+config BR2_PACKAGE_QT_X_GFX_PLUGIN_TRANSFORMED
+	bool "Transformed"
+
+config BR2_PACKAGE_QT_X_GFX_PLUGIN_VNC
+	bool "VNC"
+
+endmenu
+
+endmenu
Index: buildroot/package/qtopia4/Config.xcompile.keyboard.in
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ buildroot/package/qtopia4/Config.xcompile.keyboard.in	2010-07-28 15:30:42.000000000 +0200
@@ -0,0 +1,39 @@
+menu "Keyboard drivers"
+
+menu "Drivers"
+
+config BR2_PACKAGE_QT_X_KEYBOARD_TTY
+	bool "tty"
+	default y
+
+config BR2_PACKAGE_QT_X_KEYBOARD_USB
+	bool "usb"
+
+config BR2_PACKAGE_QT_X_KEYBOARD_SL5000
+	bool "sl5000"
+
+config BR2_PACKAGE_QT_X_KEYBOARD_YOPY
+	bool "yopy"
+
+config BR2_PACKAGE_QT_X_KEYBOARD_VR41XX
+	bool "vr41xx"
+
+config BR2_PACKAGE_QT_X_KEYBOARD_QVFB
+	bool "qvfb"
+
+endmenu
+
+menu "Plugins"
+
+config BR2_PACKAGE_QT_X_KEYBOARD_PLUGIN_LINUXIS
+	bool "linuxis"
+
+config BR2_PACKAGE_QT_X_KEYBOARD_PLUGIN_USB
+	bool "usb"
+
+config BR2_PACKAGE_QT_X_KEYBOARD_PLUGIN_VR41XX
+	bool "vr41xx"
+
+endmenu
+
+endmenu
Index: buildroot/package/qtopia4/Config.xcompile.mouse.in
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ buildroot/package/qtopia4/Config.xcompile.mouse.in	2010-07-28 15:30:42.000000000 +0200
@@ -0,0 +1,55 @@
+menu "Mouse drivers"
+
+menu "Drivers"
+
+config BR2_PACKAGE_QT_X_MOUSE_PC
+	bool "pc"
+	default y
+
+config BR2_PACKAGE_QT_X_MOUSE_BUS
+	bool "bus"
+
+config BR2_PACKAGE_QT_X_MOUSE_LINUXTP
+	bool "linuxtp"
+	default y
+
+config BR2_PACKAGE_QT_X_MOUSE_YOPY
+	bool "yopy"
+
+config BR2_PACKAGE_QT_X_MOUSE_VR41XX
+	bool "vr41xx"
+
+config BR2_PACKAGE_QT_X_MOUSE_TSLIB
+	bool "tslib"
+
+config BR2_PACKAGE_QT_X_MOUSE_QVFB
+	bool "qvfb"
+
+endmenu
+
+menu "Plugins"
+
+config BR2_PACKAGE_QT_X_MOUSE_PLUGIN_BUS
+	bool "bus"
+
+config BR2_PACKAGE_QT_X_MOUSE_PLUGIN_LINUXIS
+	bool "linuxis"
+
+config BR2_PACKAGE_QT_X_MOUSE_PLUGIN_LINUXTP
+	bool "linuxtp"
+
+config BR2_PACKAGE_QT_X_MOUSE_PLUGIN_PC
+	bool "pc"
+
+config BR2_PACKAGE_QT_X_MOUSE_PLUGIN_TSLIB
+	bool "tslib"
+
+config BR2_PACKAGE_QT_X_MOUSE_PLUGIN_VR41XX
+	bool "vr41xx"
+
+config BR2_PACKAGE_QT_X_MOUSE_PLUGIN_YOPY
+	bool "yopy"
+
+endmenu
+
+endmenu
Index: buildroot/package/qtopia4/qtopia4.xcompile.mk
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ buildroot/package/qtopia4/qtopia4.xcompile.mk	2010-07-28 15:30:42.000000000 +0200
@@ -0,0 +1,863 @@
+######################################################################
+#
+# Qt Embedded Cross Compiling for Linux 4.5
+# http://www.qtsoftware.com/
+#
+# This makefile was originally composed by Thomas Lundquist <thomasez@zelow.no>
+# Later heavily modified by buildroot developers
+#
+# BTW, this uses alot of FPU calls and it's pretty slow if you use
+# the kernels FPU emulation so it's better to choose soft float in the
+# buildroot config (and uClibc.config of course, if you have your own.)
+#
+######################################################################
+
+QT_X_VERSION:=4.5.3
+QT_X_SOURCE:=qt-embedded-linux-opensource-src-$(QT_X_VERSION).tar.gz
+QT_X_SITE:=http://get.qt.nokia.com/qt/source
+QT_X_CAT:=$(ZCAT)
+QT_X_TARGET_DIR:=$(BUILD_DIR)/qt-embedded-linux-opensource-src-$(QT_X_VERSION)-CC
+QT_X_TMP_BUILD_DIR:=$(BUILD_DIR)/tmp
+QT_X_TMP_TARGET_DIR:=$(BUILD_DIR)/tmp/qt-embedded-linux-opensource-src-$(QT_X_VERSION)
+
+QT_X_CONFIGURE:=#empty
+
+
+# x86x86fix
+# Workaround Qt Embedded bug when crosscompiling for x86 under x86 with linux
+# host. It's unclear if this would happen on other hosts.
+ifneq ($(findstring pc-linux,$(BR2_GNU_BUILD_SUFFIX)),)
+ifeq ($(BR2_PACKAGE_QT_X_X86), y)
+QT_X_CONFIGURE+= -xplatform linux-g++ -arch x86 -platform linux-g++
+endif
+ifeq ($(BR2_PACKAGE_QT_X_X86_64), y)
+QT_X_CONFIGURE+= -xplatform linux-g++-64 -arch x86_64 -platform linux-g++
+endif
+endif
+# End of workaround.
+
+# Embedded platform
+ifeq ($(BR2_PACKAGE_QT_X_ARM),y)
+BR2_PACKAGE_QT_X_EMB_PLATFORM:=arm
+endif
+ifeq ($(BR2_PACKAGE_QT_X_AVR32),y)
+BR2_PACKAGE_QT_X_EMB_PLATFORM:=avr32
+endif
+ifeq ($(BR2_PACKAGE_QT_X_X86),y)
+BR2_PACKAGE_QT_X_EMB_PLATFORM:=x86
+endif
+ifeq ($(BR2_PACKAGE_QT_X_X86_64),y)
+BR2_PACKAGE_QT_X_EMB_PLATFORM:=x86_64
+endif
+ifeq ($(BR2_PACKAGE_QT_X_MIPS),y)
+BR2_PACKAGE_QT_X_EMB_PLATFORM:=mips
+endif
+ifeq ($(BR2_PACKAGE_QT_X_POWERPC),y)
+BR2_PACKAGE_QT_X_EMB_PLATFORM:=powerpc
+endif
+ifeq ($(BR2_PACKAGE_QT_X_GENERIC),y)
+BR2_PACKAGE_QT_X_EMB_PLATFORM:=generic
+endif
+
+ifneq ($(BR2_PACKAGE_QT_X_USE_EXISTING_INSTALL),y)
+X_TARGET_LIBS_DIR:=$(TARGET_DIR)/usr/local/Trolltech/QtEmbedded-$(QT_X_VERSION)-$(BR2_PACKAGE_QT_X_EMB_PLATFORM)/lib
+X_TARGET_PLUGINS_DIR:=$(TARGET_DIR)/usr/local/Trolltech/QtEmbedded-$(QT_X_VERSION)-$(BR2_PACKAGE_QT_X_EMB_PLATFORM)/plugins
+else
+BR2_PACKAGE_QT_X_EXIST_INSTALL_DIR:=$(call qstrip, $(BR2_PACKAGE_QT_X_EXIST_INSTALL_DIR))
+QT_X_EXIST_INSTALL_DIR_NAME:=`echo $(BR2_PACKAGE_QT_X_EXIST_INSTALL_DIR) | sed 's/.*\///'`
+X_TARGET_LIBS_DIR:=$(TARGET_DIR)/usr/local/Trolltech/$(QT_X_EXIST_INSTALL_DIR_NAME)/lib
+X_TARGET_PLUGINS_DIR:=$(TARGET_DIR)/usr/local/Trolltech/$(QT_X_EXIST_INSTALL_DIR_NAME)/plugins
+endif
+
+BR2_PACKAGE_QT_X_INSTALL_DIR:=$(call qstrip, $(BR2_PACKAGE_QT_X_INSTALL_DIR))
+ifneq ($(findstring $(STAGING_DIR)/usr/local/QtEmbedded-CC,$(BR2_PACKAGE_QT_X_INSTALL_DIR)),)
+QT_X_CONFIGURE += -demosdir $(BR2_PACKAGE_QT_X_INSTALL_DIR)/QtDemos
+QT_X_CONFIGURE += -examplesdir $(BR2_PACKAGE_QT_X_INSTALL_DIR)/QtExamples
+QT_X_CONFIGURE += -hostprefix $(BR2_PACKAGE_QT_X_INSTALL_DIR)
+else
+QT_X_CONFIGURE += -prefix $(BR2_PACKAGE_QT_X_INSTALL_DIR)
+endif
+
+
+ifeq ($(BR2_PACKAGE_QT_X_LICENSE_APPROVED),y)
+QT_X_CONFIGURE += -opensource -confirm-license
+endif
+
+# If you want extra tweaking you can copy
+# $(QT_TARGET_DIR)/src/corelib/global/qconfig-myfile.h
+# to the qt packages directory (where this .mk file is) and
+# remove the comment.
+# QT_QCONFIG_COMMAND:=-qconfig myfile
+#
+# For the options you can set in this file, look at
+# $(QT_TARGET_DIR)/src/corelib/global/qfeatures.txt
+#
+QT_X_QCONFIG_FILE:=package/qtopia4/qconfig-myfile.xcompile.h
+QT_X_QCONFIG_FILE_LOCATION:=/src/corelib/global/
+
+ifeq ($(BR2_LARGEFILE),y)
+QT_X_CONFIGURE+= -largefile
+else
+QT_X_CONFIGURE+= -no-largefile
+endif
+
+ifeq ($(BR2_PACKAGE_QT_X_QT3SUPPORT),y)
+QT_X_CONFIGURE+= -qt3support
+else
+QT_X_CONFIGURE+= -no-qt3support
+endif
+
+# ensure glib is built first if enabled for Qt's glib support
+ifeq ($(BR2_PACKAGE_X_LIBGLIB2),y)
+QT_X_DEP_LIBS+=libglib2
+endif
+
+
+### Pixel depths
+QT_X_PIXEL_DEPTHS := # empty
+ifeq ($(BR2_PACKAGE_QT_X_PIXEL_DEPTH_1),y)
+QT_X_PIXEL_DEPTHS += 1
+endif
+ifeq ($(BR2_PACKAGE_QT_X_PIXEL_DEPTH_4),y)
+QT_X_PIXEL_DEPTHS += 4
+endif
+ifeq ($(BR2_PACKAGE_QT_X_PIXEL_DEPTH_8),y)
+QT_X_PIXEL_DEPTHS += 8
+endif
+ifeq ($(BR2_PACKAGE_QT_X_PIXEL_DEPTH_12),y)
+QT_X_PIXEL_DEPTHS += 12
+endif
+ifeq ($(BR2_PACKAGE_QT_X_PIXEL_DEPTH_15),y)
+QT_X_PIXEL_DEPTHS += 15
+endif
+ifeq ($(BR2_PACKAGE_QT_X_PIXEL_DEPTH_16),y)
+QT_X_PIXEL_DEPTHS += 16
+endif
+ifeq ($(BR2_PACKAGE_QT_X_PIXEL_DEPTH_18),y)
+QT_X_PIXEL_DEPTHS += 18
+endif
+ifeq ($(BR2_PACKAGE_QT_X_PIXEL_DEPTH_24),y)
+QT_X_PIXEL_DEPTHS += 24
+endif
+ifeq ($(BR2_PACKAGE_QT_X_PIXEL_DEPTH_32),y)
+QT_X_PIXEL_DEPTHS += 32
+endif
+ifneq ($(QT_X_PIXEL_DEPTHS),)
+QT_X_CONFIGURE += -depths $(subst $(space),$(comma),$(strip $(QT_X_PIXEL_DEPTHS)))
+endif
+
+### Display drivers
+ifeq ($(BR2_PACKAGE_QT_X_GFX_LINUXFB),y)
+QT_X_CONFIGURE += -qt-gfx-linuxfb
+endif
+ifeq ($(BR2_PACKAGE_QT_X_GFX_TRANSFORMED),y)
+QT_X_CONFIGURE += -qt-gfx-transformed
+endif
+ifeq ($(BR2_PACKAGE_QT_X_GFX_QVFB),y)
+QT_X_CONFIGURE += -qt-gfx-qvfb
+endif
+ifeq ($(BR2_PACKAGE_QT_X_GFX_VNC),y)
+QT_X_CONFIGURE += -qt-gfx-vnc
+endif
+ifeq ($(BR2_PACKAGE_QT_X_GFX_MULTISCREEN),y)
+QT_X_CONFIGURE += -qt-gfx-multiscreen
+else
+QT_X_CONFIGURE += -no-gfx-multiscreen
+endif
+
+### Display plugins
+ifeq ($(BR2_PACKAGE_QT_X_GFX_PLUGIN_LINUXFB),y)
+QT_X_CONFIGURE += -plugin-gfx-linuxfb
+else
+ifneq ($(BR2_PACKAGE_QT_X_GFX_LINUXFB),y)
+QT_X_CONFIGURE += -no-gfx-linuxfb
+endif
+endif
+ifeq ($(BR2_PACKAGE_QT_X_GFX_PLUGIN_QVFB),y)
+QT_X_CONFIGURE += -plugin-gfx-qvfb
+else
+ifneq ($(BR2_PACKAGE_QT_X_GFX_QVFB),y)
+QT_X_CONFIGURE += -no-gfx-qvfb
+endif
+endif
+ifeq ($(BR2_PACKAGE_QT_X_GFX_PLUGIN_TRANSFORMED),y)
+QT_X_CONFIGURE += -plugin-gfx-transformed
+else
+ifneq ($(BR2_PACKAGE_QT_X_GFX_TRANSFORMED),y)
+QT_X_CONFIGURE += -no-gfx-transformed
+endif
+endif
+ifeq ($(BR2_PACKAGE_QT_X_GFX_PLUGIN_VNC),y)
+QT_X_CONFIGURE += -plugin-gfx-vnc
+else
+ifneq ($(BR2_PACKAGE_QT_X_GFX_VNC),y)
+QT_X_CONFIGURE += -no-gfx-vnc
+endif
+endif
+
+### Mouse drivers
+ifeq ($(BR2_PACKAGE_QT_X_MOUSE_PC),y)
+QT_X_CONFIGURE += -qt-mouse-pc
+endif
+ifeq ($(BR2_PACKAGE_QT_X_MOUSE_BUS),y)
+QT_X_CONFIGURE += -qt-mouse-bus
+endif
+ifeq ($(BR2_PACKAGE_QT_X_MOUSE_LINUXTP),y)
+QT_X_CONFIGURE += -qt-mouse-linuxtp
+endif
+ifeq ($(BR2_PACKAGE_QT_X_MOUSE_YOPY),y)
+QT_X_CONFIGURE += -qt-mouse-yopy
+endif
+ifeq ($(BR2_PACKAGE_QT_X_MOUSE_VR41XX),y)
+QT_X_CONFIGURE += -qt-mouse-vr41xx
+endif
+ifeq ($(BR2_PACKAGE_QT_X_MOUSE_TSLIB),y)
+QT_X_CONFIGURE += -qt-mouse-tslib
+QT_X_DEP_LIBS+=tslib
+endif
+ifeq ($(BR2_PACKAGE_QT_X_MOUSE_QVFB),y)
+QT_X_CONFIGURE += -qt-mouse-qvfb
+else
+QT_X_CONFIGURE += -no-mouse-qvfb
+endif
+
+### Mouse plugins
+ifeq ($(BR2_PACKAGE_QT_X_MOUSE_PLUGIN_BUS),y)
+QT_X_CONFIGURE += -plugin-mouse-bus
+else
+ifneq ($(BR2_PACKAGE_QT_X_MOUSE_BUS),y)
+QT_X_CONFIGURE += -no-mouse-bus
+endif
+endif
+ifeq ($(BR2_PACKAGE_QT_X_MOUSE_PLUGIN_LINUXIS),y)
+QT_X_CONFIGURE += -plugin-mouse-linuxis
+endif
+ifeq ($(BR2_PACKAGE_QT_X_MOUSE_PLUGIN_LINUXTP),y)
+QT_X_CONFIGURE += -plugin-mouse-linuxtp
+else
+ifneq ($(BR2_PACKAGE_QT_X_MOUSE_LINUXTP),y)
+QT_X_CONFIGURE += -no-mouse-linuxtp
+endif
+endif
+ifeq ($(BR2_PACKAGE_QT_X_MOUSE_PLUGIN_PC),y)
+QT_X_CONFIGURE += -plugin-mouse-pc
+else
+ifneq ($(BR2_PACKAGE_QT_X_MOUSE_PC),y)
+QT_X_CONFIGURE += -no-mouse-pc
+endif
+endif
+ifeq ($(BR2_PACKAGE_QT_X_MOUSE_PLUGIN_TSLIB),y)
+QT_X_CONFIGURE += -plugin-mouse-tslib
+else
+ifneq ($(BR2_PACKAGE_QT_X_MOUSE_TSLIB),y)
+QT_X_CONFIGURE += -no-mouse-tslib
+endif
+endif
+ifeq ($(BR2_PACKAGE_QT_X_MOUSE_PLUGIN_VR41XX),y)
+QT_X_CONFIGURE += -plugin-mouse-vr41xx
+else
+ifneq ($(BR2_PACKAGE_QT_MOUSE_VR41XX),y)
+QT_X_CONFIGURE += -no-mouse-vr41xx
+endif
+endif
+ifeq ($(BR2_PACKAGE_QT_X_MOUSE_PLUGIN_YOPY),y)
+QT_X_CONFIGURE += -plugin-mouse-yopy
+else
+ifneq ($(BR2_PACKAGE_QT_X_MOUSE_YOPY),y)
+QT_X_CONFIGURE += -no-mouse-yopy
+endif
+endif
+
+### Keyboard drivers
+ifeq ($(BR2_PACKAGE_QT_X_KEYBOARD_TTY),y)
+QT_X_CONFIGURE += -qt-kbd-tty
+else
+QT_X_CONFIGURE += -no-kbd-tty
+endif
+ifeq ($(BR2_PACKAGE_QT_X_KEYBOARD_USB),y)
+QT_X_CONFIGURE += -qt-kbd-usb
+endif
+ifeq ($(BR2_PACKAGE_QT_X_KEYBOARD_SL5000),y)
+QT_X_CONFIGURE += -qt-kbd-sl5000
+else
+QT_X_CONFIGURE += -no-kbd-sl5000
+endif
+ifeq ($(BR2_PACKAGE_QT_X_KEYBOARD_YOPY),y)
+QT_X_CONFIGURE += -qt-kbd-yopy
+else
+QT_X_CONFIGURE += -no-kbd-yopy
+endif
+ifeq ($(BR2_PACKAGE_QT_X_KEYBOARD_VR41XX),y)
+QT_X_CONFIGURE += -qt-kbd-vr41xx
+endif
+ifeq ($(BR2_PACKAGE_QT_X_KEYBOARD_QVFB),y)
+QT_X_CONFIGURE += -qt-kbd-qvfb
+else
+QT_X_CONFIGURE += -no-kbd-qvfb
+endif
+
+### Keyboard plugins
+ifeq ($(BR2_PACKAGE_QT_X_KEYBOARD_PLUGIN_LINUXIS),y)
+QT_X_CONFIGURE += -plugin-kbd-linuxis
+endif
+ifeq ($(BR2_PACKAGE_QT_X_KEYBOARD_PLUGIN_USB),y)
+QT_X_CONFIGURE += -plugin-kbd-usb
+else
+ifneq ($(BR2_PACKAGE_QT_X_KEYBOARD_USB),y)
+QT_X_CONFIGURE += -no-kbd-usb
+endif
+endif
+ifeq ($(BR2_PACKAGE_QT_X_KEYBOARD_PLUGIN_VR41XX),y)
+QT_X_CONFIGURE += -plugin-kbd-vr41xx
+else
+ifneq ($(BR2_PACKAGE_QT_X_KEYBOARD_VR41XX),y)
+QT_X_CONFIGURE += -no-kbd-vr41xx
+endif
+endif
+
+ifeq ($(BR2_PACKAGE_QT_X_QVFB),y)
+QT_X_CONFIGURE+= -qvfb
+endif
+
+ifeq ($(BR2_PACKAGE_QT_X_DEBUG),y)
+QT_X_CONFIGURE+= -debug
+else
+QT_X_CONFIGURE+= -release
+endif
+
+ifeq ($(BR2_PACKAGE_QT_X_SHARED),y)
+QT_X_CONFIGURE+= -shared
+else
+QT_X_CONFIGURE+= -static
+endif
+
+ifeq ($(BR2_PACKAGE_QT_X_FAST),y)
+QT_X_CONFIGURE+= -fast
+else
+QT_X_CONFIGURE+= -no-fast
+endif
+
+ifeq ($(BR2_PACKAGE_QT_X_EXCEPTIONS),y)
+QT_X_CONFIGURE+= -exceptions
+else
+QT_X_CONFIGURE+= -no-exceptions
+endif
+
+ifeq ($(BR2_PACKAGE_QT_X_OPTIMIZED_QMAKE),y)
+QT_X_CONFIGURE+= -optimized-qmake
+else
+QT_X_CONFIGURE+= -no-optimized-qmake
+endif
+
+ifeq ($(BR2_ENDIAN),"LITTLE")
+QT_X_CONFIGURE+= -little-endian
+else
+QT_X_CONFIGURE+= -big-endian
+endif
+
+ifeq ($(BR2_PACKAGE_QT_X_GIF),y)
+QT_X_CONFIGURE+= -qt-gif
+else
+QT_X_CONFIGURE+= -no-gif
+endif
+
+ifeq ($(BR2_PACKAGE_QT_X_LIBMNG),y)
+QT_X_CONFIGURE+= -qt-libmng
+else
+QT_X_CONFIGURE+= -no-libmng
+endif
+
+ifeq ($(BR2_PACKAGE_QT_X_QTZLIB),y)
+QT_X_CONFIGURE+= -qt-zlib
+else
+ifeq ($(BR2_PACKAGE_QT_X_SYSTEMZLIB),y)
+QT_X_CONFIGURE+= -system-zlib
+QT_X_DEP_LIBS+=zlib
+endif
+endif
+
+ifeq ($(BR2_PACKAGE_QT_X_QTJPEG),y)
+QT_X_CONFIGURE+= -qt-libjpeg
+else
+ifeq ($(BR2_PACKAGE_QT_X_SYSTEMJPEG),y)
+QT_X_CONFIGURE+= -system-libjpeg
+QT_X_DEP_LIBS+=jpeg
+else
+QT_X_CONFIGURE+= -no-libjpeg
+endif
+endif
+
+ifeq ($(BR2_PACKAGE_QT_X_QTPNG),y)
+QT_X_CONFIGURE+= -qt-libpng
+else
+ifeq ($(BR2_PACKAGE_QT_X_SYSTEMPNG),y)
+QT_X_CONFIGURE+= -system-libpng
+QT_X_DEP_LIBS+=libpng
+else
+QT_X_CONFIGURE+= -no-libpng
+endif
+endif
+
+ifeq ($(BR2_PACKAGE_QT_X_QTTIFF),y)
+QT_X_CONFIGURE+= -qt-libtiff
+else
+ifeq ($(BR2_PACKAGE_QT_X_SYSTEMTIFF),y)
+QT_X_CONFIGURE+= -system-libtiff
+QT_X_DEP_LIBS+=tiff
+else
+QT_X_CONFIGURE+= -no-libtiff
+endif
+endif
+
+ifneq ($(BR2_PACKAGE_QT_X_QWS_CURSOR),y)
+QT_X_CONFIGURE+= -DQT_NO_QWS_CURSOR
+endif
+
+QT_X_FONTS = $(addprefix $(BR2_PACKAGE_QT_X_INSTALL_DIR)/lib/fonts/, $(addsuffix *.qpf, \
+	   $(if $(BR2_PACKAGE_QT_X_FONT_MICRO),micro) \
+	   $(if $(BR2_PACKAGE_QT_X_FONT_FIXED),fixed) \
+	   $(if $(BR2_PACKAGE_QT_X_FONT_HELVETICA),helvetica) \
+	   $(if $(BR2_PACKAGE_QT_X_FONT_JAPANESE),japanese) \
+	   $(if $(BR2_PACKAGE_QT_X_FONT_UNIFONT),unifont)))
+
+
+ifeq ($(BR2_PACKAGE_QT_X_QTFREETYPE),y)
+QT_X_CONFIGURE+= -qt-freetype
+else
+ifeq ($(BR2_PACKAGE_QT_X_SYSTEMFREETYPE),y)
+QT_X_CONFIGURE+= -system-freetype
+QT_X_CONFIGURE+= -I $(STAGING_DIR)/usr/include/freetype2/
+QT_X_DEP_LIBS+=freetype
+else
+QT_X_CONFIGURE+= -no-freetype
+endif
+endif
+
+
+ifeq ($(BR2_PACKAGE_QT_X_OPENSSL),y)
+QT_X_CONFIGURE+= -openssl
+QT_X_DEP_LIBS+=openssl
+else
+QT_X_CONFIGURE+= -no-openssl
+endif
+
+# Qt SQL Drivers
+ifeq ($(BR2_PACKAGE_QT_X_SQL_MODULE),y)
+ifeq ($(BR2_PACKAGE_QT_X_IBASE),y)
+QT_X_CONFIGURE+= -qt-sql-ibase
+endif
+ifeq ($(BR2_PACKAGE_QT_X_MYSQL),y)
+QT_X_CONFIGURE+= -qt-sql-mysql
+endif
+ifeq ($(BR2_PACKAGE_QT_X_ODBC),y)
+QT_X_CONFIGURE+= -qt-sql-odbc
+endif
+ifeq ($(BR2_PACKAGE_QT_X_PSQL),y)
+QT_X_CONFIGURE+= -qt-sql-psql
+endif
+ifeq ($(BR2_PACKAGE_QT_X_SQLITE),y)
+QT_X_CONFIGURE+= -qt-sql-sqlite
+endif
+ifeq ($(BR2_PACKAGE_QT_X_SQLITE2),y)
+QT_X_CONFIGURE+= -qt-sql-sqlite2
+endif
+
+# Qt SQL Plugins
+ifeq ($(BR2_PACKAGE_QT_X_PLUGIN_MYSQL),y)
+QT_X_CONFIGURE+= -plugin-sql-mysql
+endif
+ifeq ($(BR2_PACKAGE_QT_X_PLUGIN_IBASE),y)
+QT_X_CONFIGURE+= -plugin-sql-ibase
+endif
+ifeq ($(BR2_PACKAGE_QT_X_PLUGIN_ODBC),y)
+QT_X_CONFIGURE+= -plugin-sql-odbc
+endif
+ifeq ($(BR2_PACKAGE_QT_X_PLUGIN_PSQL),y)
+QT_X_CONFIGURE+= -plugin-sql-psql
+endif
+ifeq ($(BR2_PACKAGE_QT_X_PLUGIN_SQLITE),y)
+QT_X_CONFIGURE+= -plugin-sql-sqlite
+else
+ifneq ($(BR2_PACKAGE_QT_X_SQLITE),y)
+QT_X_CONFIGURE+= -no-sql-sqlite
+endif
+endif
+ifeq ($(BR2_PACKAGE_QT_X_PLUGIN_SQLITE2),y)
+QT_X_CONFIGURE+= -plugin-sql-sqlite2
+endif
+
+else
+# By default, no SQL driver is turned on by configure.
+# but it seams sqlite isn't disabled despite what says
+# configure --help
+QT_X_CONFIGURE+= -no-sql-sqlite
+endif
+
+#Misc
+ifeq ($(BR2_PACKAGE_QT_X_NOMMX),y)
+QT_X_CONFIGURE+= -no-mmx
+endif
+ifeq ($(BR2_PACKAGE_QT_X_NO3DNOW),y)
+QT_X_CONFIGURE+= -no-3dnow
+endif
+ifeq ($(BR2_PACKAGE_QT_X_NOSSE),y)
+QT_X_CONFIGURE+= -no-sse
+endif
+ifeq ($(BR2_PACKAGE_QT_X_NOSSE2),y)
+QT_X_CONFIGURE+= -no-sse2
+endif
+
+ifeq ($(BR2_PACKAGE_QT_X_ICONV),y)
+QT_X_CONFIGURE+= -iconv
+else
+QT_X_CONFIGURE+= -no-iconv
+endif
+
+ifeq ($(BR2_PACKAGE_QT_X_DBUS),y)
+QT_X_CONFIGURE+= -dbus
+QT_X_DEP_LIBS+=dbus
+else
+QT_X_CONFIGURE+= -no-dbus
+endif
+
+ifeq ($(BR2_PACKAGE_QT_X_XMLPATTERNS),y)
+QT_X_CONFIGURE+= -xmlpatterns -exceptions
+else
+QT_X_CONFIGURE+= -no-xmlpatterns
+endif
+
+ifeq ($(BR2_PACKAGE_QT_X_PHONON),y)
+QT_X_CONFIGURE+= -phonon
+QT_X_DEP_LIBS+=gstreamer gst-plugins-base
+else
+QT_X_CONFIGURE+= -no-phonon
+endif
+
+ifeq ($(BR2_PACKAGE_QT_X_SVG),y)
+QT_X_CONFIGURE+= -svg
+else
+QT_X_CONFIGURE+= -no-svg
+endif
+
+ifeq ($(BR2_PACKAGE_QT_X_WEBKIT),y)
+QT_X_CONFIGURE+= -webkit
+else
+QT_X_CONFIGURE+= -no-webkit
+endif
+
+ifeq ($(BR2_PACKAGE_QT_X_STL),y)
+QT_X_CONFIGURE+= -stl
+else
+QT_X_CONFIGURE+= -no-stl
+endif
+
+ifneq ($(BR2_PACKAGE_QT_X_DEMOS),y)
+QT_X_CONFIGURE+= -nomake demos
+endif
+
+ifneq ($(BR2_PACKAGE_QT_X_EXAMPLES),y)
+QT_X_CONFIGURE+= -nomake examples
+endif
+
+# ccache and precompiled headers don't play well together
+ifeq ($(BR2_CCACHE),y)
+QT_X_CONFIGURE += -no-pch
+endif
+
+ifneq ($(BR2_PACKAGE_QT_USE_EXISTING_INSTALL),y)
+# Figure out what libs to install in the target
+QT_X_LIBS=#empty
+ifeq ($(BR2_PACKAGE_QT_X_GUI_MODULE),y)
+QT_X_LIBS+= qt-x-gui
+endif
+ifeq ($(BR2_PACKAGE_QT_X_SQL_MODULE),y)
+QT_X_LIBS+= qt-x-sql
+endif
+ifeq ($(BR2_PACKAGE_QT_X_PHONON),y)
+QT_X_LIBS+= qt-x-phonon
+endif
+ifeq ($(BR2_PACKAGE_QT_X_SVG),y)
+QT_X_LIBS+= qt-x-svg
+endif
+ifeq ($(BR2_PACKAGE_QT_X_NETWORK),y)
+QT_X_LIBS+= qt-x-network
+endif
+ifeq ($(BR2_PACKAGE_QT_X_WEBKIT),y)
+QT_X_LIBS+= qt-x-webkit
+endif
+ifeq ($(BR2_PACKAGE_QT_X_XML),y)
+QT_X_LIBS+= qt-x-xml
+endif
+ifeq ($(BR2_PACKAGE_QT_X_XMLPATTERNS),y)
+QT_X_LIBS+= qt-x-xmlpatterns
+endif
+ifeq ($(BR2_PACKAGE_QT_X_SCRIPT),y)
+QT_X_LIBS+= qt-x-script
+endif
+ifeq ($(BR2_PACKAGE_QT_X_SCRIPTTOOLS),y)
+QT_X_LIBS+= qt-x-scripttools
+endif
+ifeq ($(BR2_PACKAGE_QT_X_DBUS),y)
+QT_X_LIBS+= qt-x-dbus
+endif
+else
+QT_X_LIBS+=qt-x-gui qt-x-sql qt-x-phonon qt-x-svg qt-x-network qt-x-webkit qt-x-xml qt-x-xmlpatterns qt-x-script qt-x-scripttools qt-x-dbus
+endif
+
+
+QT_X_QMAKE_CONF:=$(QT_X_TARGET_DIR)/mkspecs/qws/linux-$(BR2_PACKAGE_QT_X_EMB_PLATFORM)-g++/qmake.conf
+
+# Variable for other Qt applications to use
+QT_X_QMAKE:=$(BR2_PACKAGE_QT_X_INSTALL_DIR)/bin/qmake -spec qws/linux-$(BR2_PACKAGE_QT_X_EMB_PLATFORM)-g++
+
+################################################################################
+# QT_X_QMAKE_SET -- helper macro to set QMAKE_<variable> = <value> in
+# QT_X_QMAKE_CONF. Will remove existing variable declaration if available.
+#
+# Argument 1 is the variable name (without QMAKE_)
+# Argument 2 is the value to set variable to
+#
+# E.G. use like this:
+# $(call QT_X_QMAKE_SET,variable,value)
+################################################################################
+define QT_X_QMAKE_SET
+	$(SED) '/QMAKE_$(1)/d' $(QT_X_QMAKE_CONF)
+	$(SED) '/include.*qws.conf/aQMAKE_$(1) = $(2)' $(QT_X_QMAKE_CONF)
+endef
+
+################################################################################
+# QT_X_INSTALL_PLUGINS -- helper macro to install Qt plugins to target and
+# strip them
+#
+# Argument 1 is the plugin folder
+#
+# E.G. use like this to install plugins/sqldrivers:
+# $(call QT_X_INSTALL_PLUGINS,sqldrivers)
+# ################################################################################
+define QT_X_INSTALL_PLUGINS
+        if [ -d $(BR2_PACKAGE_QT_X_INSTALL_DIR)/plugins/$(1) ]; then \
+                mkdir -p $(X_TARGET_PLUGINS_DIR); \
+                cp -dpfr $(BR2_PACKAGE_QT_X_INSTALL_DIR)/plugins/$(1) $(X_TARGET_PLUGINS_DIR)/; \
+                $(STRIPCMD) $(STRIP_STRIP_UNNEEDED) $(X_TARGET_PLUGINS_DIR)/$(1)/*; \
+        fi
+endef
+
+$(DL_DIR)/$(QT_X_SOURCE):
+	$(call DOWNLOAD,$(QT_X_SITE),$(QT_X_SOURCE))
+
+qt-x-source: $(DL_DIR)/$(QT_X_SOURCE)
+
+
+$(QT_X_TARGET_DIR)/.unpacked: $(DL_DIR)/$(QT_X_SOURCE)
+	mkdir -p $(QT_X_TMP_BUILD_DIR)
+	$(QT_CAT) $(DL_DIR)/$(QT_X_SOURCE) | tar -C $(QT_X_TMP_BUILD_DIR) $(TAR_OPTIONS) -
+	toolchain/patch-kernel.sh $(QT_X_TMP_TARGET_DIR) package/qtopia4/ \
+		qt-CC-$(QT_X_VERSION)-\*.patch \
+		qt-CC-$(QT_X_VERSION)-\*.patch.$(ARCH)
+	mv $(QT_X_TMP_TARGET_DIR) $(QT_X_TARGET_DIR)
+	rm -Rf $(QT_X_TMP_BUILD_DIR)
+	touch $@
+
+$(QT_X_TARGET_DIR)/.configured: $(QT_X_TARGET_DIR)/.unpacked
+	-[ -f $(QT_X_TARGET_DIR)/Makefile ] && $(MAKE) -C $(QT_X_TARGET_DIR) confclean
+	-[ -f $(QT_X_TARGET_DIR)/Makefile ] && $(MAKE) -C $(QT_X_TARGET_DIR) distclean
+ifneq ($(BR2_INET_IPV6),y)
+	$(SED) 's/^CFG_IPV6=auto/CFG_IPV6=no/' $(QT_X_TARGET_DIR)/configure
+	$(SED) 's/^CFG_IPV6IFNAME=auto/CFG_IPV6IFNAME=no/' $(QT_X_TARGET_DIR)/configure
+endif
+	# Fix compiler path
+	$(call QT_X_QMAKE_SET,CC,$(TARGET_CC))
+	$(call QT_X_QMAKE_SET,CXX,$(TARGET_CXX))
+	$(call QT_X_QMAKE_SET,LINK,$(TARGET_CXX))
+	$(call QT_X_QMAKE_SET,LINK_SHLIB,$(TARGET_CXX))
+	$(call QT_X_QMAKE_SET,AR,$(TARGET_AR) cqs)
+	$(call QT_X_QMAKE_SET,OBJCOPY,$(TARGET_OBJCOPY))
+	$(call QT_X_QMAKE_SET,RANLIB,$(TARGET_RANLIB))
+	$(call QT_X_QMAKE_SET,STRIP,$(TARGET_STRIP))
+	$(call QT_X_QMAKE_SET,CFLAGS,$(TARGET_CFLAGS))
+	$(call QT_X_QMAKE_SET,CXXFLAGS,$(TARGET_CXXFLAGS))
+	$(call QT_X_QMAKE_SET,LFLAGS,$(TARGET_LDFLAGS))
+	-[ -f $(QT_X_QCONFIG_FILE) ] && cp $(QT_X_QCONFIG_FILE) \
+		$(QT_X_TARGET_DIR)/$(QT_X_QCONFIG_FILE_LOCATION)
+# Don't use TARGET_CONFIGURE_OPTS here, qmake would be compiled for the target
+# instead of the host then. So set PKG_CONFIG* manually.
+	(cd $(QT_X_TARGET_DIR); \
+		PKG_CONFIG_SYSROOT_DIR="$(BR2_PACKAGE_QT_X_INSTALL_DIR)/.." \
+		PKG_CONFIG="$(PKG_CONFIG_HOST_BINARY)" \
+		PKG_CONFIG_PATH="$(BR2_PACKAGE_QT_X_INSTALL_DIR)/lib/pkgconfig:$(PKG_CONFIG_PATH)" \
+		./configure \
+		$(if $(VERBOSE),-verbose,-silent) \
+		-force-pkg-config \
+		-embedded $(BR2_PACKAGE_QT_X_EMB_PLATFORM) \
+		$(QT_QCONFIG_COMMAND) \
+		$(QT_X_CONFIGURE) \
+		-no-xinerama \
+		-no-cups \
+		-no-nis \
+		-no-accessibility \
+		-no-separate-debug-info \
+		-no-rpath \
+	)
+	touch $@
+
+$(QT_X_TARGET_DIR)/.compiled: $(QT_X_TARGET_DIR)/.configured
+	$(MAKE) -C $(QT_X_TARGET_DIR)
+	touch $@
+
+ifneq ($(BR2_PACKAGE_QT_X_USE_EXISTING_INSTALL),y)
+$(BR2_PACKAGE_QT_X_INSTALL_DIR)/lib/libQtCore.la: $(QT_X_TARGET_DIR)/.compiled
+	sudo $(MAKE) -C $(QT_X_TARGET_DIR) install
+else
+$(BR2_PACKAGE_QT_X_INSTALL_DIR)/lib/libQtCore.la:
+	if [ -d "$(BR2_PACKAGE_QT_X_EXIST_INSTALL_DIR)" ]; then \
+		sudo mkdir -p $(BR2_PACKAGE_QT_X_INSTALL_DIR); \
+		sudo chmod 777 $(BR2_PACKAGE_QT_X_INSTALL_DIR); \
+		sudo cp -Rf $(BR2_PACKAGE_QT_X_EXIST_INSTALL_DIR)/bin $(BR2_PACKAGE_QT_X_INSTALL_DIR); \
+		sudo cp -Rf $(BR2_PACKAGE_QT_X_EXIST_INSTALL_DIR)/include $(BR2_PACKAGE_QT_X_INSTALL_DIR); \
+		sudo cp -Rf $(BR2_PACKAGE_QT_X_EXIST_INSTALL_DIR)/lib $(BR2_PACKAGE_QT_X_INSTALL_DIR); \
+		sudo cp -Rf $(BR2_PACKAGE_QT_X_EXIST_INSTALL_DIR)/mkspecs $(BR2_PACKAGE_QT_X_INSTALL_DIR); \
+		sudo cp -Rf $(BR2_PACKAGE_QT_X_EXIST_INSTALL_DIR)/plugins $(BR2_PACKAGE_QT_X_INSTALL_DIR); \
+	else \
+		echo "$(BR2_PACKAGE_QT_X_EXIST_INSTALL_DIR): No such file or directory"; \
+		exit 2; \
+	fi
+endif
+
+qt-x-gui: $(BR2_PACKAGE_QT_X_INSTALL_DIR)/lib/libQtCore.la
+	$(call QT_X_INSTALL_PLUGINS,mousedrivers)
+	$(call QT_X_INSTALL_PLUGINS,gfxdrivers)
+	$(call QT_X_INSTALL_PLUGINS,kbddrivers)
+	mkdir -p $(X_TARGET_LIBS_DIR)/fonts
+ifneq ($(QT_X_FONTS),)
+	if `ls $(BR2_PACKAGE_QT_X_INSTALL_DIR)/lib/fonts/*.qpf>/dev/null 2>/dev/null`; then \
+		cp -dpf $(QT_X_FONTS) $(X_TARGET_LIBS_DIR)/fonts; \
+	fi
+endif
+ifneq ($(BR2_PACKAGE_QT_X_NOFREETYPE),y)
+	if `ls $(BR2_PACKAGE_QT_X_INSTALL_DIR)/lib/fonts/*.ttf>/dev/null 2>/dev/null`; then \
+		cp -dpf $(BR2_PACKAGE_QT_X_INSTALL_DIR)/lib/fonts/*.ttf $(X_TARGET_LIBS_DIR)/fonts; \
+	fi
+endif
+	# Install image plugins if they are built
+	$(call QT_X_INSTALL_PLUGINS,imageformats)
+ifeq ($(BR2_PACKAGE_QT_X_SHARED),y)
+	if `ls $(BR2_PACKAGE_QT_X_INSTALL_DIR)/lib/libQtGui.so.*>/dev/null 2>/dev/null`; then \
+		cp -dpf $(BR2_PACKAGE_QT_X_INSTALL_DIR)/lib/libQtGui.so.* $(X_TARGET_LIBS_DIR); \
+	fi
+endif
+
+qt-x-sql: $(BR2_PACKAGE_QT_X_INSTALL_DIR)/lib/libQtCore.la
+	$(call QT_X_INSTALL_PLUGINS,sqldrivers)
+ifeq ($(BR2_PACKAGE_QT_X_SHARED),y)
+	if `ls $(BR2_PACKAGE_QT_X_INSTALL_DIR)/lib/libQtSql.so.*>/dev/null 2>/dev/null`; then \
+		cp -dpf $(BR2_PACKAGE_QT_X_INSTALL_DIR)/lib/libQtSql.so.* $(X_TARGET_LIBS_DIR); \
+	fi
+endif
+
+qt-x-phonon: $(BR2_PACKAGE_QT_X_INSTALL_DIR)/lib/libQtCore.la
+	$(call QT_X_INSTALL_PLUGINS,phonon_backend)
+ifeq ($(BR2_PACKAGE_QT_X_SHARED),y)
+	if `ls $(BR2_PACKAGE_QT_X_INSTALL_DIR)/lib/libphonon.so.*>/dev/null 2>/dev/null`; then \
+		cp -dpf $(BR2_PACKAGE_QT_X_INSTALL_DIR)/lib/libphonon.so.* $(X_TARGET_LIBS_DIR); \
+	fi
+endif
+
+qt-x-svg: $(BR2_PACKAGE_QT_X_INSTALL_DIR)/lib/libQtCore.la
+	$(call QT_X_INSTALL_PLUGINS,iconengines)
+ifeq ($(BR2_PACKAGE_QT_X_SHARED),y)
+	if `ls $(BR2_PACKAGE_QT_X_INSTALL_DIR)/lib/libQtSvg.so.*>/dev/null 2>/dev/null`; then \
+		cp -dpf $(BR2_PACKAGE_QT_X_INSTALL_DIR)/lib/libQtSvg.so.* $(X_TARGET_LIBS_DIR); \
+	fi
+endif
+
+qt-x-network: $(BR2_PACKAGE_QT_X_INSTALL_DIR)/lib/libQtCore.la
+ifeq ($(BR2_PACKAGE_QT_X_SHARED),y)
+	if `ls $(BR2_PACKAGE_QT_X_INSTALL_DIR)/lib/libQtNetwork.so.*>/dev/null 2>/dev/null`; then \
+		cp -dpf $(BR2_PACKAGE_QT_X_INSTALL_DIR)/lib/libQtNetwork.so.* $(X_TARGET_LIBS_DIR); \
+	fi
+endif
+
+qt-x-webkit: $(BR2_PACKAGE_QT_X_INSTALL_DIR)/lib/libQtCore.la
+ifeq ($(BR2_PACKAGE_QT_X_SHARED),y)
+	if `ls $(BR2_PACKAGE_QT_X_INSTALL_DIR)/lib/libQtWebkit.so.*>/dev/null 2>/dev/null`; then \
+		cp -dpf $(BR2_PACKAGE_QT_X_INSTALL_DIR)/lib/libQtWebKit.so.* $(X_TARGET_LIBS_DIR); \
+	fi
+endif
+
+qt-x-xml: $(BR2_PACKAGE_QT_X_INSTALL_DIR)/lib/libQtCore.la
+ifeq ($(BR2_PACKAGE_QT_X_SHARED),y)
+	if `ls $(BR2_PACKAGE_QT_X_INSTALL_DIR)/lib/libQtXml.so.*>/dev/null 2>/dev/null`; then \
+		cp -dpf $(BR2_PACKAGE_QT_X_INSTALL_DIR)/lib/libQtXml.so.* $(X_TARGET_LIBS_DIR); \
+	fi
+endif
+
+qt-x-xmlpatterns: $(BR2_PACKAGE_QT_X_INSTALL_DIR)/lib/libQtCore.la
+ifeq ($(BR2_PACKAGE_QT_X_SHARED),y)
+	if `ls $(BR2_PACKAGE_QT_X_INSTALL_DIR)/lib/libQtXmlPatterns.so.*>/dev/null 2>/dev/null`; then \
+		cp -dpf $(BR2_PACKAGE_QT_X_INSTALL_DIR)/lib/libQtXmlPatterns.so.* $(X_TARGET_LIBS_DIR); \
+	fi
+endif
+
+qt-x-script: $(BR2_PACKAGE_QT_X_INSTALL_DIR)/lib/libQtCore.la
+ifeq ($(BR2_PACKAGE_QT_X_SHARED),y)
+	if `ls $(BR2_PACKAGE_QT_X_INSTALL_DIR)/lib/libQtScript.so.*>/dev/null 2>/dev/null`; then \
+		cp -dpf $(BR2_PACKAGE_QT_X_INSTALL_DIR)/lib/libQtScript.so.* $(X_TARGET_LIBS_DIR); \
+	fi
+endif
+
+qt-x-scripttools: $(BR2_PACKAGE_QT_X_INSTALL_DIR)/lib/libQtCore.la
+ifeq ($(BR2_PACKAGE_QT_X_SHARED),y)
+	if `ls $(BR2_PACKAGE_QT_X_INSTALL_DIR)/lib/libQtScriptTools.so.*>/dev/null 2>/dev/null`; then \
+		cp -dpf $(BR2_PACKAGE_QT_X_INSTALL_DIR)/lib/libQtScriptTools.so.* $(X_TARGET_LIBS_DIR); \
+	fi
+endif
+
+qt-x-dbus: $(BR2_PACKAGE_QT_X_INSTALL_DIR)/lib/libQtCore.la
+ifeq ($(BR2_PACKAGE_QT_X_SHARED),y)
+	if `ls $(BR2_PACKAGE_QT_X_INSTALL_DIR)/lib/libQtDBus.so.*>/dev/null 2>/dev/null`; then \
+		cp -dpf $(BR2_PACKAGE_QT_X_INSTALL_DIR)/lib/libQtDBus.so.* $(X_TARGET_LIBS_DIR); \
+	fi
+endif
+
+$(X_TARGET_LIBS_DIR)/libQtCore.so.4: $(BR2_PACKAGE_QT_X_INSTALL_DIR)/lib/libQtCore.la $(QT_X_LIBS)
+	# Strip all installed libs
+ifeq ($(BR2_PACKAGE_QT_X_SHARED),y)
+	cp -dpf $(BR2_PACKAGE_QT_X_INSTALL_DIR)/lib/libQtCore.so.* $(X_TARGET_LIBS_DIR)
+	-$(STRIPCMD) $(STRIP_STRIP_UNNEEDED) $(X_TARGET_LIBS_DIR)/libQt*.so.*
+endif
+
+ifeq ($(BR2_PACKAGE_QT_X_TARGET_INSTALL),y)
+ifneq ($(BR2_PACKAGE_QT_X_USE_EXISTING_INSTALL),y)
+qt-x: $(QT_X_DEP_LIBS) $(X_TARGET_LIBS_DIR)/libQtCore.so.4
+else
+qt-x: $(X_TARGET_LIBS_DIR)/libQtCore.so.4
+endif
+else
+ifneq ($(BR2_PACKAGE_QT_X_USE_EXISTING_INSTALL),y)
+qt-x: $(QT_X_DEP_LIBS) $(BR2_PACKAGE_QT_X_INSTALL_DIR)/lib/libQtCore.la
+else
+qt-x: $(BR2_PACKAGE_QT_X_INSTALL_DIR)/lib/libQtCore.la
+endif
+endif
+
+qt-x-clean:
+	-$(MAKE) -C $(QT_X_TARGET_DIR) clean
+	-rm -rf $(BR2_PACKAGE_QT_X_INSTALL_DIR)
+	-rm -rf $(X_TARGET_LIBS_DIR)/fonts
+ifeq ($(BR2_PACKAGE_QT_X_SHARED),y)
+	-rm $(X_TARGET_LIBS_DIR)/libQt*.so.*
+	-rm $(X_TARGET_LIBS_DIR)/libphonon.so.*
+endif
+
+qt-x-dirclean:
+	rm -rf $(QT_X_TARGET_DIR)
+	-rm -rf $(BR2_PACKAGE_QT_X_INSTALL_DIR)
+
+#############################################################
+#
+# Toplevel Makefile options
+#
+#############################################################
+ifeq ($(BR2_PACKAGE_QT_CROSS_COMPILING),y)
+TARGETS+=qt-x
+endif
Index: buildroot/package/qtopia4/qt-CC-4.5.3-fix-qt-zlib-build.patch
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ buildroot/package/qtopia4/qt-CC-4.5.3-fix-qt-zlib-build.patch	2010-07-28 15:30:42.000000000 +0200
@@ -0,0 +1,20 @@
+When QT is compiled in qt-zlib mode, compilation of
+src/gui/painting/qprintengine_pdf.cpp fails because zlib.h is not
+found. The following patch adds the internal QT zlib directory to the
+include path to fix this issue.
+
+---
+ src/gui/painting/painting.pri |    3 +++
+ 1 file changed, 3 insertions(+)
+
+Index: qt-embedded-linux-opensource-src-4.5.3-CC/src/gui/painting/painting.pri
+===================================================================
+--- qt-embedded-linux-opensource-src-4.5.3-CC.orig/src/gui/painting/painting.pri
++++ qt-embedded-linux-opensource-src-4.5.3-CC/src/gui/painting/painting.pri
+@@ -367,3 +367,6 @@
+         SOURCES += painting/qwindowsurface_d3d.cpp
+ }
+
++contains(QT_CONFIG, zlib) {
++   INCLUDEPATH += ../3rdparty/zlib
++}
