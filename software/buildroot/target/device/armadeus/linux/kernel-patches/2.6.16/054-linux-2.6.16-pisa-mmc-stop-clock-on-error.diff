From linux@arm.linux.org.uk Tue May  2 21:15:03 2006
Return-Path: <linux+ppisa4lists=pikron.com@arm.linux.org.uk>
Delivered-To: ppisa4filter@pikron.com
Received: (qmail 13248 invoked by uid 1039); 2 May 2006 19:15:19 -0000
Delivered-To: pikron.com-ppisa4lists@pikron.com
Received: (qmail 13246 invoked by uid 1340); 2 May 2006 19:15:19 -0000
Received: from 212.18.232.186 by mail (envelope-from <linux+ppisa4lists=pikron.com@arm.linux.org.uk>, uid 1039) with qmail-scanner-1.25-st-qms 
 (ClamAV: 0.88/1434. SpamAssassin: 3.0.2. PerlScan: 1.25-st-qms.  
 Clear:RC:0(212.18.232.186):SA:0(-2.6/5.0):. 
 Processed in 0.682877 secs); 02 May 2006 19:15:19 -0000
X-Spam-Status: No, hits=-2.6 required=5.0
Received: from unknown (HELO caramon.arm.linux.org.uk) (212.18.232.186)
  by mail.web4u.cz with (EDH-RSA-DES-CBC3-SHA encrypted) SMTP; 2 May 2006 19:15:18 -0000
Received: from flint.arm.linux.org.uk ([2002:d412:e8ba:1:201:2ff:fe14:8fad])
	by caramon.arm.linux.org.uk with esmtpsa (TLSv1:DES-CBC3-SHA:168)
	(Exim 4.52)
	id 1Fb0KD-0002jg-Dd
	for ppisa4lists@pikron.com; Tue, 02 May 2006 20:14:22 +0100
Received: from linux by flint.arm.linux.org.uk with local (Exim 4.52)
	id 1Fb0Ku-0003dR-8u; Tue, 02 May 2006 20:15:04 +0100
Date: Tue, 2 May 2006 20:15:03 +0100
From: Russell King - ARM Linux <linux@arm.linux.org.uk>
To: linux-arm-kernel@lists.arm.linux.org.uk
Cc: Pavel Pisa <ppisa4lists@pikron.com>
Subject: Re: [2/2] PXA and i.MX: don't avoid sending stop command on error
Message-ID: <20060502191503.GH4236@flint.arm.linux.org.uk>
Mail-Followup-To: linux-arm-kernel@lists.arm.linux.org.uk,
	Pavel Pisa <ppisa4lists@pikron.com>
References: <20060502191143.GG4236@flint.arm.linux.org.uk>
Mime-Version: 1.0
Content-Type: text/plain;
  charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20060502191143.GG4236@flint.arm.linux.org.uk>
User-Agent: Mutt/1.4.1i
Sender: Russell King - ARM Linux <linux@arm.linux.org.uk>
Status: R
X-Status: NC
X-KMail-EncryptionState:  
X-KMail-SignatureState:  
X-KMail-MDN-Sent:  

Always send a stop command at the end of a data transfer.  If we avoid
sending the stop command, some cards remain in data transfer mode, and
refuse to accept further read/write commands.

Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>

diff --git a/drivers/mmc/imxmmc.c b/drivers/mmc/imxmmc.c
--- a/drivers/mmc/imxmmc.c
+++ b/drivers/mmc/imxmmc.c
@@ -529,7 +529,7 @@ static int imxmci_data_done(struct imxmc
 
 	data_error = imxmci_finish_data(host, stat);
 
-	if (host->req->stop && (data_error == MMC_ERR_NONE)) {
+	if (host->req->stop) {
 		imxmci_stop_clock(host);
 		imxmci_start_cmd(host, host->req->stop, 0);
 	} else {
diff --git a/drivers/mmc/pxamci.c b/drivers/mmc/pxamci.c
--- a/drivers/mmc/pxamci.c
+++ b/drivers/mmc/pxamci.c
@@ -291,7 +291,7 @@ static int pxamci_data_done(struct pxamc
 	pxamci_disable_irq(host, DATA_TRAN_DONE);
 
 	host->data = NULL;
-	if (host->mrq->stop && data->error == MMC_ERR_NONE) {
+	if (host->mrq->stop) {
 		pxamci_stop_clock(host);
 		pxamci_start_cmd(host, host->mrq->stop, 0);
 	} else {


